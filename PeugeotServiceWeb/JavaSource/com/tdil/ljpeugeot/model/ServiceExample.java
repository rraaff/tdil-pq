package com.tdil.ljpeugeot.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

public class ServiceExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table SERVICE
	 * @mbggenerated  Fri Jan 31 19:31:54 ART 2014
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table SERVICE
	 * @mbggenerated  Fri Jan 31 19:31:54 ART 2014
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table SERVICE
	 * @mbggenerated  Fri Jan 31 19:31:54 ART 2014
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table SERVICE
	 * @mbggenerated  Fri Jan 31 19:31:54 ART 2014
	 */
	public ServiceExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table SERVICE
	 * @mbggenerated  Fri Jan 31 19:31:54 ART 2014
	 */
	protected ServiceExample(ServiceExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
		this.distinct = example.distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table SERVICE
	 * @mbggenerated  Fri Jan 31 19:31:54 ART 2014
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table SERVICE
	 * @mbggenerated  Fri Jan 31 19:31:54 ART 2014
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table SERVICE
	 * @mbggenerated  Fri Jan 31 19:31:54 ART 2014
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table SERVICE
	 * @mbggenerated  Fri Jan 31 19:31:54 ART 2014
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table SERVICE
	 * @mbggenerated  Fri Jan 31 19:31:54 ART 2014
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table SERVICE
	 * @mbggenerated  Fri Jan 31 19:31:54 ART 2014
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table SERVICE
	 * @mbggenerated  Fri Jan 31 19:31:54 ART 2014
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table SERVICE
	 * @mbggenerated  Fri Jan 31 19:31:54 ART 2014
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table SERVICE
	 * @mbggenerated  Fri Jan 31 19:31:54 ART 2014
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table SERVICE
	 * @mbggenerated  Fri Jan 31 19:31:54 ART 2014
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table SERVICE
	 * @mbggenerated  Fri Jan 31 19:31:54 ART 2014
	 */
	protected abstract static class GeneratedCriteria {
		protected List<String> criteriaWithoutValue;
		protected List<Map<String, Object>> criteriaWithSingleValue;
		protected List<Map<String, Object>> criteriaWithListValue;
		protected List<Map<String, Object>> criteriaWithBetweenValue;

		protected GeneratedCriteria() {
			super();
			criteriaWithoutValue = new ArrayList<String>();
			criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
			criteriaWithListValue = new ArrayList<Map<String, Object>>();
			criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0 || criteriaWithSingleValue.size() > 0 || criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List<String> getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List<Map<String, Object>> getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List<Map<String, Object>> getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List<Map<String, Object>> getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition, List<? extends Object> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property + " cannot be null or empty");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			List<Object> list = new ArrayList<Object>();
			list.add(value1);
			list.add(value2);
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		protected void addCriterionForJDBCDate(String condition, Date value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value.getTime()), property);
		}

		protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property + " cannot be null or empty");
			}
			List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
			Iterator<Date> iter = values.iterator();
			while (iter.hasNext()) {
				dateList.add(new java.sql.Date(iter.next().getTime()));
			}
			addCriterion(condition, dateList, property);
		}

		protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
		}

		public Criteria andIdIsNull() {
			addCriterion("serv.id is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("serv.id is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("serv.id =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("serv.id <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("serv.id >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("serv.id >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("serv.id <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("serv.id <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Integer> values) {
			addCriterion("serv.id in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Integer> values) {
			addCriterion("serv.id not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("serv.id between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("serv.id not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdVechicleIsNull() {
			addCriterion("serv.id_vechicle is null");
			return (Criteria) this;
		}

		public Criteria andIdVechicleIsNotNull() {
			addCriterion("serv.id_vechicle is not null");
			return (Criteria) this;
		}

		public Criteria andIdVechicleEqualTo(Integer value) {
			addCriterion("serv.id_vechicle =", value, "idVechicle");
			return (Criteria) this;
		}

		public Criteria andIdVechicleNotEqualTo(Integer value) {
			addCriterion("serv.id_vechicle <>", value, "idVechicle");
			return (Criteria) this;
		}

		public Criteria andIdVechicleGreaterThan(Integer value) {
			addCriterion("serv.id_vechicle >", value, "idVechicle");
			return (Criteria) this;
		}

		public Criteria andIdVechicleGreaterThanOrEqualTo(Integer value) {
			addCriterion("serv.id_vechicle >=", value, "idVechicle");
			return (Criteria) this;
		}

		public Criteria andIdVechicleLessThan(Integer value) {
			addCriterion("serv.id_vechicle <", value, "idVechicle");
			return (Criteria) this;
		}

		public Criteria andIdVechicleLessThanOrEqualTo(Integer value) {
			addCriterion("serv.id_vechicle <=", value, "idVechicle");
			return (Criteria) this;
		}

		public Criteria andIdVechicleIn(List<Integer> values) {
			addCriterion("serv.id_vechicle in", values, "idVechicle");
			return (Criteria) this;
		}

		public Criteria andIdVechicleNotIn(List<Integer> values) {
			addCriterion("serv.id_vechicle not in", values, "idVechicle");
			return (Criteria) this;
		}

		public Criteria andIdVechicleBetween(Integer value1, Integer value2) {
			addCriterion("serv.id_vechicle between", value1, value2, "idVechicle");
			return (Criteria) this;
		}

		public Criteria andIdVechicleNotBetween(Integer value1, Integer value2) {
			addCriterion("serv.id_vechicle not between", value1, value2, "idVechicle");
			return (Criteria) this;
		}

		public Criteria andKmIsNull() {
			addCriterion("serv.km is null");
			return (Criteria) this;
		}

		public Criteria andKmIsNotNull() {
			addCriterion("serv.km is not null");
			return (Criteria) this;
		}

		public Criteria andKmEqualTo(Integer value) {
			addCriterion("serv.km =", value, "km");
			return (Criteria) this;
		}

		public Criteria andKmNotEqualTo(Integer value) {
			addCriterion("serv.km <>", value, "km");
			return (Criteria) this;
		}

		public Criteria andKmGreaterThan(Integer value) {
			addCriterion("serv.km >", value, "km");
			return (Criteria) this;
		}

		public Criteria andKmGreaterThanOrEqualTo(Integer value) {
			addCriterion("serv.km >=", value, "km");
			return (Criteria) this;
		}

		public Criteria andKmLessThan(Integer value) {
			addCriterion("serv.km <", value, "km");
			return (Criteria) this;
		}

		public Criteria andKmLessThanOrEqualTo(Integer value) {
			addCriterion("serv.km <=", value, "km");
			return (Criteria) this;
		}

		public Criteria andKmIn(List<Integer> values) {
			addCriterion("serv.km in", values, "km");
			return (Criteria) this;
		}

		public Criteria andKmNotIn(List<Integer> values) {
			addCriterion("serv.km not in", values, "km");
			return (Criteria) this;
		}

		public Criteria andKmBetween(Integer value1, Integer value2) {
			addCriterion("serv.km between", value1, value2, "km");
			return (Criteria) this;
		}

		public Criteria andKmNotBetween(Integer value1, Integer value2) {
			addCriterion("serv.km not between", value1, value2, "km");
			return (Criteria) this;
		}

		public Criteria andServicedateIsNull() {
			addCriterion("serv.serviceDate is null");
			return (Criteria) this;
		}

		public Criteria andServicedateIsNotNull() {
			addCriterion("serv.serviceDate is not null");
			return (Criteria) this;
		}

		public Criteria andServicedateEqualTo(Date value) {
			addCriterionForJDBCDate("serv.serviceDate =", value, "servicedate");
			return (Criteria) this;
		}

		public Criteria andServicedateNotEqualTo(Date value) {
			addCriterionForJDBCDate("serv.serviceDate <>", value, "servicedate");
			return (Criteria) this;
		}

		public Criteria andServicedateGreaterThan(Date value) {
			addCriterionForJDBCDate("serv.serviceDate >", value, "servicedate");
			return (Criteria) this;
		}

		public Criteria andServicedateGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("serv.serviceDate >=", value, "servicedate");
			return (Criteria) this;
		}

		public Criteria andServicedateLessThan(Date value) {
			addCriterionForJDBCDate("serv.serviceDate <", value, "servicedate");
			return (Criteria) this;
		}

		public Criteria andServicedateLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("serv.serviceDate <=", value, "servicedate");
			return (Criteria) this;
		}

		public Criteria andServicedateIn(List<Date> values) {
			addCriterionForJDBCDate("serv.serviceDate in", values, "servicedate");
			return (Criteria) this;
		}

		public Criteria andServicedateNotIn(List<Date> values) {
			addCriterionForJDBCDate("serv.serviceDate not in", values, "servicedate");
			return (Criteria) this;
		}

		public Criteria andServicedateBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("serv.serviceDate between", value1, value2, "servicedate");
			return (Criteria) this;
		}

		public Criteria andServicedateNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("serv.serviceDate not between", value1, value2, "servicedate");
			return (Criteria) this;
		}

		public Criteria andDeletedIsNull() {
			addCriterion("serv.deleted is null");
			return (Criteria) this;
		}

		public Criteria andDeletedIsNotNull() {
			addCriterion("serv.deleted is not null");
			return (Criteria) this;
		}

		public Criteria andDeletedEqualTo(Integer value) {
			addCriterion("serv.deleted =", value, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedNotEqualTo(Integer value) {
			addCriterion("serv.deleted <>", value, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedGreaterThan(Integer value) {
			addCriterion("serv.deleted >", value, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedGreaterThanOrEqualTo(Integer value) {
			addCriterion("serv.deleted >=", value, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedLessThan(Integer value) {
			addCriterion("serv.deleted <", value, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedLessThanOrEqualTo(Integer value) {
			addCriterion("serv.deleted <=", value, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedIn(List<Integer> values) {
			addCriterion("serv.deleted in", values, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedNotIn(List<Integer> values) {
			addCriterion("serv.deleted not in", values, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedBetween(Integer value1, Integer value2) {
			addCriterion("serv.deleted between", value1, value2, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedNotBetween(Integer value1, Integer value2) {
			addCriterion("serv.deleted not between", value1, value2, "deleted");
			return (Criteria) this;
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table SERVICE
     *
     * @mbggenerated do_not_delete_during_merge Fri Jan 31 08:03:00 ART 2014
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}