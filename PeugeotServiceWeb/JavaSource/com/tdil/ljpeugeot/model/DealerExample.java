package com.tdil.ljpeugeot.model;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class DealerExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table DEALER
	 * @mbggenerated  Sun Feb 02 11:05:09 ART 2014
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table DEALER
	 * @mbggenerated  Sun Feb 02 11:05:09 ART 2014
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table DEALER
	 * @mbggenerated  Sun Feb 02 11:05:09 ART 2014
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table DEALER
	 * @mbggenerated  Sun Feb 02 11:05:09 ART 2014
	 */
	public DealerExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table DEALER
	 * @mbggenerated  Sun Feb 02 11:05:09 ART 2014
	 */
	protected DealerExample(DealerExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
		this.distinct = example.distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table DEALER
	 * @mbggenerated  Sun Feb 02 11:05:09 ART 2014
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table DEALER
	 * @mbggenerated  Sun Feb 02 11:05:09 ART 2014
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table DEALER
	 * @mbggenerated  Sun Feb 02 11:05:09 ART 2014
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table DEALER
	 * @mbggenerated  Sun Feb 02 11:05:09 ART 2014
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table DEALER
	 * @mbggenerated  Sun Feb 02 11:05:09 ART 2014
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table DEALER
	 * @mbggenerated  Sun Feb 02 11:05:09 ART 2014
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table DEALER
	 * @mbggenerated  Sun Feb 02 11:05:09 ART 2014
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table DEALER
	 * @mbggenerated  Sun Feb 02 11:05:09 ART 2014
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table DEALER
	 * @mbggenerated  Sun Feb 02 11:05:09 ART 2014
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table DEALER
	 * @mbggenerated  Sun Feb 02 11:05:09 ART 2014
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table DEALER
	 * @mbggenerated  Sun Feb 02 11:05:09 ART 2014
	 */
	protected abstract static class GeneratedCriteria {
		protected List<String> criteriaWithoutValue;
		protected List<Map<String, Object>> criteriaWithSingleValue;
		protected List<Map<String, Object>> criteriaWithListValue;
		protected List<Map<String, Object>> criteriaWithBetweenValue;

		protected GeneratedCriteria() {
			super();
			criteriaWithoutValue = new ArrayList<String>();
			criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
			criteriaWithListValue = new ArrayList<Map<String, Object>>();
			criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0 || criteriaWithSingleValue.size() > 0 || criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List<String> getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List<Map<String, Object>> getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List<Map<String, Object>> getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List<Map<String, Object>> getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition, List<? extends Object> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property + " cannot be null or empty");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			List<Object> list = new ArrayList<Object>();
			list.add(value1);
			list.add(value2);
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andIdIsNull() {
			addCriterion("deal.id is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("deal.id is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("deal.id =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("deal.id <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("deal.id >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("deal.id >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("deal.id <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("deal.id <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Integer> values) {
			addCriterion("deal.id in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Integer> values) {
			addCriterion("deal.id not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("deal.id between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("deal.id not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdDataImportIsNull() {
			addCriterion("deal.id_data_import is null");
			return (Criteria) this;
		}

		public Criteria andIdDataImportIsNotNull() {
			addCriterion("deal.id_data_import is not null");
			return (Criteria) this;
		}

		public Criteria andIdDataImportEqualTo(Integer value) {
			addCriterion("deal.id_data_import =", value, "idDataImport");
			return (Criteria) this;
		}

		public Criteria andIdDataImportNotEqualTo(Integer value) {
			addCriterion("deal.id_data_import <>", value, "idDataImport");
			return (Criteria) this;
		}

		public Criteria andIdDataImportGreaterThan(Integer value) {
			addCriterion("deal.id_data_import >", value, "idDataImport");
			return (Criteria) this;
		}

		public Criteria andIdDataImportGreaterThanOrEqualTo(Integer value) {
			addCriterion("deal.id_data_import >=", value, "idDataImport");
			return (Criteria) this;
		}

		public Criteria andIdDataImportLessThan(Integer value) {
			addCriterion("deal.id_data_import <", value, "idDataImport");
			return (Criteria) this;
		}

		public Criteria andIdDataImportLessThanOrEqualTo(Integer value) {
			addCriterion("deal.id_data_import <=", value, "idDataImport");
			return (Criteria) this;
		}

		public Criteria andIdDataImportIn(List<Integer> values) {
			addCriterion("deal.id_data_import in", values, "idDataImport");
			return (Criteria) this;
		}

		public Criteria andIdDataImportNotIn(List<Integer> values) {
			addCriterion("deal.id_data_import not in", values, "idDataImport");
			return (Criteria) this;
		}

		public Criteria andIdDataImportBetween(Integer value1, Integer value2) {
			addCriterion("deal.id_data_import between", value1, value2, "idDataImport");
			return (Criteria) this;
		}

		public Criteria andIdDataImportNotBetween(Integer value1, Integer value2) {
			addCriterion("deal.id_data_import not between", value1, value2, "idDataImport");
			return (Criteria) this;
		}

		public Criteria andNameIsNull() {
			addCriterion("deal.name is null");
			return (Criteria) this;
		}

		public Criteria andNameIsNotNull() {
			addCriterion("deal.name is not null");
			return (Criteria) this;
		}

		public Criteria andNameEqualTo(String value) {
			addCriterion("deal.name =", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotEqualTo(String value) {
			addCriterion("deal.name <>", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameGreaterThan(String value) {
			addCriterion("deal.name >", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameGreaterThanOrEqualTo(String value) {
			addCriterion("deal.name >=", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameLessThan(String value) {
			addCriterion("deal.name <", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameLessThanOrEqualTo(String value) {
			addCriterion("deal.name <=", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameLike(String value) {
			addCriterion("deal.name like", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotLike(String value) {
			addCriterion("deal.name not like", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameIn(List<String> values) {
			addCriterion("deal.name in", values, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotIn(List<String> values) {
			addCriterion("deal.name not in", values, "name");
			return (Criteria) this;
		}

		public Criteria andNameBetween(String value1, String value2) {
			addCriterion("deal.name between", value1, value2, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotBetween(String value1, String value2) {
			addCriterion("deal.name not between", value1, value2, "name");
			return (Criteria) this;
		}

		public Criteria andAddressIsNull() {
			addCriterion("deal.address is null");
			return (Criteria) this;
		}

		public Criteria andAddressIsNotNull() {
			addCriterion("deal.address is not null");
			return (Criteria) this;
		}

		public Criteria andAddressEqualTo(String value) {
			addCriterion("deal.address =", value, "address");
			return (Criteria) this;
		}

		public Criteria andAddressNotEqualTo(String value) {
			addCriterion("deal.address <>", value, "address");
			return (Criteria) this;
		}

		public Criteria andAddressGreaterThan(String value) {
			addCriterion("deal.address >", value, "address");
			return (Criteria) this;
		}

		public Criteria andAddressGreaterThanOrEqualTo(String value) {
			addCriterion("deal.address >=", value, "address");
			return (Criteria) this;
		}

		public Criteria andAddressLessThan(String value) {
			addCriterion("deal.address <", value, "address");
			return (Criteria) this;
		}

		public Criteria andAddressLessThanOrEqualTo(String value) {
			addCriterion("deal.address <=", value, "address");
			return (Criteria) this;
		}

		public Criteria andAddressLike(String value) {
			addCriterion("deal.address like", value, "address");
			return (Criteria) this;
		}

		public Criteria andAddressNotLike(String value) {
			addCriterion("deal.address not like", value, "address");
			return (Criteria) this;
		}

		public Criteria andAddressIn(List<String> values) {
			addCriterion("deal.address in", values, "address");
			return (Criteria) this;
		}

		public Criteria andAddressNotIn(List<String> values) {
			addCriterion("deal.address not in", values, "address");
			return (Criteria) this;
		}

		public Criteria andAddressBetween(String value1, String value2) {
			addCriterion("deal.address between", value1, value2, "address");
			return (Criteria) this;
		}

		public Criteria andAddressNotBetween(String value1, String value2) {
			addCriterion("deal.address not between", value1, value2, "address");
			return (Criteria) this;
		}

		public Criteria andEmailIsNull() {
			addCriterion("deal.email is null");
			return (Criteria) this;
		}

		public Criteria andEmailIsNotNull() {
			addCriterion("deal.email is not null");
			return (Criteria) this;
		}

		public Criteria andEmailEqualTo(String value) {
			addCriterion("deal.email =", value, "email");
			return (Criteria) this;
		}

		public Criteria andEmailNotEqualTo(String value) {
			addCriterion("deal.email <>", value, "email");
			return (Criteria) this;
		}

		public Criteria andEmailGreaterThan(String value) {
			addCriterion("deal.email >", value, "email");
			return (Criteria) this;
		}

		public Criteria andEmailGreaterThanOrEqualTo(String value) {
			addCriterion("deal.email >=", value, "email");
			return (Criteria) this;
		}

		public Criteria andEmailLessThan(String value) {
			addCriterion("deal.email <", value, "email");
			return (Criteria) this;
		}

		public Criteria andEmailLessThanOrEqualTo(String value) {
			addCriterion("deal.email <=", value, "email");
			return (Criteria) this;
		}

		public Criteria andEmailLike(String value) {
			addCriterion("deal.email like", value, "email");
			return (Criteria) this;
		}

		public Criteria andEmailNotLike(String value) {
			addCriterion("deal.email not like", value, "email");
			return (Criteria) this;
		}

		public Criteria andEmailIn(List<String> values) {
			addCriterion("deal.email in", values, "email");
			return (Criteria) this;
		}

		public Criteria andEmailNotIn(List<String> values) {
			addCriterion("deal.email not in", values, "email");
			return (Criteria) this;
		}

		public Criteria andEmailBetween(String value1, String value2) {
			addCriterion("deal.email between", value1, value2, "email");
			return (Criteria) this;
		}

		public Criteria andEmailNotBetween(String value1, String value2) {
			addCriterion("deal.email not between", value1, value2, "email");
			return (Criteria) this;
		}

		public Criteria andPhoneIsNull() {
			addCriterion("deal.phone is null");
			return (Criteria) this;
		}

		public Criteria andPhoneIsNotNull() {
			addCriterion("deal.phone is not null");
			return (Criteria) this;
		}

		public Criteria andPhoneEqualTo(String value) {
			addCriterion("deal.phone =", value, "phone");
			return (Criteria) this;
		}

		public Criteria andPhoneNotEqualTo(String value) {
			addCriterion("deal.phone <>", value, "phone");
			return (Criteria) this;
		}

		public Criteria andPhoneGreaterThan(String value) {
			addCriterion("deal.phone >", value, "phone");
			return (Criteria) this;
		}

		public Criteria andPhoneGreaterThanOrEqualTo(String value) {
			addCriterion("deal.phone >=", value, "phone");
			return (Criteria) this;
		}

		public Criteria andPhoneLessThan(String value) {
			addCriterion("deal.phone <", value, "phone");
			return (Criteria) this;
		}

		public Criteria andPhoneLessThanOrEqualTo(String value) {
			addCriterion("deal.phone <=", value, "phone");
			return (Criteria) this;
		}

		public Criteria andPhoneLike(String value) {
			addCriterion("deal.phone like", value, "phone");
			return (Criteria) this;
		}

		public Criteria andPhoneNotLike(String value) {
			addCriterion("deal.phone not like", value, "phone");
			return (Criteria) this;
		}

		public Criteria andPhoneIn(List<String> values) {
			addCriterion("deal.phone in", values, "phone");
			return (Criteria) this;
		}

		public Criteria andPhoneNotIn(List<String> values) {
			addCriterion("deal.phone not in", values, "phone");
			return (Criteria) this;
		}

		public Criteria andPhoneBetween(String value1, String value2) {
			addCriterion("deal.phone between", value1, value2, "phone");
			return (Criteria) this;
		}

		public Criteria andPhoneNotBetween(String value1, String value2) {
			addCriterion("deal.phone not between", value1, value2, "phone");
			return (Criteria) this;
		}

		public Criteria andIdCityIsNull() {
			addCriterion("deal.id_city is null");
			return (Criteria) this;
		}

		public Criteria andIdCityIsNotNull() {
			addCriterion("deal.id_city is not null");
			return (Criteria) this;
		}

		public Criteria andIdCityEqualTo(Integer value) {
			addCriterion("deal.id_city =", value, "idCity");
			return (Criteria) this;
		}

		public Criteria andIdCityNotEqualTo(Integer value) {
			addCriterion("deal.id_city <>", value, "idCity");
			return (Criteria) this;
		}

		public Criteria andIdCityGreaterThan(Integer value) {
			addCriterion("deal.id_city >", value, "idCity");
			return (Criteria) this;
		}

		public Criteria andIdCityGreaterThanOrEqualTo(Integer value) {
			addCriterion("deal.id_city >=", value, "idCity");
			return (Criteria) this;
		}

		public Criteria andIdCityLessThan(Integer value) {
			addCriterion("deal.id_city <", value, "idCity");
			return (Criteria) this;
		}

		public Criteria andIdCityLessThanOrEqualTo(Integer value) {
			addCriterion("deal.id_city <=", value, "idCity");
			return (Criteria) this;
		}

		public Criteria andIdCityIn(List<Integer> values) {
			addCriterion("deal.id_city in", values, "idCity");
			return (Criteria) this;
		}

		public Criteria andIdCityNotIn(List<Integer> values) {
			addCriterion("deal.id_city not in", values, "idCity");
			return (Criteria) this;
		}

		public Criteria andIdCityBetween(Integer value1, Integer value2) {
			addCriterion("deal.id_city between", value1, value2, "idCity");
			return (Criteria) this;
		}

		public Criteria andIdCityNotBetween(Integer value1, Integer value2) {
			addCriterion("deal.id_city not between", value1, value2, "idCity");
			return (Criteria) this;
		}

		public Criteria andLatIsNull() {
			addCriterion("deal.lat is null");
			return (Criteria) this;
		}

		public Criteria andLatIsNotNull() {
			addCriterion("deal.lat is not null");
			return (Criteria) this;
		}

		public Criteria andLatEqualTo(BigDecimal value) {
			addCriterion("deal.lat =", value, "lat");
			return (Criteria) this;
		}

		public Criteria andLatNotEqualTo(BigDecimal value) {
			addCriterion("deal.lat <>", value, "lat");
			return (Criteria) this;
		}

		public Criteria andLatGreaterThan(BigDecimal value) {
			addCriterion("deal.lat >", value, "lat");
			return (Criteria) this;
		}

		public Criteria andLatGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("deal.lat >=", value, "lat");
			return (Criteria) this;
		}

		public Criteria andLatLessThan(BigDecimal value) {
			addCriterion("deal.lat <", value, "lat");
			return (Criteria) this;
		}

		public Criteria andLatLessThanOrEqualTo(BigDecimal value) {
			addCriterion("deal.lat <=", value, "lat");
			return (Criteria) this;
		}

		public Criteria andLatIn(List<BigDecimal> values) {
			addCriterion("deal.lat in", values, "lat");
			return (Criteria) this;
		}

		public Criteria andLatNotIn(List<BigDecimal> values) {
			addCriterion("deal.lat not in", values, "lat");
			return (Criteria) this;
		}

		public Criteria andLatBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("deal.lat between", value1, value2, "lat");
			return (Criteria) this;
		}

		public Criteria andLatNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("deal.lat not between", value1, value2, "lat");
			return (Criteria) this;
		}

		public Criteria andLonIsNull() {
			addCriterion("deal.lon is null");
			return (Criteria) this;
		}

		public Criteria andLonIsNotNull() {
			addCriterion("deal.lon is not null");
			return (Criteria) this;
		}

		public Criteria andLonEqualTo(BigDecimal value) {
			addCriterion("deal.lon =", value, "lon");
			return (Criteria) this;
		}

		public Criteria andLonNotEqualTo(BigDecimal value) {
			addCriterion("deal.lon <>", value, "lon");
			return (Criteria) this;
		}

		public Criteria andLonGreaterThan(BigDecimal value) {
			addCriterion("deal.lon >", value, "lon");
			return (Criteria) this;
		}

		public Criteria andLonGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("deal.lon >=", value, "lon");
			return (Criteria) this;
		}

		public Criteria andLonLessThan(BigDecimal value) {
			addCriterion("deal.lon <", value, "lon");
			return (Criteria) this;
		}

		public Criteria andLonLessThanOrEqualTo(BigDecimal value) {
			addCriterion("deal.lon <=", value, "lon");
			return (Criteria) this;
		}

		public Criteria andLonIn(List<BigDecimal> values) {
			addCriterion("deal.lon in", values, "lon");
			return (Criteria) this;
		}

		public Criteria andLonNotIn(List<BigDecimal> values) {
			addCriterion("deal.lon not in", values, "lon");
			return (Criteria) this;
		}

		public Criteria andLonBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("deal.lon between", value1, value2, "lon");
			return (Criteria) this;
		}

		public Criteria andLonNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("deal.lon not between", value1, value2, "lon");
			return (Criteria) this;
		}

		public Criteria andDeletedIsNull() {
			addCriterion("deal.deleted is null");
			return (Criteria) this;
		}

		public Criteria andDeletedIsNotNull() {
			addCriterion("deal.deleted is not null");
			return (Criteria) this;
		}

		public Criteria andDeletedEqualTo(Integer value) {
			addCriterion("deal.deleted =", value, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedNotEqualTo(Integer value) {
			addCriterion("deal.deleted <>", value, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedGreaterThan(Integer value) {
			addCriterion("deal.deleted >", value, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedGreaterThanOrEqualTo(Integer value) {
			addCriterion("deal.deleted >=", value, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedLessThan(Integer value) {
			addCriterion("deal.deleted <", value, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedLessThanOrEqualTo(Integer value) {
			addCriterion("deal.deleted <=", value, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedIn(List<Integer> values) {
			addCriterion("deal.deleted in", values, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedNotIn(List<Integer> values) {
			addCriterion("deal.deleted not in", values, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedBetween(Integer value1, Integer value2) {
			addCriterion("deal.deleted between", value1, value2, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedNotBetween(Integer value1, Integer value2) {
			addCriterion("deal.deleted not between", value1, value2, "deleted");
			return (Criteria) this;
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table DEALER
     *
     * @mbggenerated do_not_delete_during_merge Thu Jan 30 23:53:15 ART 2014
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}