package com.tdil.ljpeugeot.model;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class AlertExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table ALERT
	 * @mbggenerated  Mon Apr 07 23:00:47 ART 2014
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table ALERT
	 * @mbggenerated  Mon Apr 07 23:00:47 ART 2014
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table ALERT
	 * @mbggenerated  Mon Apr 07 23:00:47 ART 2014
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ALERT
	 * @mbggenerated  Mon Apr 07 23:00:47 ART 2014
	 */
	public AlertExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ALERT
	 * @mbggenerated  Mon Apr 07 23:00:47 ART 2014
	 */
	protected AlertExample(AlertExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
		this.distinct = example.distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ALERT
	 * @mbggenerated  Mon Apr 07 23:00:47 ART 2014
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ALERT
	 * @mbggenerated  Mon Apr 07 23:00:47 ART 2014
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ALERT
	 * @mbggenerated  Mon Apr 07 23:00:47 ART 2014
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ALERT
	 * @mbggenerated  Mon Apr 07 23:00:47 ART 2014
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ALERT
	 * @mbggenerated  Mon Apr 07 23:00:47 ART 2014
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ALERT
	 * @mbggenerated  Mon Apr 07 23:00:47 ART 2014
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ALERT
	 * @mbggenerated  Mon Apr 07 23:00:47 ART 2014
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ALERT
	 * @mbggenerated  Mon Apr 07 23:00:47 ART 2014
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ALERT
	 * @mbggenerated  Mon Apr 07 23:00:47 ART 2014
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ALERT
	 * @mbggenerated  Mon Apr 07 23:00:47 ART 2014
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table ALERT
	 * @mbggenerated  Mon Apr 07 23:00:47 ART 2014
	 */
	protected abstract static class GeneratedCriteria {
		protected List<String> criteriaWithoutValue;
		protected List<Map<String, Object>> criteriaWithSingleValue;
		protected List<Map<String, Object>> criteriaWithListValue;
		protected List<Map<String, Object>> criteriaWithBetweenValue;

		protected GeneratedCriteria() {
			super();
			criteriaWithoutValue = new ArrayList<String>();
			criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
			criteriaWithListValue = new ArrayList<Map<String, Object>>();
			criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0 || criteriaWithSingleValue.size() > 0 || criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List<String> getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List<Map<String, Object>> getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List<Map<String, Object>> getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List<Map<String, Object>> getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition, List<? extends Object> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property + " cannot be null or empty");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			List<Object> list = new ArrayList<Object>();
			list.add(value1);
			list.add(value2);
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andIdIsNull() {
			addCriterion("al.id is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("al.id is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("al.id =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("al.id <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("al.id >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("al.id >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("al.id <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("al.id <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Integer> values) {
			addCriterion("al.id in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Integer> values) {
			addCriterion("al.id not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("al.id between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("al.id not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdWebsiteuserIsNull() {
			addCriterion("al.id_websiteuser is null");
			return (Criteria) this;
		}

		public Criteria andIdWebsiteuserIsNotNull() {
			addCriterion("al.id_websiteuser is not null");
			return (Criteria) this;
		}

		public Criteria andIdWebsiteuserEqualTo(Integer value) {
			addCriterion("al.id_websiteuser =", value, "idWebsiteuser");
			return (Criteria) this;
		}

		public Criteria andIdWebsiteuserNotEqualTo(Integer value) {
			addCriterion("al.id_websiteuser <>", value, "idWebsiteuser");
			return (Criteria) this;
		}

		public Criteria andIdWebsiteuserGreaterThan(Integer value) {
			addCriterion("al.id_websiteuser >", value, "idWebsiteuser");
			return (Criteria) this;
		}

		public Criteria andIdWebsiteuserGreaterThanOrEqualTo(Integer value) {
			addCriterion("al.id_websiteuser >=", value, "idWebsiteuser");
			return (Criteria) this;
		}

		public Criteria andIdWebsiteuserLessThan(Integer value) {
			addCriterion("al.id_websiteuser <", value, "idWebsiteuser");
			return (Criteria) this;
		}

		public Criteria andIdWebsiteuserLessThanOrEqualTo(Integer value) {
			addCriterion("al.id_websiteuser <=", value, "idWebsiteuser");
			return (Criteria) this;
		}

		public Criteria andIdWebsiteuserIn(List<Integer> values) {
			addCriterion("al.id_websiteuser in", values, "idWebsiteuser");
			return (Criteria) this;
		}

		public Criteria andIdWebsiteuserNotIn(List<Integer> values) {
			addCriterion("al.id_websiteuser not in", values, "idWebsiteuser");
			return (Criteria) this;
		}

		public Criteria andIdWebsiteuserBetween(Integer value1, Integer value2) {
			addCriterion("al.id_websiteuser between", value1, value2, "idWebsiteuser");
			return (Criteria) this;
		}

		public Criteria andIdWebsiteuserNotBetween(Integer value1, Integer value2) {
			addCriterion("al.id_websiteuser not between", value1, value2, "idWebsiteuser");
			return (Criteria) this;
		}

		public Criteria andIdSystemuserIsNull() {
			addCriterion("al.id_systemuser is null");
			return (Criteria) this;
		}

		public Criteria andIdSystemuserIsNotNull() {
			addCriterion("al.id_systemuser is not null");
			return (Criteria) this;
		}

		public Criteria andIdSystemuserEqualTo(Integer value) {
			addCriterion("al.id_systemuser =", value, "idSystemuser");
			return (Criteria) this;
		}

		public Criteria andIdSystemuserNotEqualTo(Integer value) {
			addCriterion("al.id_systemuser <>", value, "idSystemuser");
			return (Criteria) this;
		}

		public Criteria andIdSystemuserGreaterThan(Integer value) {
			addCriterion("al.id_systemuser >", value, "idSystemuser");
			return (Criteria) this;
		}

		public Criteria andIdSystemuserGreaterThanOrEqualTo(Integer value) {
			addCriterion("al.id_systemuser >=", value, "idSystemuser");
			return (Criteria) this;
		}

		public Criteria andIdSystemuserLessThan(Integer value) {
			addCriterion("al.id_systemuser <", value, "idSystemuser");
			return (Criteria) this;
		}

		public Criteria andIdSystemuserLessThanOrEqualTo(Integer value) {
			addCriterion("al.id_systemuser <=", value, "idSystemuser");
			return (Criteria) this;
		}

		public Criteria andIdSystemuserIn(List<Integer> values) {
			addCriterion("al.id_systemuser in", values, "idSystemuser");
			return (Criteria) this;
		}

		public Criteria andIdSystemuserNotIn(List<Integer> values) {
			addCriterion("al.id_systemuser not in", values, "idSystemuser");
			return (Criteria) this;
		}

		public Criteria andIdSystemuserBetween(Integer value1, Integer value2) {
			addCriterion("al.id_systemuser between", value1, value2, "idSystemuser");
			return (Criteria) this;
		}

		public Criteria andIdSystemuserNotBetween(Integer value1, Integer value2) {
			addCriterion("al.id_systemuser not between", value1, value2, "idSystemuser");
			return (Criteria) this;
		}

		public Criteria andCreationdateIsNull() {
			addCriterion("al.creationDate is null");
			return (Criteria) this;
		}

		public Criteria andCreationdateIsNotNull() {
			addCriterion("al.creationDate is not null");
			return (Criteria) this;
		}

		public Criteria andCreationdateEqualTo(Date value) {
			addCriterion("al.creationDate =", value, "creationdate");
			return (Criteria) this;
		}

		public Criteria andCreationdateNotEqualTo(Date value) {
			addCriterion("al.creationDate <>", value, "creationdate");
			return (Criteria) this;
		}

		public Criteria andCreationdateGreaterThan(Date value) {
			addCriterion("al.creationDate >", value, "creationdate");
			return (Criteria) this;
		}

		public Criteria andCreationdateGreaterThanOrEqualTo(Date value) {
			addCriterion("al.creationDate >=", value, "creationdate");
			return (Criteria) this;
		}

		public Criteria andCreationdateLessThan(Date value) {
			addCriterion("al.creationDate <", value, "creationdate");
			return (Criteria) this;
		}

		public Criteria andCreationdateLessThanOrEqualTo(Date value) {
			addCriterion("al.creationDate <=", value, "creationdate");
			return (Criteria) this;
		}

		public Criteria andCreationdateIn(List<Date> values) {
			addCriterion("al.creationDate in", values, "creationdate");
			return (Criteria) this;
		}

		public Criteria andCreationdateNotIn(List<Date> values) {
			addCriterion("al.creationDate not in", values, "creationdate");
			return (Criteria) this;
		}

		public Criteria andCreationdateBetween(Date value1, Date value2) {
			addCriterion("al.creationDate between", value1, value2, "creationdate");
			return (Criteria) this;
		}

		public Criteria andCreationdateNotBetween(Date value1, Date value2) {
			addCriterion("al.creationDate not between", value1, value2, "creationdate");
			return (Criteria) this;
		}

		public Criteria andModificationdateIsNull() {
			addCriterion("al.modificationDate is null");
			return (Criteria) this;
		}

		public Criteria andModificationdateIsNotNull() {
			addCriterion("al.modificationDate is not null");
			return (Criteria) this;
		}

		public Criteria andModificationdateEqualTo(Date value) {
			addCriterion("al.modificationDate =", value, "modificationdate");
			return (Criteria) this;
		}

		public Criteria andModificationdateNotEqualTo(Date value) {
			addCriterion("al.modificationDate <>", value, "modificationdate");
			return (Criteria) this;
		}

		public Criteria andModificationdateGreaterThan(Date value) {
			addCriterion("al.modificationDate >", value, "modificationdate");
			return (Criteria) this;
		}

		public Criteria andModificationdateGreaterThanOrEqualTo(Date value) {
			addCriterion("al.modificationDate >=", value, "modificationdate");
			return (Criteria) this;
		}

		public Criteria andModificationdateLessThan(Date value) {
			addCriterion("al.modificationDate <", value, "modificationdate");
			return (Criteria) this;
		}

		public Criteria andModificationdateLessThanOrEqualTo(Date value) {
			addCriterion("al.modificationDate <=", value, "modificationdate");
			return (Criteria) this;
		}

		public Criteria andModificationdateIn(List<Date> values) {
			addCriterion("al.modificationDate in", values, "modificationdate");
			return (Criteria) this;
		}

		public Criteria andModificationdateNotIn(List<Date> values) {
			addCriterion("al.modificationDate not in", values, "modificationdate");
			return (Criteria) this;
		}

		public Criteria andModificationdateBetween(Date value1, Date value2) {
			addCriterion("al.modificationDate between", value1, value2, "modificationdate");
			return (Criteria) this;
		}

		public Criteria andModificationdateNotBetween(Date value1, Date value2) {
			addCriterion("al.modificationDate not between", value1, value2, "modificationdate");
			return (Criteria) this;
		}

		public Criteria andPhonenumberIsNull() {
			addCriterion("al.phoneNumber is null");
			return (Criteria) this;
		}

		public Criteria andPhonenumberIsNotNull() {
			addCriterion("al.phoneNumber is not null");
			return (Criteria) this;
		}

		public Criteria andPhonenumberEqualTo(String value) {
			addCriterion("al.phoneNumber =", value, "phonenumber");
			return (Criteria) this;
		}

		public Criteria andPhonenumberNotEqualTo(String value) {
			addCriterion("al.phoneNumber <>", value, "phonenumber");
			return (Criteria) this;
		}

		public Criteria andPhonenumberGreaterThan(String value) {
			addCriterion("al.phoneNumber >", value, "phonenumber");
			return (Criteria) this;
		}

		public Criteria andPhonenumberGreaterThanOrEqualTo(String value) {
			addCriterion("al.phoneNumber >=", value, "phonenumber");
			return (Criteria) this;
		}

		public Criteria andPhonenumberLessThan(String value) {
			addCriterion("al.phoneNumber <", value, "phonenumber");
			return (Criteria) this;
		}

		public Criteria andPhonenumberLessThanOrEqualTo(String value) {
			addCriterion("al.phoneNumber <=", value, "phonenumber");
			return (Criteria) this;
		}

		public Criteria andPhonenumberLike(String value) {
			addCriterion("al.phoneNumber like", value, "phonenumber");
			return (Criteria) this;
		}

		public Criteria andPhonenumberNotLike(String value) {
			addCriterion("al.phoneNumber not like", value, "phonenumber");
			return (Criteria) this;
		}

		public Criteria andPhonenumberIn(List<String> values) {
			addCriterion("al.phoneNumber in", values, "phonenumber");
			return (Criteria) this;
		}

		public Criteria andPhonenumberNotIn(List<String> values) {
			addCriterion("al.phoneNumber not in", values, "phonenumber");
			return (Criteria) this;
		}

		public Criteria andPhonenumberBetween(String value1, String value2) {
			addCriterion("al.phoneNumber between", value1, value2, "phonenumber");
			return (Criteria) this;
		}

		public Criteria andPhonenumberNotBetween(String value1, String value2) {
			addCriterion("al.phoneNumber not between", value1, value2, "phonenumber");
			return (Criteria) this;
		}

		public Criteria andLatIsNull() {
			addCriterion("al.lat is null");
			return (Criteria) this;
		}

		public Criteria andLatIsNotNull() {
			addCriterion("al.lat is not null");
			return (Criteria) this;
		}

		public Criteria andLatEqualTo(BigDecimal value) {
			addCriterion("al.lat =", value, "lat");
			return (Criteria) this;
		}

		public Criteria andLatNotEqualTo(BigDecimal value) {
			addCriterion("al.lat <>", value, "lat");
			return (Criteria) this;
		}

		public Criteria andLatGreaterThan(BigDecimal value) {
			addCriterion("al.lat >", value, "lat");
			return (Criteria) this;
		}

		public Criteria andLatGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("al.lat >=", value, "lat");
			return (Criteria) this;
		}

		public Criteria andLatLessThan(BigDecimal value) {
			addCriterion("al.lat <", value, "lat");
			return (Criteria) this;
		}

		public Criteria andLatLessThanOrEqualTo(BigDecimal value) {
			addCriterion("al.lat <=", value, "lat");
			return (Criteria) this;
		}

		public Criteria andLatIn(List<BigDecimal> values) {
			addCriterion("al.lat in", values, "lat");
			return (Criteria) this;
		}

		public Criteria andLatNotIn(List<BigDecimal> values) {
			addCriterion("al.lat not in", values, "lat");
			return (Criteria) this;
		}

		public Criteria andLatBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("al.lat between", value1, value2, "lat");
			return (Criteria) this;
		}

		public Criteria andLatNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("al.lat not between", value1, value2, "lat");
			return (Criteria) this;
		}

		public Criteria andLonIsNull() {
			addCriterion("al.lon is null");
			return (Criteria) this;
		}

		public Criteria andLonIsNotNull() {
			addCriterion("al.lon is not null");
			return (Criteria) this;
		}

		public Criteria andLonEqualTo(BigDecimal value) {
			addCriterion("al.lon =", value, "lon");
			return (Criteria) this;
		}

		public Criteria andLonNotEqualTo(BigDecimal value) {
			addCriterion("al.lon <>", value, "lon");
			return (Criteria) this;
		}

		public Criteria andLonGreaterThan(BigDecimal value) {
			addCriterion("al.lon >", value, "lon");
			return (Criteria) this;
		}

		public Criteria andLonGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("al.lon >=", value, "lon");
			return (Criteria) this;
		}

		public Criteria andLonLessThan(BigDecimal value) {
			addCriterion("al.lon <", value, "lon");
			return (Criteria) this;
		}

		public Criteria andLonLessThanOrEqualTo(BigDecimal value) {
			addCriterion("al.lon <=", value, "lon");
			return (Criteria) this;
		}

		public Criteria andLonIn(List<BigDecimal> values) {
			addCriterion("al.lon in", values, "lon");
			return (Criteria) this;
		}

		public Criteria andLonNotIn(List<BigDecimal> values) {
			addCriterion("al.lon not in", values, "lon");
			return (Criteria) this;
		}

		public Criteria andLonBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("al.lon between", value1, value2, "lon");
			return (Criteria) this;
		}

		public Criteria andLonNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("al.lon not between", value1, value2, "lon");
			return (Criteria) this;
		}

		public Criteria andStatusIsNull() {
			addCriterion("al.status is null");
			return (Criteria) this;
		}

		public Criteria andStatusIsNotNull() {
			addCriterion("al.status is not null");
			return (Criteria) this;
		}

		public Criteria andStatusEqualTo(Integer value) {
			addCriterion("al.status =", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusNotEqualTo(Integer value) {
			addCriterion("al.status <>", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusGreaterThan(Integer value) {
			addCriterion("al.status >", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusGreaterThanOrEqualTo(Integer value) {
			addCriterion("al.status >=", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusLessThan(Integer value) {
			addCriterion("al.status <", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusLessThanOrEqualTo(Integer value) {
			addCriterion("al.status <=", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusIn(List<Integer> values) {
			addCriterion("al.status in", values, "status");
			return (Criteria) this;
		}

		public Criteria andStatusNotIn(List<Integer> values) {
			addCriterion("al.status not in", values, "status");
			return (Criteria) this;
		}

		public Criteria andStatusBetween(Integer value1, Integer value2) {
			addCriterion("al.status between", value1, value2, "status");
			return (Criteria) this;
		}

		public Criteria andStatusNotBetween(Integer value1, Integer value2) {
			addCriterion("al.status not between", value1, value2, "status");
			return (Criteria) this;
		}

		public Criteria andDeletedIsNull() {
			addCriterion("al.deleted is null");
			return (Criteria) this;
		}

		public Criteria andDeletedIsNotNull() {
			addCriterion("al.deleted is not null");
			return (Criteria) this;
		}

		public Criteria andDeletedEqualTo(Integer value) {
			addCriterion("al.deleted =", value, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedNotEqualTo(Integer value) {
			addCriterion("al.deleted <>", value, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedGreaterThan(Integer value) {
			addCriterion("al.deleted >", value, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedGreaterThanOrEqualTo(Integer value) {
			addCriterion("al.deleted >=", value, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedLessThan(Integer value) {
			addCriterion("al.deleted <", value, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedLessThanOrEqualTo(Integer value) {
			addCriterion("al.deleted <=", value, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedIn(List<Integer> values) {
			addCriterion("al.deleted in", values, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedNotIn(List<Integer> values) {
			addCriterion("al.deleted not in", values, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedBetween(Integer value1, Integer value2) {
			addCriterion("al.deleted between", value1, value2, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedNotBetween(Integer value1, Integer value2) {
			addCriterion("al.deleted not between", value1, value2, "deleted");
			return (Criteria) this;
		}

		public Criteria andCommentsIsNull() {
			addCriterion("al.comments is null");
			return (Criteria) this;
		}

		public Criteria andCommentsIsNotNull() {
			addCriterion("al.comments is not null");
			return (Criteria) this;
		}

		public Criteria andCommentsEqualTo(String value) {
			addCriterion("al.comments =", value, "comments");
			return (Criteria) this;
		}

		public Criteria andCommentsNotEqualTo(String value) {
			addCriterion("al.comments <>", value, "comments");
			return (Criteria) this;
		}

		public Criteria andCommentsGreaterThan(String value) {
			addCriterion("al.comments >", value, "comments");
			return (Criteria) this;
		}

		public Criteria andCommentsGreaterThanOrEqualTo(String value) {
			addCriterion("al.comments >=", value, "comments");
			return (Criteria) this;
		}

		public Criteria andCommentsLessThan(String value) {
			addCriterion("al.comments <", value, "comments");
			return (Criteria) this;
		}

		public Criteria andCommentsLessThanOrEqualTo(String value) {
			addCriterion("al.comments <=", value, "comments");
			return (Criteria) this;
		}

		public Criteria andCommentsLike(String value) {
			addCriterion("al.comments like", value, "comments");
			return (Criteria) this;
		}

		public Criteria andCommentsNotLike(String value) {
			addCriterion("al.comments not like", value, "comments");
			return (Criteria) this;
		}

		public Criteria andCommentsIn(List<String> values) {
			addCriterion("al.comments in", values, "comments");
			return (Criteria) this;
		}

		public Criteria andCommentsNotIn(List<String> values) {
			addCriterion("al.comments not in", values, "comments");
			return (Criteria) this;
		}

		public Criteria andCommentsBetween(String value1, String value2) {
			addCriterion("al.comments between", value1, value2, "comments");
			return (Criteria) this;
		}

		public Criteria andCommentsNotBetween(String value1, String value2) {
			addCriterion("al.comments not between", value1, value2, "comments");
			return (Criteria) this;
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ALERT
     *
     * @mbggenerated do_not_delete_during_merge Mon Feb 24 23:12:06 ART 2014
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}