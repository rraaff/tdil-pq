package com.tdil.ljpeugeot.model;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class VLUDataExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table VLU_DATA
	 * @mbggenerated  Wed Jan 22 23:20:56 ART 2014
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table VLU_DATA
	 * @mbggenerated  Wed Jan 22 23:20:56 ART 2014
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table VLU_DATA
	 * @mbggenerated  Wed Jan 22 23:20:56 ART 2014
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table VLU_DATA
	 * @mbggenerated  Wed Jan 22 23:20:56 ART 2014
	 */
	public VLUDataExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table VLU_DATA
	 * @mbggenerated  Wed Jan 22 23:20:56 ART 2014
	 */
	protected VLUDataExample(VLUDataExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
		this.distinct = example.distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table VLU_DATA
	 * @mbggenerated  Wed Jan 22 23:20:56 ART 2014
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table VLU_DATA
	 * @mbggenerated  Wed Jan 22 23:20:56 ART 2014
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table VLU_DATA
	 * @mbggenerated  Wed Jan 22 23:20:56 ART 2014
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table VLU_DATA
	 * @mbggenerated  Wed Jan 22 23:20:56 ART 2014
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table VLU_DATA
	 * @mbggenerated  Wed Jan 22 23:20:56 ART 2014
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table VLU_DATA
	 * @mbggenerated  Wed Jan 22 23:20:56 ART 2014
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table VLU_DATA
	 * @mbggenerated  Wed Jan 22 23:20:56 ART 2014
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table VLU_DATA
	 * @mbggenerated  Wed Jan 22 23:20:56 ART 2014
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table VLU_DATA
	 * @mbggenerated  Wed Jan 22 23:20:56 ART 2014
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table VLU_DATA
	 * @mbggenerated  Wed Jan 22 23:20:56 ART 2014
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table VLU_DATA
	 * @mbggenerated  Wed Jan 22 23:20:56 ART 2014
	 */
	protected abstract static class GeneratedCriteria {
		protected List<String> criteriaWithoutValue;
		protected List<Map<String, Object>> criteriaWithSingleValue;
		protected List<Map<String, Object>> criteriaWithListValue;
		protected List<Map<String, Object>> criteriaWithBetweenValue;

		protected GeneratedCriteria() {
			super();
			criteriaWithoutValue = new ArrayList<String>();
			criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
			criteriaWithListValue = new ArrayList<Map<String, Object>>();
			criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0 || criteriaWithSingleValue.size() > 0 || criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List<String> getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List<Map<String, Object>> getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List<Map<String, Object>> getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List<Map<String, Object>> getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition, List<? extends Object> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property + " cannot be null or empty");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			List<Object> list = new ArrayList<Object>();
			list.add(value1);
			list.add(value2);
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andIdIsNull() {
			addCriterion("vlud.id is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("vlud.id is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("vlud.id =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("vlud.id <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("vlud.id >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("vlud.id >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("vlud.id <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("vlud.id <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Integer> values) {
			addCriterion("vlud.id in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Integer> values) {
			addCriterion("vlud.id not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("vlud.id between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("vlud.id not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andDniIsNull() {
			addCriterion("vlud.dni is null");
			return (Criteria) this;
		}

		public Criteria andDniIsNotNull() {
			addCriterion("vlud.dni is not null");
			return (Criteria) this;
		}

		public Criteria andDniEqualTo(String value) {
			addCriterion("vlud.dni =", value, "dni");
			return (Criteria) this;
		}

		public Criteria andDniNotEqualTo(String value) {
			addCriterion("vlud.dni <>", value, "dni");
			return (Criteria) this;
		}

		public Criteria andDniGreaterThan(String value) {
			addCriterion("vlud.dni >", value, "dni");
			return (Criteria) this;
		}

		public Criteria andDniGreaterThanOrEqualTo(String value) {
			addCriterion("vlud.dni >=", value, "dni");
			return (Criteria) this;
		}

		public Criteria andDniLessThan(String value) {
			addCriterion("vlud.dni <", value, "dni");
			return (Criteria) this;
		}

		public Criteria andDniLessThanOrEqualTo(String value) {
			addCriterion("vlud.dni <=", value, "dni");
			return (Criteria) this;
		}

		public Criteria andDniLike(String value) {
			addCriterion("vlud.dni like", value, "dni");
			return (Criteria) this;
		}

		public Criteria andDniNotLike(String value) {
			addCriterion("vlud.dni not like", value, "dni");
			return (Criteria) this;
		}

		public Criteria andDniIn(List<String> values) {
			addCriterion("vlud.dni in", values, "dni");
			return (Criteria) this;
		}

		public Criteria andDniNotIn(List<String> values) {
			addCriterion("vlud.dni not in", values, "dni");
			return (Criteria) this;
		}

		public Criteria andDniBetween(String value1, String value2) {
			addCriterion("vlud.dni between", value1, value2, "dni");
			return (Criteria) this;
		}

		public Criteria andDniNotBetween(String value1, String value2) {
			addCriterion("vlud.dni not between", value1, value2, "dni");
			return (Criteria) this;
		}

		public Criteria andDomainIsNull() {
			addCriterion("vlud.domain is null");
			return (Criteria) this;
		}

		public Criteria andDomainIsNotNull() {
			addCriterion("vlud.domain is not null");
			return (Criteria) this;
		}

		public Criteria andDomainEqualTo(String value) {
			addCriterion("vlud.domain =", value, "domain");
			return (Criteria) this;
		}

		public Criteria andDomainNotEqualTo(String value) {
			addCriterion("vlud.domain <>", value, "domain");
			return (Criteria) this;
		}

		public Criteria andDomainGreaterThan(String value) {
			addCriterion("vlud.domain >", value, "domain");
			return (Criteria) this;
		}

		public Criteria andDomainGreaterThanOrEqualTo(String value) {
			addCriterion("vlud.domain >=", value, "domain");
			return (Criteria) this;
		}

		public Criteria andDomainLessThan(String value) {
			addCriterion("vlud.domain <", value, "domain");
			return (Criteria) this;
		}

		public Criteria andDomainLessThanOrEqualTo(String value) {
			addCriterion("vlud.domain <=", value, "domain");
			return (Criteria) this;
		}

		public Criteria andDomainLike(String value) {
			addCriterion("vlud.domain like", value, "domain");
			return (Criteria) this;
		}

		public Criteria andDomainNotLike(String value) {
			addCriterion("vlud.domain not like", value, "domain");
			return (Criteria) this;
		}

		public Criteria andDomainIn(List<String> values) {
			addCriterion("vlud.domain in", values, "domain");
			return (Criteria) this;
		}

		public Criteria andDomainNotIn(List<String> values) {
			addCriterion("vlud.domain not in", values, "domain");
			return (Criteria) this;
		}

		public Criteria andDomainBetween(String value1, String value2) {
			addCriterion("vlud.domain between", value1, value2, "domain");
			return (Criteria) this;
		}

		public Criteria andDomainNotBetween(String value1, String value2) {
			addCriterion("vlud.domain not between", value1, value2, "domain");
			return (Criteria) this;
		}

		public Criteria andMessageIsNull() {
			addCriterion("vlud.message is null");
			return (Criteria) this;
		}

		public Criteria andMessageIsNotNull() {
			addCriterion("vlud.message is not null");
			return (Criteria) this;
		}

		public Criteria andMessageEqualTo(String value) {
			addCriterion("vlud.message =", value, "message");
			return (Criteria) this;
		}

		public Criteria andMessageNotEqualTo(String value) {
			addCriterion("vlud.message <>", value, "message");
			return (Criteria) this;
		}

		public Criteria andMessageGreaterThan(String value) {
			addCriterion("vlud.message >", value, "message");
			return (Criteria) this;
		}

		public Criteria andMessageGreaterThanOrEqualTo(String value) {
			addCriterion("vlud.message >=", value, "message");
			return (Criteria) this;
		}

		public Criteria andMessageLessThan(String value) {
			addCriterion("vlud.message <", value, "message");
			return (Criteria) this;
		}

		public Criteria andMessageLessThanOrEqualTo(String value) {
			addCriterion("vlud.message <=", value, "message");
			return (Criteria) this;
		}

		public Criteria andMessageLike(String value) {
			addCriterion("vlud.message like", value, "message");
			return (Criteria) this;
		}

		public Criteria andMessageNotLike(String value) {
			addCriterion("vlud.message not like", value, "message");
			return (Criteria) this;
		}

		public Criteria andMessageIn(List<String> values) {
			addCriterion("vlud.message in", values, "message");
			return (Criteria) this;
		}

		public Criteria andMessageNotIn(List<String> values) {
			addCriterion("vlud.message not in", values, "message");
			return (Criteria) this;
		}

		public Criteria andMessageBetween(String value1, String value2) {
			addCriterion("vlud.message between", value1, value2, "message");
			return (Criteria) this;
		}

		public Criteria andMessageNotBetween(String value1, String value2) {
			addCriterion("vlud.message not between", value1, value2, "message");
			return (Criteria) this;
		}

		public Criteria andIdvluimportIsNull() {
			addCriterion("vlud.idVluImport is null");
			return (Criteria) this;
		}

		public Criteria andIdvluimportIsNotNull() {
			addCriterion("vlud.idVluImport is not null");
			return (Criteria) this;
		}

		public Criteria andIdvluimportEqualTo(Integer value) {
			addCriterion("vlud.idVluImport =", value, "idvluimport");
			return (Criteria) this;
		}

		public Criteria andIdvluimportNotEqualTo(Integer value) {
			addCriterion("vlud.idVluImport <>", value, "idvluimport");
			return (Criteria) this;
		}

		public Criteria andIdvluimportGreaterThan(Integer value) {
			addCriterion("vlud.idVluImport >", value, "idvluimport");
			return (Criteria) this;
		}

		public Criteria andIdvluimportGreaterThanOrEqualTo(Integer value) {
			addCriterion("vlud.idVluImport >=", value, "idvluimport");
			return (Criteria) this;
		}

		public Criteria andIdvluimportLessThan(Integer value) {
			addCriterion("vlud.idVluImport <", value, "idvluimport");
			return (Criteria) this;
		}

		public Criteria andIdvluimportLessThanOrEqualTo(Integer value) {
			addCriterion("vlud.idVluImport <=", value, "idvluimport");
			return (Criteria) this;
		}

		public Criteria andIdvluimportIn(List<Integer> values) {
			addCriterion("vlud.idVluImport in", values, "idvluimport");
			return (Criteria) this;
		}

		public Criteria andIdvluimportNotIn(List<Integer> values) {
			addCriterion("vlud.idVluImport not in", values, "idvluimport");
			return (Criteria) this;
		}

		public Criteria andIdvluimportBetween(Integer value1, Integer value2) {
			addCriterion("vlud.idVluImport between", value1, value2, "idvluimport");
			return (Criteria) this;
		}

		public Criteria andIdvluimportNotBetween(Integer value1, Integer value2) {
			addCriterion("vlud.idVluImport not between", value1, value2, "idvluimport");
			return (Criteria) this;
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table VLU_DATA
     *
     * @mbggenerated do_not_delete_during_merge Sat Jan 18 01:23:42 ART 2014
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}