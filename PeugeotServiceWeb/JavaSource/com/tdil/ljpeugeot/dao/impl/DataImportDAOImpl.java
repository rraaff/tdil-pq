package com.tdil.ljpeugeot.dao.impl;

import com.ibatis.sqlmap.client.SqlMapClient;
import com.tdil.ljpeugeot.dao.DataImportDAO;
import com.tdil.ljpeugeot.model.DataImport;
import com.tdil.ljpeugeot.model.DataImportExample;
import java.sql.SQLException;
import java.util.List;

public class DataImportDAOImpl implements DataImportDAO {

	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table DATA_IMPORT
	 * @mbggenerated  Sun Feb 02 11:05:09 ART 2014
	 */
	private SqlMapClient sqlMapClient;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table DATA_IMPORT
	 * @mbggenerated  Sun Feb 02 11:05:09 ART 2014
	 */
	public DataImportDAOImpl(SqlMapClient sqlMapClient) {
		super();
		this.sqlMapClient = sqlMapClient;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table DATA_IMPORT
	 * @mbggenerated  Sun Feb 02 11:05:09 ART 2014
	 */
	public int countDataImportByExample(DataImportExample example) throws SQLException {
		Integer count = (Integer) sqlMapClient.queryForObject("DATA_IMPORT.countByExample", example);
		return count;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table DATA_IMPORT
	 * @mbggenerated  Sun Feb 02 11:05:09 ART 2014
	 */
	public int deleteDataImportByExample(DataImportExample example) throws SQLException {
		int rows = sqlMapClient.delete("DATA_IMPORT.deleteByExample", example);
		return rows;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table DATA_IMPORT
	 * @mbggenerated  Sun Feb 02 11:05:09 ART 2014
	 */
	public int deleteDataImportByPrimaryKey(Integer id) throws SQLException {
		DataImport _key = new DataImport();
		_key.setId(id);
		int rows = sqlMapClient.delete("DATA_IMPORT.deleteByPrimaryKey", _key);
		return rows;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table DATA_IMPORT
	 * @mbggenerated  Sun Feb 02 11:05:09 ART 2014
	 */
	public Integer insertDataImport(DataImport record) throws SQLException {
		Object newKey = sqlMapClient.insert("DATA_IMPORT.insert", record);
		return (Integer) newKey;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table DATA_IMPORT
	 * @mbggenerated  Sun Feb 02 11:05:09 ART 2014
	 */
	public Integer insertDataImportSelective(DataImport record) throws SQLException {
		Object newKey = sqlMapClient.insert("DATA_IMPORT.insertSelective", record);
		return (Integer) newKey;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table DATA_IMPORT
	 * @mbggenerated  Sun Feb 02 11:05:09 ART 2014
	 */
	@SuppressWarnings("unchecked")
	public List<DataImport> selectDataImportByExample(DataImportExample example) throws SQLException {
		List<DataImport> list = sqlMapClient.queryForList("DATA_IMPORT.selectByExample", example);
		return list;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table DATA_IMPORT
	 * @mbggenerated  Sun Feb 02 11:05:09 ART 2014
	 */
	public DataImport selectDataImportByPrimaryKey(Integer id) throws SQLException {
		DataImport _key = new DataImport();
		_key.setId(id);
		DataImport record = (DataImport) sqlMapClient.queryForObject("DATA_IMPORT.selectByPrimaryKey", _key);
		return record;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table DATA_IMPORT
	 * @mbggenerated  Sun Feb 02 11:05:09 ART 2014
	 */
	public int updateDataImportByExampleSelective(DataImport record, DataImportExample example) throws SQLException {
		UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
		int rows = sqlMapClient.update("DATA_IMPORT.updateByExampleSelective", parms);
		return rows;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table DATA_IMPORT
	 * @mbggenerated  Sun Feb 02 11:05:09 ART 2014
	 */
	public int updateDataImportByExample(DataImport record, DataImportExample example) throws SQLException {
		UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
		int rows = sqlMapClient.update("DATA_IMPORT.updateByExample", parms);
		return rows;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table DATA_IMPORT
	 * @mbggenerated  Sun Feb 02 11:05:09 ART 2014
	 */
	public int updateDataImportByPrimaryKeySelective(DataImport record) throws SQLException {
		int rows = sqlMapClient.update("DATA_IMPORT.updateByPrimaryKeySelective", record);
		return rows;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table DATA_IMPORT
	 * @mbggenerated  Sun Feb 02 11:05:09 ART 2014
	 */
	public int updateDataImportByPrimaryKey(DataImport record) throws SQLException {
		int rows = sqlMapClient.update("DATA_IMPORT.updateByPrimaryKey", record);
		return rows;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table DATA_IMPORT
	 * @mbggenerated  Sun Feb 02 11:05:09 ART 2014
	 */
	protected static class UpdateByExampleParms extends DataImportExample {
		private Object record;

		public UpdateByExampleParms(Object record, DataImportExample example) {
			super(example);
			this.record = record;
		}

		public Object getRecord() {
			return record;
		}
	}
}