package com.tdil.lojack.dao.impl.sqlserver;

import com.ibatis.sqlmap.client.SqlMapClient;
import com.tdil.lojack.dao.SystemUserDAO;
import com.tdil.lojack.model.SystemUser;
import com.tdil.lojack.model.SystemUserExample;
import java.sql.SQLException;
import java.util.List;

public class SystemUserDAOImpl implements SystemUserDAO {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table dbo.SYSTEMUSER
     *
     * @mbggenerated Fri Jul 05 18:45:21 ART 2013
     */
    private SqlMapClient sqlMapClient;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dbo.SYSTEMUSER
     *
     * @mbggenerated Fri Jul 05 18:45:21 ART 2013
     */
    public SystemUserDAOImpl(SqlMapClient sqlMapClient) {
        super();
        this.sqlMapClient = sqlMapClient;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dbo.SYSTEMUSER
     *
     * @mbggenerated Fri Jul 05 18:45:21 ART 2013
     */
    public int countSystemUserByExample(SystemUserExample example) throws SQLException {
        Integer count = (Integer)  sqlMapClient.queryForObject("dbo_SYSTEMUSER.countByExample", example);
        return count;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dbo.SYSTEMUSER
     *
     * @mbggenerated Fri Jul 05 18:45:21 ART 2013
     */
    public int deleteSystemUserByExample(SystemUserExample example) throws SQLException {
        int rows = sqlMapClient.delete("dbo_SYSTEMUSER.deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dbo.SYSTEMUSER
     *
     * @mbggenerated Fri Jul 05 18:45:21 ART 2013
     */
    public int deleteSystemUserByPrimaryKey(Integer id) throws SQLException {
        SystemUser _key = new SystemUser();
        _key.setId(id);
        int rows = sqlMapClient.delete("dbo_SYSTEMUSER.deleteByPrimaryKey", _key);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dbo.SYSTEMUSER
     *
     * @mbggenerated Fri Jul 05 18:45:21 ART 2013
     */
    public Integer insertSystemUser(SystemUser record) throws SQLException {
        Object newKey = sqlMapClient.insert("dbo_SYSTEMUSER.insert", record);
        return (Integer) newKey;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dbo.SYSTEMUSER
     *
     * @mbggenerated Fri Jul 05 18:45:21 ART 2013
     */
    public Integer insertSystemUserSelective(SystemUser record) throws SQLException {
        Object newKey = sqlMapClient.insert("dbo_SYSTEMUSER.insertSelective", record);
        return (Integer) newKey;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dbo.SYSTEMUSER
     *
     * @mbggenerated Fri Jul 05 18:45:21 ART 2013
     */
    @SuppressWarnings("unchecked")
    public List<SystemUser> selectSystemUserByExample(SystemUserExample example) throws SQLException {
        List<SystemUser> list = sqlMapClient.queryForList("dbo_SYSTEMUSER.selectByExample", example);
        return list;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dbo.SYSTEMUSER
     *
     * @mbggenerated Fri Jul 05 18:45:21 ART 2013
     */
    public SystemUser selectSystemUserByPrimaryKey(Integer id) throws SQLException {
        SystemUser _key = new SystemUser();
        _key.setId(id);
        SystemUser record = (SystemUser) sqlMapClient.queryForObject("dbo_SYSTEMUSER.selectByPrimaryKey", _key);
        return record;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dbo.SYSTEMUSER
     *
     * @mbggenerated Fri Jul 05 18:45:21 ART 2013
     */
    public int updateSystemUserByExampleSelective(SystemUser record, SystemUserExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = sqlMapClient.update("dbo_SYSTEMUSER.updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dbo.SYSTEMUSER
     *
     * @mbggenerated Fri Jul 05 18:45:21 ART 2013
     */
    public int updateSystemUserByExample(SystemUser record, SystemUserExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = sqlMapClient.update("dbo_SYSTEMUSER.updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dbo.SYSTEMUSER
     *
     * @mbggenerated Fri Jul 05 18:45:21 ART 2013
     */
    public int updateSystemUserByPrimaryKeySelective(SystemUser record) throws SQLException {
        int rows = sqlMapClient.update("dbo_SYSTEMUSER.updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dbo.SYSTEMUSER
     *
     * @mbggenerated Fri Jul 05 18:45:21 ART 2013
     */
    public int updateSystemUserByPrimaryKey(SystemUser record) throws SQLException {
        int rows = sqlMapClient.update("dbo_SYSTEMUSER.updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table dbo.SYSTEMUSER
     *
     * @mbggenerated Fri Jul 05 18:45:21 ART 2013
     */
    protected static class UpdateByExampleParms extends SystemUserExample {
        private Object record;

        public UpdateByExampleParms(Object record, SystemUserExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
}