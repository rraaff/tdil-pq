package com.tdil.lojack.dao.impl;

import com.ibatis.sqlmap.client.SqlMapClient;
import com.tdil.lojack.dao.AlarmConfDAO;
import com.tdil.lojack.model.AlarmConf;
import com.tdil.lojack.model.AlarmConfExample;
import java.sql.SQLException;
import java.util.List;

public class AlarmConfDAOImpl implements AlarmConfDAO {

	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table ALARM_CONF
	 * @mbggenerated  Tue May 07 20:05:15 ART 2013
	 */
	private SqlMapClient sqlMapClient;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ALARM_CONF
	 * @mbggenerated  Tue May 07 20:05:15 ART 2013
	 */
	public AlarmConfDAOImpl(SqlMapClient sqlMapClient) {
		super();
		this.sqlMapClient = sqlMapClient;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ALARM_CONF
	 * @mbggenerated  Tue May 07 20:05:15 ART 2013
	 */
	public int countAlarmConfByExample(AlarmConfExample example) throws SQLException {
		Integer count = (Integer) sqlMapClient.queryForObject("ALARM_CONF.countByExample", example);
		return count;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ALARM_CONF
	 * @mbggenerated  Tue May 07 20:05:15 ART 2013
	 */
	public int deleteAlarmConfByExample(AlarmConfExample example) throws SQLException {
		int rows = sqlMapClient.delete("ALARM_CONF.deleteByExample", example);
		return rows;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ALARM_CONF
	 * @mbggenerated  Tue May 07 20:05:15 ART 2013
	 */
	public int deleteAlarmConfByPrimaryKey(Integer id) throws SQLException {
		AlarmConf _key = new AlarmConf();
		_key.setId(id);
		int rows = sqlMapClient.delete("ALARM_CONF.deleteByPrimaryKey", _key);
		return rows;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ALARM_CONF
	 * @mbggenerated  Tue May 07 20:05:15 ART 2013
	 */
	public Integer insertAlarmConf(AlarmConf record) throws SQLException {
		Object newKey = sqlMapClient.insert("ALARM_CONF.insert", record);
		return (Integer) newKey;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ALARM_CONF
	 * @mbggenerated  Tue May 07 20:05:15 ART 2013
	 */
	public Integer insertAlarmConfSelective(AlarmConf record) throws SQLException {
		Object newKey = sqlMapClient.insert("ALARM_CONF.insertSelective", record);
		return (Integer) newKey;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ALARM_CONF
	 * @mbggenerated  Tue May 07 20:05:15 ART 2013
	 */
	@SuppressWarnings("unchecked")
	public List<AlarmConf> selectAlarmConfByExample(AlarmConfExample example) throws SQLException {
		List<AlarmConf> list = sqlMapClient.queryForList("ALARM_CONF.selectByExample", example);
		return list;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ALARM_CONF
	 * @mbggenerated  Tue May 07 20:05:15 ART 2013
	 */
	public AlarmConf selectAlarmConfByPrimaryKey(Integer id) throws SQLException {
		AlarmConf _key = new AlarmConf();
		_key.setId(id);
		AlarmConf record = (AlarmConf) sqlMapClient.queryForObject("ALARM_CONF.selectByPrimaryKey", _key);
		return record;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ALARM_CONF
	 * @mbggenerated  Tue May 07 20:05:15 ART 2013
	 */
	public int updateAlarmConfByExampleSelective(AlarmConf record, AlarmConfExample example) throws SQLException {
		UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
		int rows = sqlMapClient.update("ALARM_CONF.updateByExampleSelective", parms);
		return rows;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ALARM_CONF
	 * @mbggenerated  Tue May 07 20:05:15 ART 2013
	 */
	public int updateAlarmConfByExample(AlarmConf record, AlarmConfExample example) throws SQLException {
		UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
		int rows = sqlMapClient.update("ALARM_CONF.updateByExample", parms);
		return rows;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ALARM_CONF
	 * @mbggenerated  Tue May 07 20:05:15 ART 2013
	 */
	public int updateAlarmConfByPrimaryKeySelective(AlarmConf record) throws SQLException {
		int rows = sqlMapClient.update("ALARM_CONF.updateByPrimaryKeySelective", record);
		return rows;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ALARM_CONF
	 * @mbggenerated  Tue May 07 20:05:15 ART 2013
	 */
	public int updateAlarmConfByPrimaryKey(AlarmConf record) throws SQLException {
		int rows = sqlMapClient.update("ALARM_CONF.updateByPrimaryKey", record);
		return rows;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table ALARM_CONF
	 * @mbggenerated  Tue May 07 20:05:15 ART 2013
	 */
	protected static class UpdateByExampleParms extends AlarmConfExample {
		private Object record;

		public UpdateByExampleParms(Object record, AlarmConfExample example) {
			super(example);
			this.record = record;
		}

		public Object getRecord() {
			return record;
		}
	}
}