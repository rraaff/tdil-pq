package com.tdil.tuafesta.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

public class ProfesionalChangeExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table PROFESIONAL_CHANGE
	 * @mbggenerated  Sat Aug 11 00:25:13 ART 2012
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table PROFESIONAL_CHANGE
	 * @mbggenerated  Sat Aug 11 00:25:13 ART 2012
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table PROFESIONAL_CHANGE
	 * @mbggenerated  Sat Aug 11 00:25:13 ART 2012
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table PROFESIONAL_CHANGE
	 * @mbggenerated  Sat Aug 11 00:25:13 ART 2012
	 */
	public ProfesionalChangeExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table PROFESIONAL_CHANGE
	 * @mbggenerated  Sat Aug 11 00:25:13 ART 2012
	 */
	protected ProfesionalChangeExample(ProfesionalChangeExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
		this.distinct = example.distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table PROFESIONAL_CHANGE
	 * @mbggenerated  Sat Aug 11 00:25:13 ART 2012
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table PROFESIONAL_CHANGE
	 * @mbggenerated  Sat Aug 11 00:25:13 ART 2012
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table PROFESIONAL_CHANGE
	 * @mbggenerated  Sat Aug 11 00:25:13 ART 2012
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table PROFESIONAL_CHANGE
	 * @mbggenerated  Sat Aug 11 00:25:13 ART 2012
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table PROFESIONAL_CHANGE
	 * @mbggenerated  Sat Aug 11 00:25:13 ART 2012
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table PROFESIONAL_CHANGE
	 * @mbggenerated  Sat Aug 11 00:25:13 ART 2012
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table PROFESIONAL_CHANGE
	 * @mbggenerated  Sat Aug 11 00:25:13 ART 2012
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table PROFESIONAL_CHANGE
	 * @mbggenerated  Sat Aug 11 00:25:13 ART 2012
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table PROFESIONAL_CHANGE
	 * @mbggenerated  Sat Aug 11 00:25:13 ART 2012
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table PROFESIONAL_CHANGE
	 * @mbggenerated  Sat Aug 11 00:25:13 ART 2012
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table PROFESIONAL_CHANGE
	 * @mbggenerated  Sat Aug 11 00:25:13 ART 2012
	 */
	protected abstract static class GeneratedCriteria {
		protected List<String> criteriaWithoutValue;
		protected List<Map<String, Object>> criteriaWithSingleValue;
		protected List<Map<String, Object>> criteriaWithListValue;
		protected List<Map<String, Object>> criteriaWithBetweenValue;

		protected GeneratedCriteria() {
			super();
			criteriaWithoutValue = new ArrayList<String>();
			criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
			criteriaWithListValue = new ArrayList<Map<String, Object>>();
			criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0 || criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0 || criteriaWithBetweenValue.size() > 0;
		}

		public List<String> getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List<Map<String, Object>> getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List<Map<String, Object>> getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List<Map<String, Object>> getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition, List<? extends Object> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property + " cannot be null or empty");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			List<Object> list = new ArrayList<Object>();
			list.add(value1);
			list.add(value2);
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		protected void addCriterionForJDBCDate(String condition, Date value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value.getTime()), property);
		}

		protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property + " cannot be null or empty");
			}
			List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
			Iterator<Date> iter = values.iterator();
			while (iter.hasNext()) {
				dateList.add(new java.sql.Date(iter.next().getTime()));
			}
			addCriterion(condition, dateList, property);
		}

		protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
		}

		public Criteria andIdIsNull() {
			addCriterion("profchg.id is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("profchg.id is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("profchg.id =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("profchg.id <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("profchg.id >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("profchg.id >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("profchg.id <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("profchg.id <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Integer> values) {
			addCriterion("profchg.id in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Integer> values) {
			addCriterion("profchg.id not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("profchg.id between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("profchg.id not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdProfilePictureIsNull() {
			addCriterion("profchg.id_profile_picture is null");
			return (Criteria) this;
		}

		public Criteria andIdProfilePictureIsNotNull() {
			addCriterion("profchg.id_profile_picture is not null");
			return (Criteria) this;
		}

		public Criteria andIdProfilePictureEqualTo(Integer value) {
			addCriterion("profchg.id_profile_picture =", value, "idProfilePicture");
			return (Criteria) this;
		}

		public Criteria andIdProfilePictureNotEqualTo(Integer value) {
			addCriterion("profchg.id_profile_picture <>", value, "idProfilePicture");
			return (Criteria) this;
		}

		public Criteria andIdProfilePictureGreaterThan(Integer value) {
			addCriterion("profchg.id_profile_picture >", value, "idProfilePicture");
			return (Criteria) this;
		}

		public Criteria andIdProfilePictureGreaterThanOrEqualTo(Integer value) {
			addCriterion("profchg.id_profile_picture >=", value, "idProfilePicture");
			return (Criteria) this;
		}

		public Criteria andIdProfilePictureLessThan(Integer value) {
			addCriterion("profchg.id_profile_picture <", value, "idProfilePicture");
			return (Criteria) this;
		}

		public Criteria andIdProfilePictureLessThanOrEqualTo(Integer value) {
			addCriterion("profchg.id_profile_picture <=", value, "idProfilePicture");
			return (Criteria) this;
		}

		public Criteria andIdProfilePictureIn(List<Integer> values) {
			addCriterion("profchg.id_profile_picture in", values, "idProfilePicture");
			return (Criteria) this;
		}

		public Criteria andIdProfilePictureNotIn(List<Integer> values) {
			addCriterion("profchg.id_profile_picture not in", values, "idProfilePicture");
			return (Criteria) this;
		}

		public Criteria andIdProfilePictureBetween(Integer value1, Integer value2) {
			addCriterion("profchg.id_profile_picture between", value1, value2, "idProfilePicture");
			return (Criteria) this;
		}

		public Criteria andIdProfilePictureNotBetween(Integer value1, Integer value2) {
			addCriterion("profchg.id_profile_picture not between", value1, value2, "idProfilePicture");
			return (Criteria) this;
		}

		public Criteria andModificationdateIsNull() {
			addCriterion("profchg.modificationDate is null");
			return (Criteria) this;
		}

		public Criteria andModificationdateIsNotNull() {
			addCriterion("profchg.modificationDate is not null");
			return (Criteria) this;
		}

		public Criteria andModificationdateEqualTo(Date value) {
			addCriterion("profchg.modificationDate =", value, "modificationdate");
			return (Criteria) this;
		}

		public Criteria andModificationdateNotEqualTo(Date value) {
			addCriterion("profchg.modificationDate <>", value, "modificationdate");
			return (Criteria) this;
		}

		public Criteria andModificationdateGreaterThan(Date value) {
			addCriterion("profchg.modificationDate >", value, "modificationdate");
			return (Criteria) this;
		}

		public Criteria andModificationdateGreaterThanOrEqualTo(Date value) {
			addCriterion("profchg.modificationDate >=", value, "modificationdate");
			return (Criteria) this;
		}

		public Criteria andModificationdateLessThan(Date value) {
			addCriterion("profchg.modificationDate <", value, "modificationdate");
			return (Criteria) this;
		}

		public Criteria andModificationdateLessThanOrEqualTo(Date value) {
			addCriterion("profchg.modificationDate <=", value, "modificationdate");
			return (Criteria) this;
		}

		public Criteria andModificationdateIn(List<Date> values) {
			addCriterion("profchg.modificationDate in", values, "modificationdate");
			return (Criteria) this;
		}

		public Criteria andModificationdateNotIn(List<Date> values) {
			addCriterion("profchg.modificationDate not in", values, "modificationdate");
			return (Criteria) this;
		}

		public Criteria andModificationdateBetween(Date value1, Date value2) {
			addCriterion("profchg.modificationDate between", value1, value2, "modificationdate");
			return (Criteria) this;
		}

		public Criteria andModificationdateNotBetween(Date value1, Date value2) {
			addCriterion("profchg.modificationDate not between", value1, value2, "modificationdate");
			return (Criteria) this;
		}

		public Criteria andFirstnameIsNull() {
			addCriterion("profchg.firstname is null");
			return (Criteria) this;
		}

		public Criteria andFirstnameIsNotNull() {
			addCriterion("profchg.firstname is not null");
			return (Criteria) this;
		}

		public Criteria andFirstnameEqualTo(String value) {
			addCriterion("profchg.firstname =", value, "firstname");
			return (Criteria) this;
		}

		public Criteria andFirstnameNotEqualTo(String value) {
			addCriterion("profchg.firstname <>", value, "firstname");
			return (Criteria) this;
		}

		public Criteria andFirstnameGreaterThan(String value) {
			addCriterion("profchg.firstname >", value, "firstname");
			return (Criteria) this;
		}

		public Criteria andFirstnameGreaterThanOrEqualTo(String value) {
			addCriterion("profchg.firstname >=", value, "firstname");
			return (Criteria) this;
		}

		public Criteria andFirstnameLessThan(String value) {
			addCriterion("profchg.firstname <", value, "firstname");
			return (Criteria) this;
		}

		public Criteria andFirstnameLessThanOrEqualTo(String value) {
			addCriterion("profchg.firstname <=", value, "firstname");
			return (Criteria) this;
		}

		public Criteria andFirstnameLike(String value) {
			addCriterion("profchg.firstname like", value, "firstname");
			return (Criteria) this;
		}

		public Criteria andFirstnameNotLike(String value) {
			addCriterion("profchg.firstname not like", value, "firstname");
			return (Criteria) this;
		}

		public Criteria andFirstnameIn(List<String> values) {
			addCriterion("profchg.firstname in", values, "firstname");
			return (Criteria) this;
		}

		public Criteria andFirstnameNotIn(List<String> values) {
			addCriterion("profchg.firstname not in", values, "firstname");
			return (Criteria) this;
		}

		public Criteria andFirstnameBetween(String value1, String value2) {
			addCriterion("profchg.firstname between", value1, value2, "firstname");
			return (Criteria) this;
		}

		public Criteria andFirstnameNotBetween(String value1, String value2) {
			addCriterion("profchg.firstname not between", value1, value2, "firstname");
			return (Criteria) this;
		}

		public Criteria andLastnameIsNull() {
			addCriterion("profchg.lastname is null");
			return (Criteria) this;
		}

		public Criteria andLastnameIsNotNull() {
			addCriterion("profchg.lastname is not null");
			return (Criteria) this;
		}

		public Criteria andLastnameEqualTo(String value) {
			addCriterion("profchg.lastname =", value, "lastname");
			return (Criteria) this;
		}

		public Criteria andLastnameNotEqualTo(String value) {
			addCriterion("profchg.lastname <>", value, "lastname");
			return (Criteria) this;
		}

		public Criteria andLastnameGreaterThan(String value) {
			addCriterion("profchg.lastname >", value, "lastname");
			return (Criteria) this;
		}

		public Criteria andLastnameGreaterThanOrEqualTo(String value) {
			addCriterion("profchg.lastname >=", value, "lastname");
			return (Criteria) this;
		}

		public Criteria andLastnameLessThan(String value) {
			addCriterion("profchg.lastname <", value, "lastname");
			return (Criteria) this;
		}

		public Criteria andLastnameLessThanOrEqualTo(String value) {
			addCriterion("profchg.lastname <=", value, "lastname");
			return (Criteria) this;
		}

		public Criteria andLastnameLike(String value) {
			addCriterion("profchg.lastname like", value, "lastname");
			return (Criteria) this;
		}

		public Criteria andLastnameNotLike(String value) {
			addCriterion("profchg.lastname not like", value, "lastname");
			return (Criteria) this;
		}

		public Criteria andLastnameIn(List<String> values) {
			addCriterion("profchg.lastname in", values, "lastname");
			return (Criteria) this;
		}

		public Criteria andLastnameNotIn(List<String> values) {
			addCriterion("profchg.lastname not in", values, "lastname");
			return (Criteria) this;
		}

		public Criteria andLastnameBetween(String value1, String value2) {
			addCriterion("profchg.lastname between", value1, value2, "lastname");
			return (Criteria) this;
		}

		public Criteria andLastnameNotBetween(String value1, String value2) {
			addCriterion("profchg.lastname not between", value1, value2, "lastname");
			return (Criteria) this;
		}

		public Criteria andSexIsNull() {
			addCriterion("profchg.sex is null");
			return (Criteria) this;
		}

		public Criteria andSexIsNotNull() {
			addCriterion("profchg.sex is not null");
			return (Criteria) this;
		}

		public Criteria andSexEqualTo(String value) {
			addCriterion("profchg.sex =", value, "sex");
			return (Criteria) this;
		}

		public Criteria andSexNotEqualTo(String value) {
			addCriterion("profchg.sex <>", value, "sex");
			return (Criteria) this;
		}

		public Criteria andSexGreaterThan(String value) {
			addCriterion("profchg.sex >", value, "sex");
			return (Criteria) this;
		}

		public Criteria andSexGreaterThanOrEqualTo(String value) {
			addCriterion("profchg.sex >=", value, "sex");
			return (Criteria) this;
		}

		public Criteria andSexLessThan(String value) {
			addCriterion("profchg.sex <", value, "sex");
			return (Criteria) this;
		}

		public Criteria andSexLessThanOrEqualTo(String value) {
			addCriterion("profchg.sex <=", value, "sex");
			return (Criteria) this;
		}

		public Criteria andSexLike(String value) {
			addCriterion("profchg.sex like", value, "sex");
			return (Criteria) this;
		}

		public Criteria andSexNotLike(String value) {
			addCriterion("profchg.sex not like", value, "sex");
			return (Criteria) this;
		}

		public Criteria andSexIn(List<String> values) {
			addCriterion("profchg.sex in", values, "sex");
			return (Criteria) this;
		}

		public Criteria andSexNotIn(List<String> values) {
			addCriterion("profchg.sex not in", values, "sex");
			return (Criteria) this;
		}

		public Criteria andSexBetween(String value1, String value2) {
			addCriterion("profchg.sex between", value1, value2, "sex");
			return (Criteria) this;
		}

		public Criteria andSexNotBetween(String value1, String value2) {
			addCriterion("profchg.sex not between", value1, value2, "sex");
			return (Criteria) this;
		}

		public Criteria andBirthdateIsNull() {
			addCriterion("profchg.birthdate is null");
			return (Criteria) this;
		}

		public Criteria andBirthdateIsNotNull() {
			addCriterion("profchg.birthdate is not null");
			return (Criteria) this;
		}

		public Criteria andBirthdateEqualTo(Date value) {
			addCriterionForJDBCDate("profchg.birthdate =", value, "birthdate");
			return (Criteria) this;
		}

		public Criteria andBirthdateNotEqualTo(Date value) {
			addCriterionForJDBCDate("profchg.birthdate <>", value, "birthdate");
			return (Criteria) this;
		}

		public Criteria andBirthdateGreaterThan(Date value) {
			addCriterionForJDBCDate("profchg.birthdate >", value, "birthdate");
			return (Criteria) this;
		}

		public Criteria andBirthdateGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("profchg.birthdate >=", value, "birthdate");
			return (Criteria) this;
		}

		public Criteria andBirthdateLessThan(Date value) {
			addCriterionForJDBCDate("profchg.birthdate <", value, "birthdate");
			return (Criteria) this;
		}

		public Criteria andBirthdateLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("profchg.birthdate <=", value, "birthdate");
			return (Criteria) this;
		}

		public Criteria andBirthdateIn(List<Date> values) {
			addCriterionForJDBCDate("profchg.birthdate in", values, "birthdate");
			return (Criteria) this;
		}

		public Criteria andBirthdateNotIn(List<Date> values) {
			addCriterionForJDBCDate("profchg.birthdate not in", values, "birthdate");
			return (Criteria) this;
		}

		public Criteria andBirthdateBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("profchg.birthdate between", value1, value2, "birthdate");
			return (Criteria) this;
		}

		public Criteria andBirthdateNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("profchg.birthdate not between", value1, value2, "birthdate");
			return (Criteria) this;
		}

		public Criteria andPhoneIsNull() {
			addCriterion("profchg.phone is null");
			return (Criteria) this;
		}

		public Criteria andPhoneIsNotNull() {
			addCriterion("profchg.phone is not null");
			return (Criteria) this;
		}

		public Criteria andPhoneEqualTo(String value) {
			addCriterion("profchg.phone =", value, "phone");
			return (Criteria) this;
		}

		public Criteria andPhoneNotEqualTo(String value) {
			addCriterion("profchg.phone <>", value, "phone");
			return (Criteria) this;
		}

		public Criteria andPhoneGreaterThan(String value) {
			addCriterion("profchg.phone >", value, "phone");
			return (Criteria) this;
		}

		public Criteria andPhoneGreaterThanOrEqualTo(String value) {
			addCriterion("profchg.phone >=", value, "phone");
			return (Criteria) this;
		}

		public Criteria andPhoneLessThan(String value) {
			addCriterion("profchg.phone <", value, "phone");
			return (Criteria) this;
		}

		public Criteria andPhoneLessThanOrEqualTo(String value) {
			addCriterion("profchg.phone <=", value, "phone");
			return (Criteria) this;
		}

		public Criteria andPhoneLike(String value) {
			addCriterion("profchg.phone like", value, "phone");
			return (Criteria) this;
		}

		public Criteria andPhoneNotLike(String value) {
			addCriterion("profchg.phone not like", value, "phone");
			return (Criteria) this;
		}

		public Criteria andPhoneIn(List<String> values) {
			addCriterion("profchg.phone in", values, "phone");
			return (Criteria) this;
		}

		public Criteria andPhoneNotIn(List<String> values) {
			addCriterion("profchg.phone not in", values, "phone");
			return (Criteria) this;
		}

		public Criteria andPhoneBetween(String value1, String value2) {
			addCriterion("profchg.phone between", value1, value2, "phone");
			return (Criteria) this;
		}

		public Criteria andPhoneNotBetween(String value1, String value2) {
			addCriterion("profchg.phone not between", value1, value2, "phone");
			return (Criteria) this;
		}

		public Criteria andWebsiteIsNull() {
			addCriterion("profchg.website is null");
			return (Criteria) this;
		}

		public Criteria andWebsiteIsNotNull() {
			addCriterion("profchg.website is not null");
			return (Criteria) this;
		}

		public Criteria andWebsiteEqualTo(String value) {
			addCriterion("profchg.website =", value, "website");
			return (Criteria) this;
		}

		public Criteria andWebsiteNotEqualTo(String value) {
			addCriterion("profchg.website <>", value, "website");
			return (Criteria) this;
		}

		public Criteria andWebsiteGreaterThan(String value) {
			addCriterion("profchg.website >", value, "website");
			return (Criteria) this;
		}

		public Criteria andWebsiteGreaterThanOrEqualTo(String value) {
			addCriterion("profchg.website >=", value, "website");
			return (Criteria) this;
		}

		public Criteria andWebsiteLessThan(String value) {
			addCriterion("profchg.website <", value, "website");
			return (Criteria) this;
		}

		public Criteria andWebsiteLessThanOrEqualTo(String value) {
			addCriterion("profchg.website <=", value, "website");
			return (Criteria) this;
		}

		public Criteria andWebsiteLike(String value) {
			addCriterion("profchg.website like", value, "website");
			return (Criteria) this;
		}

		public Criteria andWebsiteNotLike(String value) {
			addCriterion("profchg.website not like", value, "website");
			return (Criteria) this;
		}

		public Criteria andWebsiteIn(List<String> values) {
			addCriterion("profchg.website in", values, "website");
			return (Criteria) this;
		}

		public Criteria andWebsiteNotIn(List<String> values) {
			addCriterion("profchg.website not in", values, "website");
			return (Criteria) this;
		}

		public Criteria andWebsiteBetween(String value1, String value2) {
			addCriterion("profchg.website between", value1, value2, "website");
			return (Criteria) this;
		}

		public Criteria andWebsiteNotBetween(String value1, String value2) {
			addCriterion("profchg.website not between", value1, value2, "website");
			return (Criteria) this;
		}

		public Criteria andFacebookIsNull() {
			addCriterion("profchg.facebook is null");
			return (Criteria) this;
		}

		public Criteria andFacebookIsNotNull() {
			addCriterion("profchg.facebook is not null");
			return (Criteria) this;
		}

		public Criteria andFacebookEqualTo(String value) {
			addCriterion("profchg.facebook =", value, "facebook");
			return (Criteria) this;
		}

		public Criteria andFacebookNotEqualTo(String value) {
			addCriterion("profchg.facebook <>", value, "facebook");
			return (Criteria) this;
		}

		public Criteria andFacebookGreaterThan(String value) {
			addCriterion("profchg.facebook >", value, "facebook");
			return (Criteria) this;
		}

		public Criteria andFacebookGreaterThanOrEqualTo(String value) {
			addCriterion("profchg.facebook >=", value, "facebook");
			return (Criteria) this;
		}

		public Criteria andFacebookLessThan(String value) {
			addCriterion("profchg.facebook <", value, "facebook");
			return (Criteria) this;
		}

		public Criteria andFacebookLessThanOrEqualTo(String value) {
			addCriterion("profchg.facebook <=", value, "facebook");
			return (Criteria) this;
		}

		public Criteria andFacebookLike(String value) {
			addCriterion("profchg.facebook like", value, "facebook");
			return (Criteria) this;
		}

		public Criteria andFacebookNotLike(String value) {
			addCriterion("profchg.facebook not like", value, "facebook");
			return (Criteria) this;
		}

		public Criteria andFacebookIn(List<String> values) {
			addCriterion("profchg.facebook in", values, "facebook");
			return (Criteria) this;
		}

		public Criteria andFacebookNotIn(List<String> values) {
			addCriterion("profchg.facebook not in", values, "facebook");
			return (Criteria) this;
		}

		public Criteria andFacebookBetween(String value1, String value2) {
			addCriterion("profchg.facebook between", value1, value2, "facebook");
			return (Criteria) this;
		}

		public Criteria andFacebookNotBetween(String value1, String value2) {
			addCriterion("profchg.facebook not between", value1, value2, "facebook");
			return (Criteria) this;
		}

		public Criteria andBusinesshoursIsNull() {
			addCriterion("profchg.businesshours is null");
			return (Criteria) this;
		}

		public Criteria andBusinesshoursIsNotNull() {
			addCriterion("profchg.businesshours is not null");
			return (Criteria) this;
		}

		public Criteria andBusinesshoursEqualTo(String value) {
			addCriterion("profchg.businesshours =", value, "businesshours");
			return (Criteria) this;
		}

		public Criteria andBusinesshoursNotEqualTo(String value) {
			addCriterion("profchg.businesshours <>", value, "businesshours");
			return (Criteria) this;
		}

		public Criteria andBusinesshoursGreaterThan(String value) {
			addCriterion("profchg.businesshours >", value, "businesshours");
			return (Criteria) this;
		}

		public Criteria andBusinesshoursGreaterThanOrEqualTo(String value) {
			addCriterion("profchg.businesshours >=", value, "businesshours");
			return (Criteria) this;
		}

		public Criteria andBusinesshoursLessThan(String value) {
			addCriterion("profchg.businesshours <", value, "businesshours");
			return (Criteria) this;
		}

		public Criteria andBusinesshoursLessThanOrEqualTo(String value) {
			addCriterion("profchg.businesshours <=", value, "businesshours");
			return (Criteria) this;
		}

		public Criteria andBusinesshoursLike(String value) {
			addCriterion("profchg.businesshours like", value, "businesshours");
			return (Criteria) this;
		}

		public Criteria andBusinesshoursNotLike(String value) {
			addCriterion("profchg.businesshours not like", value, "businesshours");
			return (Criteria) this;
		}

		public Criteria andBusinesshoursIn(List<String> values) {
			addCriterion("profchg.businesshours in", values, "businesshours");
			return (Criteria) this;
		}

		public Criteria andBusinesshoursNotIn(List<String> values) {
			addCriterion("profchg.businesshours not in", values, "businesshours");
			return (Criteria) this;
		}

		public Criteria andBusinesshoursBetween(String value1, String value2) {
			addCriterion("profchg.businesshours between", value1, value2, "businesshours");
			return (Criteria) this;
		}

		public Criteria andBusinesshoursNotBetween(String value1, String value2) {
			addCriterion("profchg.businesshours not between", value1, value2, "businesshours");
			return (Criteria) this;
		}

		public Criteria andDescriptionIsNull() {
			addCriterion("profchg.description is null");
			return (Criteria) this;
		}

		public Criteria andDescriptionIsNotNull() {
			addCriterion("profchg.description is not null");
			return (Criteria) this;
		}

		public Criteria andDescriptionEqualTo(String value) {
			addCriterion("profchg.description =", value, "description");
			return (Criteria) this;
		}

		public Criteria andDescriptionNotEqualTo(String value) {
			addCriterion("profchg.description <>", value, "description");
			return (Criteria) this;
		}

		public Criteria andDescriptionGreaterThan(String value) {
			addCriterion("profchg.description >", value, "description");
			return (Criteria) this;
		}

		public Criteria andDescriptionGreaterThanOrEqualTo(String value) {
			addCriterion("profchg.description >=", value, "description");
			return (Criteria) this;
		}

		public Criteria andDescriptionLessThan(String value) {
			addCriterion("profchg.description <", value, "description");
			return (Criteria) this;
		}

		public Criteria andDescriptionLessThanOrEqualTo(String value) {
			addCriterion("profchg.description <=", value, "description");
			return (Criteria) this;
		}

		public Criteria andDescriptionLike(String value) {
			addCriterion("profchg.description like", value, "description");
			return (Criteria) this;
		}

		public Criteria andDescriptionNotLike(String value) {
			addCriterion("profchg.description not like", value, "description");
			return (Criteria) this;
		}

		public Criteria andDescriptionIn(List<String> values) {
			addCriterion("profchg.description in", values, "description");
			return (Criteria) this;
		}

		public Criteria andDescriptionNotIn(List<String> values) {
			addCriterion("profchg.description not in", values, "description");
			return (Criteria) this;
		}

		public Criteria andDescriptionBetween(String value1, String value2) {
			addCriterion("profchg.description between", value1, value2, "description");
			return (Criteria) this;
		}

		public Criteria andDescriptionNotBetween(String value1, String value2) {
			addCriterion("profchg.description not between", value1, value2, "description");
			return (Criteria) this;
		}

		public Criteria andDeletedIsNull() {
			addCriterion("profchg.deleted is null");
			return (Criteria) this;
		}

		public Criteria andDeletedIsNotNull() {
			addCriterion("profchg.deleted is not null");
			return (Criteria) this;
		}

		public Criteria andDeletedEqualTo(Integer value) {
			addCriterion("profchg.deleted =", value, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedNotEqualTo(Integer value) {
			addCriterion("profchg.deleted <>", value, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedGreaterThan(Integer value) {
			addCriterion("profchg.deleted >", value, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedGreaterThanOrEqualTo(Integer value) {
			addCriterion("profchg.deleted >=", value, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedLessThan(Integer value) {
			addCriterion("profchg.deleted <", value, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedLessThanOrEqualTo(Integer value) {
			addCriterion("profchg.deleted <=", value, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedIn(List<Integer> values) {
			addCriterion("profchg.deleted in", values, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedNotIn(List<Integer> values) {
			addCriterion("profchg.deleted not in", values, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedBetween(Integer value1, Integer value2) {
			addCriterion("profchg.deleted between", value1, value2, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedNotBetween(Integer value1, Integer value2) {
			addCriterion("profchg.deleted not between", value1, value2, "deleted");
			return (Criteria) this;
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table PROFESIONAL_CHANGE
     *
     * @mbggenerated do_not_delete_during_merge Sat Aug 11 00:20:09 ART 2012
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}