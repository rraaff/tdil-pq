package com.tdil.tuafesta.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

public class ProfesionalExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table PROFESIONAL
     *
     * @mbggenerated Mon Jun 18 23:18:25 ART 2012
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table PROFESIONAL
     *
     * @mbggenerated Mon Jun 18 23:18:25 ART 2012
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table PROFESIONAL
     *
     * @mbggenerated Mon Jun 18 23:18:25 ART 2012
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PROFESIONAL
     *
     * @mbggenerated Mon Jun 18 23:18:25 ART 2012
     */
    public ProfesionalExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PROFESIONAL
     *
     * @mbggenerated Mon Jun 18 23:18:25 ART 2012
     */
    protected ProfesionalExample(ProfesionalExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
        this.distinct = example.distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PROFESIONAL
     *
     * @mbggenerated Mon Jun 18 23:18:25 ART 2012
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PROFESIONAL
     *
     * @mbggenerated Mon Jun 18 23:18:25 ART 2012
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PROFESIONAL
     *
     * @mbggenerated Mon Jun 18 23:18:25 ART 2012
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PROFESIONAL
     *
     * @mbggenerated Mon Jun 18 23:18:25 ART 2012
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PROFESIONAL
     *
     * @mbggenerated Mon Jun 18 23:18:25 ART 2012
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PROFESIONAL
     *
     * @mbggenerated Mon Jun 18 23:18:25 ART 2012
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PROFESIONAL
     *
     * @mbggenerated Mon Jun 18 23:18:25 ART 2012
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PROFESIONAL
     *
     * @mbggenerated Mon Jun 18 23:18:25 ART 2012
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PROFESIONAL
     *
     * @mbggenerated Mon Jun 18 23:18:25 ART 2012
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PROFESIONAL
     *
     * @mbggenerated Mon Jun 18 23:18:25 ART 2012
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table PROFESIONAL
     *
     * @mbggenerated Mon Jun 18 23:18:25 ART 2012
     */
    protected abstract static class GeneratedCriteria {
        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        protected GeneratedCriteria() {
            super();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andIdIsNull() {
            addCriterion("prof.id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("prof.id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("prof.id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("prof.id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("prof.id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("prof.id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("prof.id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("prof.id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("prof.id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("prof.id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("prof.id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("prof.id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andFirstnameIsNull() {
            addCriterion("prof.firstname is null");
            return (Criteria) this;
        }

        public Criteria andFirstnameIsNotNull() {
            addCriterion("prof.firstname is not null");
            return (Criteria) this;
        }

        public Criteria andFirstnameEqualTo(String value) {
            addCriterion("prof.firstname =", value, "firstname");
            return (Criteria) this;
        }

        public Criteria andFirstnameNotEqualTo(String value) {
            addCriterion("prof.firstname <>", value, "firstname");
            return (Criteria) this;
        }

        public Criteria andFirstnameGreaterThan(String value) {
            addCriterion("prof.firstname >", value, "firstname");
            return (Criteria) this;
        }

        public Criteria andFirstnameGreaterThanOrEqualTo(String value) {
            addCriterion("prof.firstname >=", value, "firstname");
            return (Criteria) this;
        }

        public Criteria andFirstnameLessThan(String value) {
            addCriterion("prof.firstname <", value, "firstname");
            return (Criteria) this;
        }

        public Criteria andFirstnameLessThanOrEqualTo(String value) {
            addCriterion("prof.firstname <=", value, "firstname");
            return (Criteria) this;
        }

        public Criteria andFirstnameLike(String value) {
            addCriterion("prof.firstname like", value, "firstname");
            return (Criteria) this;
        }

        public Criteria andFirstnameNotLike(String value) {
            addCriterion("prof.firstname not like", value, "firstname");
            return (Criteria) this;
        }

        public Criteria andFirstnameIn(List<String> values) {
            addCriterion("prof.firstname in", values, "firstname");
            return (Criteria) this;
        }

        public Criteria andFirstnameNotIn(List<String> values) {
            addCriterion("prof.firstname not in", values, "firstname");
            return (Criteria) this;
        }

        public Criteria andFirstnameBetween(String value1, String value2) {
            addCriterion("prof.firstname between", value1, value2, "firstname");
            return (Criteria) this;
        }

        public Criteria andFirstnameNotBetween(String value1, String value2) {
            addCriterion("prof.firstname not between", value1, value2, "firstname");
            return (Criteria) this;
        }

        public Criteria andLastnameIsNull() {
            addCriterion("prof.lastname is null");
            return (Criteria) this;
        }

        public Criteria andLastnameIsNotNull() {
            addCriterion("prof.lastname is not null");
            return (Criteria) this;
        }

        public Criteria andLastnameEqualTo(String value) {
            addCriterion("prof.lastname =", value, "lastname");
            return (Criteria) this;
        }

        public Criteria andLastnameNotEqualTo(String value) {
            addCriterion("prof.lastname <>", value, "lastname");
            return (Criteria) this;
        }

        public Criteria andLastnameGreaterThan(String value) {
            addCriterion("prof.lastname >", value, "lastname");
            return (Criteria) this;
        }

        public Criteria andLastnameGreaterThanOrEqualTo(String value) {
            addCriterion("prof.lastname >=", value, "lastname");
            return (Criteria) this;
        }

        public Criteria andLastnameLessThan(String value) {
            addCriterion("prof.lastname <", value, "lastname");
            return (Criteria) this;
        }

        public Criteria andLastnameLessThanOrEqualTo(String value) {
            addCriterion("prof.lastname <=", value, "lastname");
            return (Criteria) this;
        }

        public Criteria andLastnameLike(String value) {
            addCriterion("prof.lastname like", value, "lastname");
            return (Criteria) this;
        }

        public Criteria andLastnameNotLike(String value) {
            addCriterion("prof.lastname not like", value, "lastname");
            return (Criteria) this;
        }

        public Criteria andLastnameIn(List<String> values) {
            addCriterion("prof.lastname in", values, "lastname");
            return (Criteria) this;
        }

        public Criteria andLastnameNotIn(List<String> values) {
            addCriterion("prof.lastname not in", values, "lastname");
            return (Criteria) this;
        }

        public Criteria andLastnameBetween(String value1, String value2) {
            addCriterion("prof.lastname between", value1, value2, "lastname");
            return (Criteria) this;
        }

        public Criteria andLastnameNotBetween(String value1, String value2) {
            addCriterion("prof.lastname not between", value1, value2, "lastname");
            return (Criteria) this;
        }

        public Criteria andSexIsNull() {
            addCriterion("prof.sex is null");
            return (Criteria) this;
        }

        public Criteria andSexIsNotNull() {
            addCriterion("prof.sex is not null");
            return (Criteria) this;
        }

        public Criteria andSexEqualTo(String value) {
            addCriterion("prof.sex =", value, "sex");
            return (Criteria) this;
        }

        public Criteria andSexNotEqualTo(String value) {
            addCriterion("prof.sex <>", value, "sex");
            return (Criteria) this;
        }

        public Criteria andSexGreaterThan(String value) {
            addCriterion("prof.sex >", value, "sex");
            return (Criteria) this;
        }

        public Criteria andSexGreaterThanOrEqualTo(String value) {
            addCriterion("prof.sex >=", value, "sex");
            return (Criteria) this;
        }

        public Criteria andSexLessThan(String value) {
            addCriterion("prof.sex <", value, "sex");
            return (Criteria) this;
        }

        public Criteria andSexLessThanOrEqualTo(String value) {
            addCriterion("prof.sex <=", value, "sex");
            return (Criteria) this;
        }

        public Criteria andSexLike(String value) {
            addCriterion("prof.sex like", value, "sex");
            return (Criteria) this;
        }

        public Criteria andSexNotLike(String value) {
            addCriterion("prof.sex not like", value, "sex");
            return (Criteria) this;
        }

        public Criteria andSexIn(List<String> values) {
            addCriterion("prof.sex in", values, "sex");
            return (Criteria) this;
        }

        public Criteria andSexNotIn(List<String> values) {
            addCriterion("prof.sex not in", values, "sex");
            return (Criteria) this;
        }

        public Criteria andSexBetween(String value1, String value2) {
            addCriterion("prof.sex between", value1, value2, "sex");
            return (Criteria) this;
        }

        public Criteria andSexNotBetween(String value1, String value2) {
            addCriterion("prof.sex not between", value1, value2, "sex");
            return (Criteria) this;
        }

        public Criteria andBirthdateIsNull() {
            addCriterion("prof.birthdate is null");
            return (Criteria) this;
        }

        public Criteria andBirthdateIsNotNull() {
            addCriterion("prof.birthdate is not null");
            return (Criteria) this;
        }

        public Criteria andBirthdateEqualTo(Date value) {
            addCriterionForJDBCDate("prof.birthdate =", value, "birthdate");
            return (Criteria) this;
        }

        public Criteria andBirthdateNotEqualTo(Date value) {
            addCriterionForJDBCDate("prof.birthdate <>", value, "birthdate");
            return (Criteria) this;
        }

        public Criteria andBirthdateGreaterThan(Date value) {
            addCriterionForJDBCDate("prof.birthdate >", value, "birthdate");
            return (Criteria) this;
        }

        public Criteria andBirthdateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("prof.birthdate >=", value, "birthdate");
            return (Criteria) this;
        }

        public Criteria andBirthdateLessThan(Date value) {
            addCriterionForJDBCDate("prof.birthdate <", value, "birthdate");
            return (Criteria) this;
        }

        public Criteria andBirthdateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("prof.birthdate <=", value, "birthdate");
            return (Criteria) this;
        }

        public Criteria andBirthdateIn(List<Date> values) {
            addCriterionForJDBCDate("prof.birthdate in", values, "birthdate");
            return (Criteria) this;
        }

        public Criteria andBirthdateNotIn(List<Date> values) {
            addCriterionForJDBCDate("prof.birthdate not in", values, "birthdate");
            return (Criteria) this;
        }

        public Criteria andBirthdateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("prof.birthdate between", value1, value2, "birthdate");
            return (Criteria) this;
        }

        public Criteria andBirthdateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("prof.birthdate not between", value1, value2, "birthdate");
            return (Criteria) this;
        }

        public Criteria andPhoneIsNull() {
            addCriterion("prof.phone is null");
            return (Criteria) this;
        }

        public Criteria andPhoneIsNotNull() {
            addCriterion("prof.phone is not null");
            return (Criteria) this;
        }

        public Criteria andPhoneEqualTo(String value) {
            addCriterion("prof.phone =", value, "phone");
            return (Criteria) this;
        }

        public Criteria andPhoneNotEqualTo(String value) {
            addCriterion("prof.phone <>", value, "phone");
            return (Criteria) this;
        }

        public Criteria andPhoneGreaterThan(String value) {
            addCriterion("prof.phone >", value, "phone");
            return (Criteria) this;
        }

        public Criteria andPhoneGreaterThanOrEqualTo(String value) {
            addCriterion("prof.phone >=", value, "phone");
            return (Criteria) this;
        }

        public Criteria andPhoneLessThan(String value) {
            addCriterion("prof.phone <", value, "phone");
            return (Criteria) this;
        }

        public Criteria andPhoneLessThanOrEqualTo(String value) {
            addCriterion("prof.phone <=", value, "phone");
            return (Criteria) this;
        }

        public Criteria andPhoneLike(String value) {
            addCriterion("prof.phone like", value, "phone");
            return (Criteria) this;
        }

        public Criteria andPhoneNotLike(String value) {
            addCriterion("prof.phone not like", value, "phone");
            return (Criteria) this;
        }

        public Criteria andPhoneIn(List<String> values) {
            addCriterion("prof.phone in", values, "phone");
            return (Criteria) this;
        }

        public Criteria andPhoneNotIn(List<String> values) {
            addCriterion("prof.phone not in", values, "phone");
            return (Criteria) this;
        }

        public Criteria andPhoneBetween(String value1, String value2) {
            addCriterion("prof.phone between", value1, value2, "phone");
            return (Criteria) this;
        }

        public Criteria andPhoneNotBetween(String value1, String value2) {
            addCriterion("prof.phone not between", value1, value2, "phone");
            return (Criteria) this;
        }

        public Criteria andEmailIsNull() {
            addCriterion("prof.email is null");
            return (Criteria) this;
        }

        public Criteria andEmailIsNotNull() {
            addCriterion("prof.email is not null");
            return (Criteria) this;
        }

        public Criteria andEmailEqualTo(String value) {
            addCriterion("prof.email =", value, "email");
            return (Criteria) this;
        }

        public Criteria andEmailNotEqualTo(String value) {
            addCriterion("prof.email <>", value, "email");
            return (Criteria) this;
        }

        public Criteria andEmailGreaterThan(String value) {
            addCriterion("prof.email >", value, "email");
            return (Criteria) this;
        }

        public Criteria andEmailGreaterThanOrEqualTo(String value) {
            addCriterion("prof.email >=", value, "email");
            return (Criteria) this;
        }

        public Criteria andEmailLessThan(String value) {
            addCriterion("prof.email <", value, "email");
            return (Criteria) this;
        }

        public Criteria andEmailLessThanOrEqualTo(String value) {
            addCriterion("prof.email <=", value, "email");
            return (Criteria) this;
        }

        public Criteria andEmailLike(String value) {
            addCriterion("prof.email like", value, "email");
            return (Criteria) this;
        }

        public Criteria andEmailNotLike(String value) {
            addCriterion("prof.email not like", value, "email");
            return (Criteria) this;
        }

        public Criteria andEmailIn(List<String> values) {
            addCriterion("prof.email in", values, "email");
            return (Criteria) this;
        }

        public Criteria andEmailNotIn(List<String> values) {
            addCriterion("prof.email not in", values, "email");
            return (Criteria) this;
        }

        public Criteria andEmailBetween(String value1, String value2) {
            addCriterion("prof.email between", value1, value2, "email");
            return (Criteria) this;
        }

        public Criteria andEmailNotBetween(String value1, String value2) {
            addCriterion("prof.email not between", value1, value2, "email");
            return (Criteria) this;
        }

        public Criteria andPasswordIsNull() {
            addCriterion("prof.password is null");
            return (Criteria) this;
        }

        public Criteria andPasswordIsNotNull() {
            addCriterion("prof.password is not null");
            return (Criteria) this;
        }

        public Criteria andPasswordEqualTo(String value) {
            addCriterion("prof.password =", value, "password");
            return (Criteria) this;
        }

        public Criteria andPasswordNotEqualTo(String value) {
            addCriterion("prof.password <>", value, "password");
            return (Criteria) this;
        }

        public Criteria andPasswordGreaterThan(String value) {
            addCriterion("prof.password >", value, "password");
            return (Criteria) this;
        }

        public Criteria andPasswordGreaterThanOrEqualTo(String value) {
            addCriterion("prof.password >=", value, "password");
            return (Criteria) this;
        }

        public Criteria andPasswordLessThan(String value) {
            addCriterion("prof.password <", value, "password");
            return (Criteria) this;
        }

        public Criteria andPasswordLessThanOrEqualTo(String value) {
            addCriterion("prof.password <=", value, "password");
            return (Criteria) this;
        }

        public Criteria andPasswordLike(String value) {
            addCriterion("prof.password like", value, "password");
            return (Criteria) this;
        }

        public Criteria andPasswordNotLike(String value) {
            addCriterion("prof.password not like", value, "password");
            return (Criteria) this;
        }

        public Criteria andPasswordIn(List<String> values) {
            addCriterion("prof.password in", values, "password");
            return (Criteria) this;
        }

        public Criteria andPasswordNotIn(List<String> values) {
            addCriterion("prof.password not in", values, "password");
            return (Criteria) this;
        }

        public Criteria andPasswordBetween(String value1, String value2) {
            addCriterion("prof.password between", value1, value2, "password");
            return (Criteria) this;
        }

        public Criteria andPasswordNotBetween(String value1, String value2) {
            addCriterion("prof.password not between", value1, value2, "password");
            return (Criteria) this;
        }

        public Criteria andWebsiteIsNull() {
            addCriterion("prof.website is null");
            return (Criteria) this;
        }

        public Criteria andWebsiteIsNotNull() {
            addCriterion("prof.website is not null");
            return (Criteria) this;
        }

        public Criteria andWebsiteEqualTo(String value) {
            addCriterion("prof.website =", value, "website");
            return (Criteria) this;
        }

        public Criteria andWebsiteNotEqualTo(String value) {
            addCriterion("prof.website <>", value, "website");
            return (Criteria) this;
        }

        public Criteria andWebsiteGreaterThan(String value) {
            addCriterion("prof.website >", value, "website");
            return (Criteria) this;
        }

        public Criteria andWebsiteGreaterThanOrEqualTo(String value) {
            addCriterion("prof.website >=", value, "website");
            return (Criteria) this;
        }

        public Criteria andWebsiteLessThan(String value) {
            addCriterion("prof.website <", value, "website");
            return (Criteria) this;
        }

        public Criteria andWebsiteLessThanOrEqualTo(String value) {
            addCriterion("prof.website <=", value, "website");
            return (Criteria) this;
        }

        public Criteria andWebsiteLike(String value) {
            addCriterion("prof.website like", value, "website");
            return (Criteria) this;
        }

        public Criteria andWebsiteNotLike(String value) {
            addCriterion("prof.website not like", value, "website");
            return (Criteria) this;
        }

        public Criteria andWebsiteIn(List<String> values) {
            addCriterion("prof.website in", values, "website");
            return (Criteria) this;
        }

        public Criteria andWebsiteNotIn(List<String> values) {
            addCriterion("prof.website not in", values, "website");
            return (Criteria) this;
        }

        public Criteria andWebsiteBetween(String value1, String value2) {
            addCriterion("prof.website between", value1, value2, "website");
            return (Criteria) this;
        }

        public Criteria andWebsiteNotBetween(String value1, String value2) {
            addCriterion("prof.website not between", value1, value2, "website");
            return (Criteria) this;
        }

        public Criteria andFacebookIsNull() {
            addCriterion("prof.facebook is null");
            return (Criteria) this;
        }

        public Criteria andFacebookIsNotNull() {
            addCriterion("prof.facebook is not null");
            return (Criteria) this;
        }

        public Criteria andFacebookEqualTo(String value) {
            addCriterion("prof.facebook =", value, "facebook");
            return (Criteria) this;
        }

        public Criteria andFacebookNotEqualTo(String value) {
            addCriterion("prof.facebook <>", value, "facebook");
            return (Criteria) this;
        }

        public Criteria andFacebookGreaterThan(String value) {
            addCriterion("prof.facebook >", value, "facebook");
            return (Criteria) this;
        }

        public Criteria andFacebookGreaterThanOrEqualTo(String value) {
            addCriterion("prof.facebook >=", value, "facebook");
            return (Criteria) this;
        }

        public Criteria andFacebookLessThan(String value) {
            addCriterion("prof.facebook <", value, "facebook");
            return (Criteria) this;
        }

        public Criteria andFacebookLessThanOrEqualTo(String value) {
            addCriterion("prof.facebook <=", value, "facebook");
            return (Criteria) this;
        }

        public Criteria andFacebookLike(String value) {
            addCriterion("prof.facebook like", value, "facebook");
            return (Criteria) this;
        }

        public Criteria andFacebookNotLike(String value) {
            addCriterion("prof.facebook not like", value, "facebook");
            return (Criteria) this;
        }

        public Criteria andFacebookIn(List<String> values) {
            addCriterion("prof.facebook in", values, "facebook");
            return (Criteria) this;
        }

        public Criteria andFacebookNotIn(List<String> values) {
            addCriterion("prof.facebook not in", values, "facebook");
            return (Criteria) this;
        }

        public Criteria andFacebookBetween(String value1, String value2) {
            addCriterion("prof.facebook between", value1, value2, "facebook");
            return (Criteria) this;
        }

        public Criteria andFacebookNotBetween(String value1, String value2) {
            addCriterion("prof.facebook not between", value1, value2, "facebook");
            return (Criteria) this;
        }

        public Criteria andBusinesshoursIsNull() {
            addCriterion("prof.businesshours is null");
            return (Criteria) this;
        }

        public Criteria andBusinesshoursIsNotNull() {
            addCriterion("prof.businesshours is not null");
            return (Criteria) this;
        }

        public Criteria andBusinesshoursEqualTo(String value) {
            addCriterion("prof.businesshours =", value, "businesshours");
            return (Criteria) this;
        }

        public Criteria andBusinesshoursNotEqualTo(String value) {
            addCriterion("prof.businesshours <>", value, "businesshours");
            return (Criteria) this;
        }

        public Criteria andBusinesshoursGreaterThan(String value) {
            addCriterion("prof.businesshours >", value, "businesshours");
            return (Criteria) this;
        }

        public Criteria andBusinesshoursGreaterThanOrEqualTo(String value) {
            addCriterion("prof.businesshours >=", value, "businesshours");
            return (Criteria) this;
        }

        public Criteria andBusinesshoursLessThan(String value) {
            addCriterion("prof.businesshours <", value, "businesshours");
            return (Criteria) this;
        }

        public Criteria andBusinesshoursLessThanOrEqualTo(String value) {
            addCriterion("prof.businesshours <=", value, "businesshours");
            return (Criteria) this;
        }

        public Criteria andBusinesshoursLike(String value) {
            addCriterion("prof.businesshours like", value, "businesshours");
            return (Criteria) this;
        }

        public Criteria andBusinesshoursNotLike(String value) {
            addCriterion("prof.businesshours not like", value, "businesshours");
            return (Criteria) this;
        }

        public Criteria andBusinesshoursIn(List<String> values) {
            addCriterion("prof.businesshours in", values, "businesshours");
            return (Criteria) this;
        }

        public Criteria andBusinesshoursNotIn(List<String> values) {
            addCriterion("prof.businesshours not in", values, "businesshours");
            return (Criteria) this;
        }

        public Criteria andBusinesshoursBetween(String value1, String value2) {
            addCriterion("prof.businesshours between", value1, value2, "businesshours");
            return (Criteria) this;
        }

        public Criteria andBusinesshoursNotBetween(String value1, String value2) {
            addCriterion("prof.businesshours not between", value1, value2, "businesshours");
            return (Criteria) this;
        }

        public Criteria andDescriptionIsNull() {
            addCriterion("prof.description is null");
            return (Criteria) this;
        }

        public Criteria andDescriptionIsNotNull() {
            addCriterion("prof.description is not null");
            return (Criteria) this;
        }

        public Criteria andDescriptionEqualTo(String value) {
            addCriterion("prof.description =", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionNotEqualTo(String value) {
            addCriterion("prof.description <>", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionGreaterThan(String value) {
            addCriterion("prof.description >", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionGreaterThanOrEqualTo(String value) {
            addCriterion("prof.description >=", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionLessThan(String value) {
            addCriterion("prof.description <", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionLessThanOrEqualTo(String value) {
            addCriterion("prof.description <=", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionLike(String value) {
            addCriterion("prof.description like", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionNotLike(String value) {
            addCriterion("prof.description not like", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionIn(List<String> values) {
            addCriterion("prof.description in", values, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionNotIn(List<String> values) {
            addCriterion("prof.description not in", values, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionBetween(String value1, String value2) {
            addCriterion("prof.description between", value1, value2, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionNotBetween(String value1, String value2) {
            addCriterion("prof.description not between", value1, value2, "description");
            return (Criteria) this;
        }

        public Criteria andEmailvalidIsNull() {
            addCriterion("prof.emailvalid is null");
            return (Criteria) this;
        }

        public Criteria andEmailvalidIsNotNull() {
            addCriterion("prof.emailvalid is not null");
            return (Criteria) this;
        }

        public Criteria andEmailvalidEqualTo(Integer value) {
            addCriterion("prof.emailvalid =", value, "emailvalid");
            return (Criteria) this;
        }

        public Criteria andEmailvalidNotEqualTo(Integer value) {
            addCriterion("prof.emailvalid <>", value, "emailvalid");
            return (Criteria) this;
        }

        public Criteria andEmailvalidGreaterThan(Integer value) {
            addCriterion("prof.emailvalid >", value, "emailvalid");
            return (Criteria) this;
        }

        public Criteria andEmailvalidGreaterThanOrEqualTo(Integer value) {
            addCriterion("prof.emailvalid >=", value, "emailvalid");
            return (Criteria) this;
        }

        public Criteria andEmailvalidLessThan(Integer value) {
            addCriterion("prof.emailvalid <", value, "emailvalid");
            return (Criteria) this;
        }

        public Criteria andEmailvalidLessThanOrEqualTo(Integer value) {
            addCriterion("prof.emailvalid <=", value, "emailvalid");
            return (Criteria) this;
        }

        public Criteria andEmailvalidIn(List<Integer> values) {
            addCriterion("prof.emailvalid in", values, "emailvalid");
            return (Criteria) this;
        }

        public Criteria andEmailvalidNotIn(List<Integer> values) {
            addCriterion("prof.emailvalid not in", values, "emailvalid");
            return (Criteria) this;
        }

        public Criteria andEmailvalidBetween(Integer value1, Integer value2) {
            addCriterion("prof.emailvalid between", value1, value2, "emailvalid");
            return (Criteria) this;
        }

        public Criteria andEmailvalidNotBetween(Integer value1, Integer value2) {
            addCriterion("prof.emailvalid not between", value1, value2, "emailvalid");
            return (Criteria) this;
        }

        public Criteria andApprovedIsNull() {
            addCriterion("prof.approved is null");
            return (Criteria) this;
        }

        public Criteria andApprovedIsNotNull() {
            addCriterion("prof.approved is not null");
            return (Criteria) this;
        }

        public Criteria andApprovedEqualTo(Integer value) {
            addCriterion("prof.approved =", value, "approved");
            return (Criteria) this;
        }

        public Criteria andApprovedNotEqualTo(Integer value) {
            addCriterion("prof.approved <>", value, "approved");
            return (Criteria) this;
        }

        public Criteria andApprovedGreaterThan(Integer value) {
            addCriterion("prof.approved >", value, "approved");
            return (Criteria) this;
        }

        public Criteria andApprovedGreaterThanOrEqualTo(Integer value) {
            addCriterion("prof.approved >=", value, "approved");
            return (Criteria) this;
        }

        public Criteria andApprovedLessThan(Integer value) {
            addCriterion("prof.approved <", value, "approved");
            return (Criteria) this;
        }

        public Criteria andApprovedLessThanOrEqualTo(Integer value) {
            addCriterion("prof.approved <=", value, "approved");
            return (Criteria) this;
        }

        public Criteria andApprovedIn(List<Integer> values) {
            addCriterion("prof.approved in", values, "approved");
            return (Criteria) this;
        }

        public Criteria andApprovedNotIn(List<Integer> values) {
            addCriterion("prof.approved not in", values, "approved");
            return (Criteria) this;
        }

        public Criteria andApprovedBetween(Integer value1, Integer value2) {
            addCriterion("prof.approved between", value1, value2, "approved");
            return (Criteria) this;
        }

        public Criteria andApprovedNotBetween(Integer value1, Integer value2) {
            addCriterion("prof.approved not between", value1, value2, "approved");
            return (Criteria) this;
        }

        public Criteria andDatachangedIsNull() {
            addCriterion("prof.datachanged is null");
            return (Criteria) this;
        }

        public Criteria andDatachangedIsNotNull() {
            addCriterion("prof.datachanged is not null");
            return (Criteria) this;
        }

        public Criteria andDatachangedEqualTo(Integer value) {
            addCriterion("prof.datachanged =", value, "datachanged");
            return (Criteria) this;
        }

        public Criteria andDatachangedNotEqualTo(Integer value) {
            addCriterion("prof.datachanged <>", value, "datachanged");
            return (Criteria) this;
        }

        public Criteria andDatachangedGreaterThan(Integer value) {
            addCriterion("prof.datachanged >", value, "datachanged");
            return (Criteria) this;
        }

        public Criteria andDatachangedGreaterThanOrEqualTo(Integer value) {
            addCriterion("prof.datachanged >=", value, "datachanged");
            return (Criteria) this;
        }

        public Criteria andDatachangedLessThan(Integer value) {
            addCriterion("prof.datachanged <", value, "datachanged");
            return (Criteria) this;
        }

        public Criteria andDatachangedLessThanOrEqualTo(Integer value) {
            addCriterion("prof.datachanged <=", value, "datachanged");
            return (Criteria) this;
        }

        public Criteria andDatachangedIn(List<Integer> values) {
            addCriterion("prof.datachanged in", values, "datachanged");
            return (Criteria) this;
        }

        public Criteria andDatachangedNotIn(List<Integer> values) {
            addCriterion("prof.datachanged not in", values, "datachanged");
            return (Criteria) this;
        }

        public Criteria andDatachangedBetween(Integer value1, Integer value2) {
            addCriterion("prof.datachanged between", value1, value2, "datachanged");
            return (Criteria) this;
        }

        public Criteria andDatachangedNotBetween(Integer value1, Integer value2) {
            addCriterion("prof.datachanged not between", value1, value2, "datachanged");
            return (Criteria) this;
        }

        public Criteria andIdWallIsNull() {
            addCriterion("prof.id_wall is null");
            return (Criteria) this;
        }

        public Criteria andIdWallIsNotNull() {
            addCriterion("prof.id_wall is not null");
            return (Criteria) this;
        }

        public Criteria andIdWallEqualTo(Integer value) {
            addCriterion("prof.id_wall =", value, "idWall");
            return (Criteria) this;
        }

        public Criteria andIdWallNotEqualTo(Integer value) {
            addCriterion("prof.id_wall <>", value, "idWall");
            return (Criteria) this;
        }

        public Criteria andIdWallGreaterThan(Integer value) {
            addCriterion("prof.id_wall >", value, "idWall");
            return (Criteria) this;
        }

        public Criteria andIdWallGreaterThanOrEqualTo(Integer value) {
            addCriterion("prof.id_wall >=", value, "idWall");
            return (Criteria) this;
        }

        public Criteria andIdWallLessThan(Integer value) {
            addCriterion("prof.id_wall <", value, "idWall");
            return (Criteria) this;
        }

        public Criteria andIdWallLessThanOrEqualTo(Integer value) {
            addCriterion("prof.id_wall <=", value, "idWall");
            return (Criteria) this;
        }

        public Criteria andIdWallIn(List<Integer> values) {
            addCriterion("prof.id_wall in", values, "idWall");
            return (Criteria) this;
        }

        public Criteria andIdWallNotIn(List<Integer> values) {
            addCriterion("prof.id_wall not in", values, "idWall");
            return (Criteria) this;
        }

        public Criteria andIdWallBetween(Integer value1, Integer value2) {
            addCriterion("prof.id_wall between", value1, value2, "idWall");
            return (Criteria) this;
        }

        public Criteria andIdWallNotBetween(Integer value1, Integer value2) {
            addCriterion("prof.id_wall not between", value1, value2, "idWall");
            return (Criteria) this;
        }

        public Criteria andDeletedIsNull() {
            addCriterion("prof.deleted is null");
            return (Criteria) this;
        }

        public Criteria andDeletedIsNotNull() {
            addCriterion("prof.deleted is not null");
            return (Criteria) this;
        }

        public Criteria andDeletedEqualTo(Integer value) {
            addCriterion("prof.deleted =", value, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedNotEqualTo(Integer value) {
            addCriterion("prof.deleted <>", value, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedGreaterThan(Integer value) {
            addCriterion("prof.deleted >", value, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedGreaterThanOrEqualTo(Integer value) {
            addCriterion("prof.deleted >=", value, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedLessThan(Integer value) {
            addCriterion("prof.deleted <", value, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedLessThanOrEqualTo(Integer value) {
            addCriterion("prof.deleted <=", value, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedIn(List<Integer> values) {
            addCriterion("prof.deleted in", values, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedNotIn(List<Integer> values) {
            addCriterion("prof.deleted not in", values, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedBetween(Integer value1, Integer value2) {
            addCriterion("prof.deleted between", value1, value2, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedNotBetween(Integer value1, Integer value2) {
            addCriterion("prof.deleted not between", value1, value2, "deleted");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table PROFESIONAL
     *
     * @mbggenerated do_not_delete_during_merge Mon Jun 18 23:18:25 ART 2012
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}