package com.tdil.tuafesta.dao.impl;

import com.ibatis.sqlmap.client.SqlMapClient;
import com.tdil.tuafesta.dao.ProfesionalAgendaDAO;
import com.tdil.tuafesta.model.ProfesionalAgenda;
import com.tdil.tuafesta.model.ProfesionalAgendaExample;
import java.sql.SQLException;
import java.util.List;

public class ProfesionalAgendaDAOImpl implements ProfesionalAgendaDAO {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table PROFESIONAL_AGENDA
     *
     * @mbggenerated Mon Oct 29 16:37:30 ART 2012
     */
    private SqlMapClient sqlMapClient;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PROFESIONAL_AGENDA
     *
     * @mbggenerated Mon Oct 29 16:37:30 ART 2012
     */
    public ProfesionalAgendaDAOImpl(SqlMapClient sqlMapClient) {
        super();
        this.sqlMapClient = sqlMapClient;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PROFESIONAL_AGENDA
     *
     * @mbggenerated Mon Oct 29 16:37:30 ART 2012
     */
    public int countProfesionalAgendaByExample(ProfesionalAgendaExample example) throws SQLException {
        Integer count = (Integer)  sqlMapClient.queryForObject("PROFESIONAL_AGENDA.countByExample", example);
        return count;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PROFESIONAL_AGENDA
     *
     * @mbggenerated Mon Oct 29 16:37:30 ART 2012
     */
    public int deleteProfesionalAgendaByExample(ProfesionalAgendaExample example) throws SQLException {
        int rows = sqlMapClient.delete("PROFESIONAL_AGENDA.deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PROFESIONAL_AGENDA
     *
     * @mbggenerated Mon Oct 29 16:37:30 ART 2012
     */
    public int deleteProfesionalAgendaByPrimaryKey(Integer id) throws SQLException {
        ProfesionalAgenda _key = new ProfesionalAgenda();
        _key.setId(id);
        int rows = sqlMapClient.delete("PROFESIONAL_AGENDA.deleteByPrimaryKey", _key);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PROFESIONAL_AGENDA
     *
     * @mbggenerated Mon Oct 29 16:37:30 ART 2012
     */
    public Integer insertProfesionalAgenda(ProfesionalAgenda record) throws SQLException {
        Object newKey = sqlMapClient.insert("PROFESIONAL_AGENDA.insert", record);
        return (Integer) newKey;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PROFESIONAL_AGENDA
     *
     * @mbggenerated Mon Oct 29 16:37:30 ART 2012
     */
    public Integer insertProfesionalAgendaSelective(ProfesionalAgenda record) throws SQLException {
        Object newKey = sqlMapClient.insert("PROFESIONAL_AGENDA.insertSelective", record);
        return (Integer) newKey;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PROFESIONAL_AGENDA
     *
     * @mbggenerated Mon Oct 29 16:37:30 ART 2012
     */
    @SuppressWarnings("unchecked")
    public List<ProfesionalAgenda> selectProfesionalAgendaByExample(ProfesionalAgendaExample example) throws SQLException {
        List<ProfesionalAgenda> list = sqlMapClient.queryForList("PROFESIONAL_AGENDA.selectByExample", example);
        return list;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PROFESIONAL_AGENDA
     *
     * @mbggenerated Mon Oct 29 16:37:30 ART 2012
     */
    public ProfesionalAgenda selectProfesionalAgendaByPrimaryKey(Integer id) throws SQLException {
        ProfesionalAgenda _key = new ProfesionalAgenda();
        _key.setId(id);
        ProfesionalAgenda record = (ProfesionalAgenda) sqlMapClient.queryForObject("PROFESIONAL_AGENDA.selectByPrimaryKey", _key);
        return record;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PROFESIONAL_AGENDA
     *
     * @mbggenerated Mon Oct 29 16:37:30 ART 2012
     */
    public int updateProfesionalAgendaByExampleSelective(ProfesionalAgenda record, ProfesionalAgendaExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = sqlMapClient.update("PROFESIONAL_AGENDA.updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PROFESIONAL_AGENDA
     *
     * @mbggenerated Mon Oct 29 16:37:30 ART 2012
     */
    public int updateProfesionalAgendaByExample(ProfesionalAgenda record, ProfesionalAgendaExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = sqlMapClient.update("PROFESIONAL_AGENDA.updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PROFESIONAL_AGENDA
     *
     * @mbggenerated Mon Oct 29 16:37:30 ART 2012
     */
    public int updateProfesionalAgendaByPrimaryKeySelective(ProfesionalAgenda record) throws SQLException {
        int rows = sqlMapClient.update("PROFESIONAL_AGENDA.updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PROFESIONAL_AGENDA
     *
     * @mbggenerated Mon Oct 29 16:37:30 ART 2012
     */
    public int updateProfesionalAgendaByPrimaryKey(ProfesionalAgenda record) throws SQLException {
        int rows = sqlMapClient.update("PROFESIONAL_AGENDA.updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table PROFESIONAL_AGENDA
     *
     * @mbggenerated Mon Oct 29 16:37:30 ART 2012
     */
    protected static class UpdateByExampleParms extends ProfesionalAgendaExample {
        private Object record;

        public UpdateByExampleParms(Object record, ProfesionalAgendaExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
}