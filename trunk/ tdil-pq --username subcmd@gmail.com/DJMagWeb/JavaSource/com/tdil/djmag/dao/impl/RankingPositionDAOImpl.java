package com.tdil.djmag.dao.impl;

import com.ibatis.sqlmap.client.SqlMapClient;
import com.tdil.djmag.dao.RankingPositionDAO;
import com.tdil.djmag.model.RankingPosition;
import com.tdil.djmag.model.RankingPositionExample;
import java.sql.SQLException;
import java.util.List;

public class RankingPositionDAOImpl implements RankingPositionDAO {

	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table RANKING_POSITION
	 * @mbggenerated  Tue Jun 19 18:08:48 ART 2012
	 */
	private SqlMapClient sqlMapClient;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table RANKING_POSITION
	 * @mbggenerated  Tue Jun 19 18:08:48 ART 2012
	 */
	public RankingPositionDAOImpl(SqlMapClient sqlMapClient) {
		super();
		this.sqlMapClient = sqlMapClient;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table RANKING_POSITION
	 * @mbggenerated  Tue Jun 19 18:08:48 ART 2012
	 */
	public int countRankingPositionByExample(RankingPositionExample example) throws SQLException {
		Integer count = (Integer) sqlMapClient.queryForObject("RANKING_POSITION.countByExample", example);
		return count;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table RANKING_POSITION
	 * @mbggenerated  Tue Jun 19 18:08:48 ART 2012
	 */
	public int deleteRankingPositionByExample(RankingPositionExample example) throws SQLException {
		int rows = sqlMapClient.delete("RANKING_POSITION.deleteByExample", example);
		return rows;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table RANKING_POSITION
	 * @mbggenerated  Tue Jun 19 18:08:48 ART 2012
	 */
	public int deleteRankingPositionByPrimaryKey(Integer id) throws SQLException {
		RankingPosition _key = new RankingPosition();
		_key.setId(id);
		int rows = sqlMapClient.delete("RANKING_POSITION.deleteByPrimaryKey", _key);
		return rows;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table RANKING_POSITION
	 * @mbggenerated  Tue Jun 19 18:08:48 ART 2012
	 */
	public Integer insertRankingPosition(RankingPosition record) throws SQLException {
		Object newKey = sqlMapClient.insert("RANKING_POSITION.insert", record);
		return (Integer) newKey;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table RANKING_POSITION
	 * @mbggenerated  Tue Jun 19 18:08:48 ART 2012
	 */
	public Integer insertRankingPositionSelective(RankingPosition record) throws SQLException {
		Object newKey = sqlMapClient.insert("RANKING_POSITION.insertSelective", record);
		return (Integer) newKey;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table RANKING_POSITION
	 * @mbggenerated  Tue Jun 19 18:08:48 ART 2012
	 */
	@SuppressWarnings("unchecked")
	public List<RankingPosition> selectRankingPositionByExampleWithBLOBs(RankingPositionExample example)
			throws SQLException {
		List<RankingPosition> list = sqlMapClient.queryForList("RANKING_POSITION.selectByExampleWithBLOBs", example);
		return list;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table RANKING_POSITION
	 * @mbggenerated  Tue Jun 19 18:08:48 ART 2012
	 */
	@SuppressWarnings("unchecked")
	public List<RankingPosition> selectRankingPositionByExampleWithoutBLOBs(RankingPositionExample example)
			throws SQLException {
		List<RankingPosition> list = sqlMapClient.queryForList("RANKING_POSITION.selectByExample", example);
		return list;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table RANKING_POSITION
	 * @mbggenerated  Tue Jun 19 18:08:48 ART 2012
	 */
	public RankingPosition selectRankingPositionByPrimaryKey(Integer id) throws SQLException {
		RankingPosition _key = new RankingPosition();
		_key.setId(id);
		RankingPosition record = (RankingPosition) sqlMapClient.queryForObject("RANKING_POSITION.selectByPrimaryKey",
				_key);
		return record;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table RANKING_POSITION
	 * @mbggenerated  Tue Jun 19 18:08:48 ART 2012
	 */
	public int updateRankingPositionByExampleSelective(RankingPosition record, RankingPositionExample example)
			throws SQLException {
		UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
		int rows = sqlMapClient.update("RANKING_POSITION.updateByExampleSelective", parms);
		return rows;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table RANKING_POSITION
	 * @mbggenerated  Tue Jun 19 18:08:48 ART 2012
	 */
	public int updateRankingPositionByExampleWithBLOBs(RankingPosition record, RankingPositionExample example)
			throws SQLException {
		UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
		int rows = sqlMapClient.update("RANKING_POSITION.updateByExampleWithBLOBs", parms);
		return rows;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table RANKING_POSITION
	 * @mbggenerated  Tue Jun 19 18:08:48 ART 2012
	 */
	public int updateRankingPositionByExampleWithoutBLOBs(RankingPosition record, RankingPositionExample example)
			throws SQLException {
		UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
		int rows = sqlMapClient.update("RANKING_POSITION.updateByExample", parms);
		return rows;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table RANKING_POSITION
	 * @mbggenerated  Tue Jun 19 18:08:48 ART 2012
	 */
	public int updateRankingPositionByPrimaryKeySelective(RankingPosition record) throws SQLException {
		int rows = sqlMapClient.update("RANKING_POSITION.updateByPrimaryKeySelective", record);
		return rows;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table RANKING_POSITION
	 * @mbggenerated  Tue Jun 19 18:08:48 ART 2012
	 */
	public int updateRankingPositionByPrimaryKeyWithBLOBs(RankingPosition record) throws SQLException {
		int rows = sqlMapClient.update("RANKING_POSITION.updateByPrimaryKeyWithBLOBs", record);
		return rows;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table RANKING_POSITION
	 * @mbggenerated  Tue Jun 19 18:08:48 ART 2012
	 */
	public int updateRankingPositionByPrimaryKeyWithoutBLOBs(RankingPosition record) throws SQLException {
		int rows = sqlMapClient.update("RANKING_POSITION.updateByPrimaryKey", record);
		return rows;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table RANKING_POSITION
	 * @mbggenerated  Tue Jun 19 18:08:48 ART 2012
	 */
	protected static class UpdateByExampleParms extends RankingPositionExample {
		private Object record;

		public UpdateByExampleParms(Object record, RankingPositionExample example) {
			super(example);
			this.record = record;
		}

		public Object getRecord() {
			return record;
		}
	}
}