package com.tdil.djmag.dao.impl;

import com.ibatis.sqlmap.client.SqlMapClient;
import com.tdil.djmag.dao.RankingNoteDAO;
import com.tdil.djmag.model.RankingNote;
import com.tdil.djmag.model.RankingNoteExample;
import java.sql.SQLException;
import java.util.List;

public class RankingNoteDAOImpl implements RankingNoteDAO {

	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table RANKING_NOTE
	 * @mbggenerated  Tue Apr 17 18:10:25 ART 2012
	 */
	private SqlMapClient sqlMapClient;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table RANKING_NOTE
	 * @mbggenerated  Tue Apr 17 18:10:25 ART 2012
	 */
	public RankingNoteDAOImpl(SqlMapClient sqlMapClient) {
		super();
		this.sqlMapClient = sqlMapClient;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table RANKING_NOTE
	 * @mbggenerated  Tue Apr 17 18:10:25 ART 2012
	 */
	public int countRankingNoteByExample(RankingNoteExample example) throws SQLException {
		Integer count = (Integer) sqlMapClient.queryForObject("RANKING_NOTE.countByExample", example);
		return count;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table RANKING_NOTE
	 * @mbggenerated  Tue Apr 17 18:10:25 ART 2012
	 */
	public int deleteRankingNoteByExample(RankingNoteExample example) throws SQLException {
		int rows = sqlMapClient.delete("RANKING_NOTE.deleteByExample", example);
		return rows;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table RANKING_NOTE
	 * @mbggenerated  Tue Apr 17 18:10:25 ART 2012
	 */
	public int deleteRankingNoteByPrimaryKey(Integer id) throws SQLException {
		RankingNote _key = new RankingNote();
		_key.setId(id);
		int rows = sqlMapClient.delete("RANKING_NOTE.deleteByPrimaryKey", _key);
		return rows;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table RANKING_NOTE
	 * @mbggenerated  Tue Apr 17 18:10:25 ART 2012
	 */
	public Integer insertRankingNote(RankingNote record) throws SQLException {
		Object newKey = sqlMapClient.insert("RANKING_NOTE.insert", record);
		return (Integer) newKey;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table RANKING_NOTE
	 * @mbggenerated  Tue Apr 17 18:10:25 ART 2012
	 */
	public Integer insertRankingNoteSelective(RankingNote record) throws SQLException {
		Object newKey = sqlMapClient.insert("RANKING_NOTE.insertSelective", record);
		return (Integer) newKey;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table RANKING_NOTE
	 * @mbggenerated  Tue Apr 17 18:10:25 ART 2012
	 */
	@SuppressWarnings("unchecked")
	public List<RankingNote> selectRankingNoteByExampleWithBLOBs(RankingNoteExample example) throws SQLException {
		List<RankingNote> list = sqlMapClient.queryForList("RANKING_NOTE.selectByExampleWithBLOBs", example);
		return list;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table RANKING_NOTE
	 * @mbggenerated  Tue Apr 17 18:10:25 ART 2012
	 */
	@SuppressWarnings("unchecked")
	public List<RankingNote> selectRankingNoteByExampleWithoutBLOBs(RankingNoteExample example) throws SQLException {
		List<RankingNote> list = sqlMapClient.queryForList("RANKING_NOTE.selectByExample", example);
		return list;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table RANKING_NOTE
	 * @mbggenerated  Tue Apr 17 18:10:25 ART 2012
	 */
	public RankingNote selectRankingNoteByPrimaryKey(Integer id) throws SQLException {
		RankingNote _key = new RankingNote();
		_key.setId(id);
		RankingNote record = (RankingNote) sqlMapClient.queryForObject("RANKING_NOTE.selectByPrimaryKey", _key);
		return record;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table RANKING_NOTE
	 * @mbggenerated  Tue Apr 17 18:10:25 ART 2012
	 */
	public int updateRankingNoteByExampleSelective(RankingNote record, RankingNoteExample example) throws SQLException {
		UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
		int rows = sqlMapClient.update("RANKING_NOTE.updateByExampleSelective", parms);
		return rows;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table RANKING_NOTE
	 * @mbggenerated  Tue Apr 17 18:10:25 ART 2012
	 */
	public int updateRankingNoteByExampleWithBLOBs(RankingNote record, RankingNoteExample example) throws SQLException {
		UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
		int rows = sqlMapClient.update("RANKING_NOTE.updateByExampleWithBLOBs", parms);
		return rows;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table RANKING_NOTE
	 * @mbggenerated  Tue Apr 17 18:10:25 ART 2012
	 */
	public int updateRankingNoteByExampleWithoutBLOBs(RankingNote record, RankingNoteExample example)
			throws SQLException {
		UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
		int rows = sqlMapClient.update("RANKING_NOTE.updateByExample", parms);
		return rows;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table RANKING_NOTE
	 * @mbggenerated  Tue Apr 17 18:10:25 ART 2012
	 */
	public int updateRankingNoteByPrimaryKeySelective(RankingNote record) throws SQLException {
		int rows = sqlMapClient.update("RANKING_NOTE.updateByPrimaryKeySelective", record);
		return rows;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table RANKING_NOTE
	 * @mbggenerated  Tue Apr 17 18:10:25 ART 2012
	 */
	public int updateRankingNoteByPrimaryKeyWithBLOBs(RankingNote record) throws SQLException {
		int rows = sqlMapClient.update("RANKING_NOTE.updateByPrimaryKeyWithBLOBs", record);
		return rows;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table RANKING_NOTE
	 * @mbggenerated  Tue Apr 17 18:10:25 ART 2012
	 */
	public int updateRankingNoteByPrimaryKeyWithoutBLOBs(RankingNote record) throws SQLException {
		int rows = sqlMapClient.update("RANKING_NOTE.updateByPrimaryKey", record);
		return rows;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table RANKING_NOTE
	 * @mbggenerated  Tue Apr 17 18:10:25 ART 2012
	 */
	protected static class UpdateByExampleParms extends RankingNoteExample {
		private Object record;

		public UpdateByExampleParms(Object record, RankingNoteExample example) {
			super(example);
			this.record = record;
		}

		public Object getRecord() {
			return record;
		}
	}
}