package com.tdil.milka.dao.impl;

import com.ibatis.sqlmap.client.SqlMapClient;
import com.tdil.milka.dao.LinksDAO;
import com.tdil.milka.model.Links;
import com.tdil.milka.model.LinksExample;
import java.sql.SQLException;
import java.util.List;

public class LinksDAOImpl implements LinksDAO {

	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table LINKS
	 * @mbggenerated  Wed Jun 27 22:57:22 ART 2012
	 */
	private SqlMapClient sqlMapClient;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table LINKS
	 * @mbggenerated  Wed Jun 27 22:57:22 ART 2012
	 */
	public LinksDAOImpl(SqlMapClient sqlMapClient) {
		super();
		this.sqlMapClient = sqlMapClient;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table LINKS
	 * @mbggenerated  Wed Jun 27 22:57:22 ART 2012
	 */
	public int countLinksByExample(LinksExample example) throws SQLException {
		Integer count = (Integer) sqlMapClient.queryForObject("LINKS.countByExample", example);
		return count;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table LINKS
	 * @mbggenerated  Wed Jun 27 22:57:22 ART 2012
	 */
	public int deleteLinksByExample(LinksExample example) throws SQLException {
		int rows = sqlMapClient.delete("LINKS.deleteByExample", example);
		return rows;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table LINKS
	 * @mbggenerated  Wed Jun 27 22:57:22 ART 2012
	 */
	public int deleteLinksByPrimaryKey(Integer id) throws SQLException {
		Links _key = new Links();
		_key.setId(id);
		int rows = sqlMapClient.delete("LINKS.deleteByPrimaryKey", _key);
		return rows;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table LINKS
	 * @mbggenerated  Wed Jun 27 22:57:22 ART 2012
	 */
	public Integer insertLinks(Links record) throws SQLException {
		Object newKey = sqlMapClient.insert("LINKS.insert", record);
		return (Integer) newKey;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table LINKS
	 * @mbggenerated  Wed Jun 27 22:57:22 ART 2012
	 */
	public Integer insertLinksSelective(Links record) throws SQLException {
		Object newKey = sqlMapClient.insert("LINKS.insertSelective", record);
		return (Integer) newKey;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table LINKS
	 * @mbggenerated  Wed Jun 27 22:57:22 ART 2012
	 */
	@SuppressWarnings("unchecked")
	public List<Links> selectLinksByExample(LinksExample example) throws SQLException {
		List<Links> list = sqlMapClient.queryForList("LINKS.selectByExample", example);
		return list;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table LINKS
	 * @mbggenerated  Wed Jun 27 22:57:22 ART 2012
	 */
	public Links selectLinksByPrimaryKey(Integer id) throws SQLException {
		Links _key = new Links();
		_key.setId(id);
		Links record = (Links) sqlMapClient.queryForObject("LINKS.selectByPrimaryKey", _key);
		return record;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table LINKS
	 * @mbggenerated  Wed Jun 27 22:57:22 ART 2012
	 */
	public int updateLinksByExampleSelective(Links record, LinksExample example) throws SQLException {
		UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
		int rows = sqlMapClient.update("LINKS.updateByExampleSelective", parms);
		return rows;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table LINKS
	 * @mbggenerated  Wed Jun 27 22:57:22 ART 2012
	 */
	public int updateLinksByExample(Links record, LinksExample example) throws SQLException {
		UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
		int rows = sqlMapClient.update("LINKS.updateByExample", parms);
		return rows;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table LINKS
	 * @mbggenerated  Wed Jun 27 22:57:22 ART 2012
	 */
	public int updateLinksByPrimaryKeySelective(Links record) throws SQLException {
		int rows = sqlMapClient.update("LINKS.updateByPrimaryKeySelective", record);
		return rows;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table LINKS
	 * @mbggenerated  Wed Jun 27 22:57:22 ART 2012
	 */
	public int updateLinksByPrimaryKey(Links record) throws SQLException {
		int rows = sqlMapClient.update("LINKS.updateByPrimaryKey", record);
		return rows;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table LINKS
	 * @mbggenerated  Wed Jun 27 22:57:22 ART 2012
	 */
	protected static class UpdateByExampleParms extends LinksExample {
		private Object record;

		public UpdateByExampleParms(Object record, LinksExample example) {
			super(example);
			this.record = record;
		}

		public Object getRecord() {
			return record;
		}
	}
}