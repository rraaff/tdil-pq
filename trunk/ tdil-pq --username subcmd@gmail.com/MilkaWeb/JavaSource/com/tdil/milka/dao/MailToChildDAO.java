package com.tdil.milka.dao;

import java.sql.SQLException;
import java.util.List;

import com.tdil.milka.model.MailToChild;
import com.tdil.milka.model.MailToChildExample;
import com.tdil.milka.model.valueobjects.ExperienceValueObject;
import com.tdil.milka.model.valueobjects.MailToChildValueObject;

public interface MailToChildDAO {
    /**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table MAIL_TO_CHILD
	 * @mbggenerated  Wed Jun 27 22:57:22 ART 2012
	 */
	int countMailToChildByExample(MailToChildExample example) throws SQLException;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table MAIL_TO_CHILD
	 * @mbggenerated  Wed Jun 27 22:57:22 ART 2012
	 */
	int deleteMailToChildByExample(MailToChildExample example) throws SQLException;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table MAIL_TO_CHILD
	 * @mbggenerated  Wed Jun 27 22:57:22 ART 2012
	 */
	int deleteMailToChildByPrimaryKey(Integer id) throws SQLException;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table MAIL_TO_CHILD
	 * @mbggenerated  Wed Jun 27 22:57:22 ART 2012
	 */
	Integer insertMailToChild(MailToChild record) throws SQLException;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table MAIL_TO_CHILD
	 * @mbggenerated  Wed Jun 27 22:57:22 ART 2012
	 */
	Integer insertMailToChildSelective(MailToChild record) throws SQLException;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table MAIL_TO_CHILD
	 * @mbggenerated  Wed Jun 27 22:57:22 ART 2012
	 */
	List<MailToChild> selectMailToChildByExample(MailToChildExample example) throws SQLException;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table MAIL_TO_CHILD
	 * @mbggenerated  Wed Jun 27 22:57:22 ART 2012
	 */
	MailToChild selectMailToChildByPrimaryKey(Integer id) throws SQLException;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table MAIL_TO_CHILD
	 * @mbggenerated  Wed Jun 27 22:57:22 ART 2012
	 */
	int updateMailToChildByExampleSelective(MailToChild record, MailToChildExample example) throws SQLException;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table MAIL_TO_CHILD
	 * @mbggenerated  Wed Jun 27 22:57:22 ART 2012
	 */
	int updateMailToChildByExample(MailToChild record, MailToChildExample example) throws SQLException;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table MAIL_TO_CHILD
	 * @mbggenerated  Wed Jun 27 22:57:22 ART 2012
	 */
	int updateMailToChildByPrimaryKeySelective(MailToChild record) throws SQLException;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table MAIL_TO_CHILD
	 * @mbggenerated  Wed Jun 27 22:57:22 ART 2012
	 */
	int updateMailToChildByPrimaryKey(MailToChild record) throws SQLException;

	List<MailToChildValueObject> selectMailToChildToApproveWithAuthor() throws SQLException;

	List<MailToChildValueObject> selectMailToChildToReviewWithAuthor() throws SQLException;

	List<ExperienceValueObject> search() throws SQLException;

	MailToChildValueObject selectMailToChildValueObjectByPrimaryKey(int id) throws SQLException;

	List<MailToChildValueObject> selectApproved(int start, int i) throws SQLException;

	int countApproved() throws SQLException;
}