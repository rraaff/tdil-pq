package com.tdil.milka.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class LoveNicknamesExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table LOVE_NICKNAMES
	 * @mbggenerated  Wed Jun 27 22:57:22 ART 2012
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table LOVE_NICKNAMES
	 * @mbggenerated  Wed Jun 27 22:57:22 ART 2012
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table LOVE_NICKNAMES
	 * @mbggenerated  Wed Jun 27 22:57:22 ART 2012
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table LOVE_NICKNAMES
	 * @mbggenerated  Wed Jun 27 22:57:22 ART 2012
	 */
	public LoveNicknamesExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table LOVE_NICKNAMES
	 * @mbggenerated  Wed Jun 27 22:57:22 ART 2012
	 */
	protected LoveNicknamesExample(LoveNicknamesExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
		this.distinct = example.distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table LOVE_NICKNAMES
	 * @mbggenerated  Wed Jun 27 22:57:22 ART 2012
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table LOVE_NICKNAMES
	 * @mbggenerated  Wed Jun 27 22:57:22 ART 2012
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table LOVE_NICKNAMES
	 * @mbggenerated  Wed Jun 27 22:57:22 ART 2012
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table LOVE_NICKNAMES
	 * @mbggenerated  Wed Jun 27 22:57:22 ART 2012
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table LOVE_NICKNAMES
	 * @mbggenerated  Wed Jun 27 22:57:22 ART 2012
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table LOVE_NICKNAMES
	 * @mbggenerated  Wed Jun 27 22:57:22 ART 2012
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table LOVE_NICKNAMES
	 * @mbggenerated  Wed Jun 27 22:57:22 ART 2012
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table LOVE_NICKNAMES
	 * @mbggenerated  Wed Jun 27 22:57:22 ART 2012
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table LOVE_NICKNAMES
	 * @mbggenerated  Wed Jun 27 22:57:22 ART 2012
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table LOVE_NICKNAMES
	 * @mbggenerated  Wed Jun 27 22:57:22 ART 2012
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table LOVE_NICKNAMES
	 * @mbggenerated  Wed Jun 27 22:57:22 ART 2012
	 */
	protected abstract static class GeneratedCriteria {
		protected List<String> criteriaWithoutValue;
		protected List<Map<String, Object>> criteriaWithSingleValue;
		protected List<Map<String, Object>> criteriaWithListValue;
		protected List<Map<String, Object>> criteriaWithBetweenValue;

		protected GeneratedCriteria() {
			super();
			criteriaWithoutValue = new ArrayList<String>();
			criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
			criteriaWithListValue = new ArrayList<Map<String, Object>>();
			criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0 || criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0 || criteriaWithBetweenValue.size() > 0;
		}

		public List<String> getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List<Map<String, Object>> getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List<Map<String, Object>> getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List<Map<String, Object>> getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition, List<? extends Object> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property + " cannot be null or empty");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			List<Object> list = new ArrayList<Object>();
			list.add(value1);
			list.add(value2);
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andIdIsNull() {
			addCriterion("lnn.id is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("lnn.id is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("lnn.id =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("lnn.id <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("lnn.id >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("lnn.id >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("lnn.id <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("lnn.id <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Integer> values) {
			addCriterion("lnn.id in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Integer> values) {
			addCriterion("lnn.id not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("lnn.id between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("lnn.id not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andCreationdateIsNull() {
			addCriterion("lnn.creationDate is null");
			return (Criteria) this;
		}

		public Criteria andCreationdateIsNotNull() {
			addCriterion("lnn.creationDate is not null");
			return (Criteria) this;
		}

		public Criteria andCreationdateEqualTo(Date value) {
			addCriterion("lnn.creationDate =", value, "creationdate");
			return (Criteria) this;
		}

		public Criteria andCreationdateNotEqualTo(Date value) {
			addCriterion("lnn.creationDate <>", value, "creationdate");
			return (Criteria) this;
		}

		public Criteria andCreationdateGreaterThan(Date value) {
			addCriterion("lnn.creationDate >", value, "creationdate");
			return (Criteria) this;
		}

		public Criteria andCreationdateGreaterThanOrEqualTo(Date value) {
			addCriterion("lnn.creationDate >=", value, "creationdate");
			return (Criteria) this;
		}

		public Criteria andCreationdateLessThan(Date value) {
			addCriterion("lnn.creationDate <", value, "creationdate");
			return (Criteria) this;
		}

		public Criteria andCreationdateLessThanOrEqualTo(Date value) {
			addCriterion("lnn.creationDate <=", value, "creationdate");
			return (Criteria) this;
		}

		public Criteria andCreationdateIn(List<Date> values) {
			addCriterion("lnn.creationDate in", values, "creationdate");
			return (Criteria) this;
		}

		public Criteria andCreationdateNotIn(List<Date> values) {
			addCriterion("lnn.creationDate not in", values, "creationdate");
			return (Criteria) this;
		}

		public Criteria andCreationdateBetween(Date value1, Date value2) {
			addCriterion("lnn.creationDate between", value1, value2, "creationdate");
			return (Criteria) this;
		}

		public Criteria andCreationdateNotBetween(Date value1, Date value2) {
			addCriterion("lnn.creationDate not between", value1, value2, "creationdate");
			return (Criteria) this;
		}

		public Criteria andPublishdateIsNull() {
			addCriterion("lnn.publishDate is null");
			return (Criteria) this;
		}

		public Criteria andPublishdateIsNotNull() {
			addCriterion("lnn.publishDate is not null");
			return (Criteria) this;
		}

		public Criteria andPublishdateEqualTo(Date value) {
			addCriterion("lnn.publishDate =", value, "publishdate");
			return (Criteria) this;
		}

		public Criteria andPublishdateNotEqualTo(Date value) {
			addCriterion("lnn.publishDate <>", value, "publishdate");
			return (Criteria) this;
		}

		public Criteria andPublishdateGreaterThan(Date value) {
			addCriterion("lnn.publishDate >", value, "publishdate");
			return (Criteria) this;
		}

		public Criteria andPublishdateGreaterThanOrEqualTo(Date value) {
			addCriterion("lnn.publishDate >=", value, "publishdate");
			return (Criteria) this;
		}

		public Criteria andPublishdateLessThan(Date value) {
			addCriterion("lnn.publishDate <", value, "publishdate");
			return (Criteria) this;
		}

		public Criteria andPublishdateLessThanOrEqualTo(Date value) {
			addCriterion("lnn.publishDate <=", value, "publishdate");
			return (Criteria) this;
		}

		public Criteria andPublishdateIn(List<Date> values) {
			addCriterion("lnn.publishDate in", values, "publishdate");
			return (Criteria) this;
		}

		public Criteria andPublishdateNotIn(List<Date> values) {
			addCriterion("lnn.publishDate not in", values, "publishdate");
			return (Criteria) this;
		}

		public Criteria andPublishdateBetween(Date value1, Date value2) {
			addCriterion("lnn.publishDate between", value1, value2, "publishdate");
			return (Criteria) this;
		}

		public Criteria andPublishdateNotBetween(Date value1, Date value2) {
			addCriterion("lnn.publishDate not between", value1, value2, "publishdate");
			return (Criteria) this;
		}

		public Criteria andIdAuthorIsNull() {
			addCriterion("lnn.id_author is null");
			return (Criteria) this;
		}

		public Criteria andIdAuthorIsNotNull() {
			addCriterion("lnn.id_author is not null");
			return (Criteria) this;
		}

		public Criteria andIdAuthorEqualTo(Integer value) {
			addCriterion("lnn.id_author =", value, "idAuthor");
			return (Criteria) this;
		}

		public Criteria andIdAuthorNotEqualTo(Integer value) {
			addCriterion("lnn.id_author <>", value, "idAuthor");
			return (Criteria) this;
		}

		public Criteria andIdAuthorGreaterThan(Integer value) {
			addCriterion("lnn.id_author >", value, "idAuthor");
			return (Criteria) this;
		}

		public Criteria andIdAuthorGreaterThanOrEqualTo(Integer value) {
			addCriterion("lnn.id_author >=", value, "idAuthor");
			return (Criteria) this;
		}

		public Criteria andIdAuthorLessThan(Integer value) {
			addCriterion("lnn.id_author <", value, "idAuthor");
			return (Criteria) this;
		}

		public Criteria andIdAuthorLessThanOrEqualTo(Integer value) {
			addCriterion("lnn.id_author <=", value, "idAuthor");
			return (Criteria) this;
		}

		public Criteria andIdAuthorIn(List<Integer> values) {
			addCriterion("lnn.id_author in", values, "idAuthor");
			return (Criteria) this;
		}

		public Criteria andIdAuthorNotIn(List<Integer> values) {
			addCriterion("lnn.id_author not in", values, "idAuthor");
			return (Criteria) this;
		}

		public Criteria andIdAuthorBetween(Integer value1, Integer value2) {
			addCriterion("lnn.id_author between", value1, value2, "idAuthor");
			return (Criteria) this;
		}

		public Criteria andIdAuthorNotBetween(Integer value1, Integer value2) {
			addCriterion("lnn.id_author not between", value1, value2, "idAuthor");
			return (Criteria) this;
		}

		public Criteria andSexIsNull() {
			addCriterion("lnn.sex is null");
			return (Criteria) this;
		}

		public Criteria andSexIsNotNull() {
			addCriterion("lnn.sex is not null");
			return (Criteria) this;
		}

		public Criteria andSexEqualTo(String value) {
			addCriterion("lnn.sex =", value, "sex");
			return (Criteria) this;
		}

		public Criteria andSexNotEqualTo(String value) {
			addCriterion("lnn.sex <>", value, "sex");
			return (Criteria) this;
		}

		public Criteria andSexGreaterThan(String value) {
			addCriterion("lnn.sex >", value, "sex");
			return (Criteria) this;
		}

		public Criteria andSexGreaterThanOrEqualTo(String value) {
			addCriterion("lnn.sex >=", value, "sex");
			return (Criteria) this;
		}

		public Criteria andSexLessThan(String value) {
			addCriterion("lnn.sex <", value, "sex");
			return (Criteria) this;
		}

		public Criteria andSexLessThanOrEqualTo(String value) {
			addCriterion("lnn.sex <=", value, "sex");
			return (Criteria) this;
		}

		public Criteria andSexLike(String value) {
			addCriterion("lnn.sex like", value, "sex");
			return (Criteria) this;
		}

		public Criteria andSexNotLike(String value) {
			addCriterion("lnn.sex not like", value, "sex");
			return (Criteria) this;
		}

		public Criteria andSexIn(List<String> values) {
			addCriterion("lnn.sex in", values, "sex");
			return (Criteria) this;
		}

		public Criteria andSexNotIn(List<String> values) {
			addCriterion("lnn.sex not in", values, "sex");
			return (Criteria) this;
		}

		public Criteria andSexBetween(String value1, String value2) {
			addCriterion("lnn.sex between", value1, value2, "sex");
			return (Criteria) this;
		}

		public Criteria andSexNotBetween(String value1, String value2) {
			addCriterion("lnn.sex not between", value1, value2, "sex");
			return (Criteria) this;
		}

		public Criteria andOriginaltextIsNull() {
			addCriterion("lnn.originalText is null");
			return (Criteria) this;
		}

		public Criteria andOriginaltextIsNotNull() {
			addCriterion("lnn.originalText is not null");
			return (Criteria) this;
		}

		public Criteria andOriginaltextEqualTo(String value) {
			addCriterion("lnn.originalText =", value, "originaltext");
			return (Criteria) this;
		}

		public Criteria andOriginaltextNotEqualTo(String value) {
			addCriterion("lnn.originalText <>", value, "originaltext");
			return (Criteria) this;
		}

		public Criteria andOriginaltextGreaterThan(String value) {
			addCriterion("lnn.originalText >", value, "originaltext");
			return (Criteria) this;
		}

		public Criteria andOriginaltextGreaterThanOrEqualTo(String value) {
			addCriterion("lnn.originalText >=", value, "originaltext");
			return (Criteria) this;
		}

		public Criteria andOriginaltextLessThan(String value) {
			addCriterion("lnn.originalText <", value, "originaltext");
			return (Criteria) this;
		}

		public Criteria andOriginaltextLessThanOrEqualTo(String value) {
			addCriterion("lnn.originalText <=", value, "originaltext");
			return (Criteria) this;
		}

		public Criteria andOriginaltextLike(String value) {
			addCriterion("lnn.originalText like", value, "originaltext");
			return (Criteria) this;
		}

		public Criteria andOriginaltextNotLike(String value) {
			addCriterion("lnn.originalText not like", value, "originaltext");
			return (Criteria) this;
		}

		public Criteria andOriginaltextIn(List<String> values) {
			addCriterion("lnn.originalText in", values, "originaltext");
			return (Criteria) this;
		}

		public Criteria andOriginaltextNotIn(List<String> values) {
			addCriterion("lnn.originalText not in", values, "originaltext");
			return (Criteria) this;
		}

		public Criteria andOriginaltextBetween(String value1, String value2) {
			addCriterion("lnn.originalText between", value1, value2, "originaltext");
			return (Criteria) this;
		}

		public Criteria andOriginaltextNotBetween(String value1, String value2) {
			addCriterion("lnn.originalText not between", value1, value2, "originaltext");
			return (Criteria) this;
		}

		public Criteria andPositionIsNull() {
			addCriterion("lnn.position is null");
			return (Criteria) this;
		}

		public Criteria andPositionIsNotNull() {
			addCriterion("lnn.position is not null");
			return (Criteria) this;
		}

		public Criteria andPositionEqualTo(String value) {
			addCriterion("lnn.position =", value, "position");
			return (Criteria) this;
		}

		public Criteria andPositionNotEqualTo(String value) {
			addCriterion("lnn.position <>", value, "position");
			return (Criteria) this;
		}

		public Criteria andPositionGreaterThan(String value) {
			addCriterion("lnn.position >", value, "position");
			return (Criteria) this;
		}

		public Criteria andPositionGreaterThanOrEqualTo(String value) {
			addCriterion("lnn.position >=", value, "position");
			return (Criteria) this;
		}

		public Criteria andPositionLessThan(String value) {
			addCriterion("lnn.position <", value, "position");
			return (Criteria) this;
		}

		public Criteria andPositionLessThanOrEqualTo(String value) {
			addCriterion("lnn.position <=", value, "position");
			return (Criteria) this;
		}

		public Criteria andPositionLike(String value) {
			addCriterion("lnn.position like", value, "position");
			return (Criteria) this;
		}

		public Criteria andPositionNotLike(String value) {
			addCriterion("lnn.position not like", value, "position");
			return (Criteria) this;
		}

		public Criteria andPositionIn(List<String> values) {
			addCriterion("lnn.position in", values, "position");
			return (Criteria) this;
		}

		public Criteria andPositionNotIn(List<String> values) {
			addCriterion("lnn.position not in", values, "position");
			return (Criteria) this;
		}

		public Criteria andPositionBetween(String value1, String value2) {
			addCriterion("lnn.position between", value1, value2, "position");
			return (Criteria) this;
		}

		public Criteria andPositionNotBetween(String value1, String value2) {
			addCriterion("lnn.position not between", value1, value2, "position");
			return (Criteria) this;
		}

		public Criteria andApprovedIsNull() {
			addCriterion("lnn.approved is null");
			return (Criteria) this;
		}

		public Criteria andApprovedIsNotNull() {
			addCriterion("lnn.approved is not null");
			return (Criteria) this;
		}

		public Criteria andApprovedEqualTo(Integer value) {
			addCriterion("lnn.approved =", value, "approved");
			return (Criteria) this;
		}

		public Criteria andApprovedNotEqualTo(Integer value) {
			addCriterion("lnn.approved <>", value, "approved");
			return (Criteria) this;
		}

		public Criteria andApprovedGreaterThan(Integer value) {
			addCriterion("lnn.approved >", value, "approved");
			return (Criteria) this;
		}

		public Criteria andApprovedGreaterThanOrEqualTo(Integer value) {
			addCriterion("lnn.approved >=", value, "approved");
			return (Criteria) this;
		}

		public Criteria andApprovedLessThan(Integer value) {
			addCriterion("lnn.approved <", value, "approved");
			return (Criteria) this;
		}

		public Criteria andApprovedLessThanOrEqualTo(Integer value) {
			addCriterion("lnn.approved <=", value, "approved");
			return (Criteria) this;
		}

		public Criteria andApprovedIn(List<Integer> values) {
			addCriterion("lnn.approved in", values, "approved");
			return (Criteria) this;
		}

		public Criteria andApprovedNotIn(List<Integer> values) {
			addCriterion("lnn.approved not in", values, "approved");
			return (Criteria) this;
		}

		public Criteria andApprovedBetween(Integer value1, Integer value2) {
			addCriterion("lnn.approved between", value1, value2, "approved");
			return (Criteria) this;
		}

		public Criteria andApprovedNotBetween(Integer value1, Integer value2) {
			addCriterion("lnn.approved not between", value1, value2, "approved");
			return (Criteria) this;
		}

		public Criteria andIdClickCounterIsNull() {
			addCriterion("lnn.id_click_counter is null");
			return (Criteria) this;
		}

		public Criteria andIdClickCounterIsNotNull() {
			addCriterion("lnn.id_click_counter is not null");
			return (Criteria) this;
		}

		public Criteria andIdClickCounterEqualTo(Integer value) {
			addCriterion("lnn.id_click_counter =", value, "idClickCounter");
			return (Criteria) this;
		}

		public Criteria andIdClickCounterNotEqualTo(Integer value) {
			addCriterion("lnn.id_click_counter <>", value, "idClickCounter");
			return (Criteria) this;
		}

		public Criteria andIdClickCounterGreaterThan(Integer value) {
			addCriterion("lnn.id_click_counter >", value, "idClickCounter");
			return (Criteria) this;
		}

		public Criteria andIdClickCounterGreaterThanOrEqualTo(Integer value) {
			addCriterion("lnn.id_click_counter >=", value, "idClickCounter");
			return (Criteria) this;
		}

		public Criteria andIdClickCounterLessThan(Integer value) {
			addCriterion("lnn.id_click_counter <", value, "idClickCounter");
			return (Criteria) this;
		}

		public Criteria andIdClickCounterLessThanOrEqualTo(Integer value) {
			addCriterion("lnn.id_click_counter <=", value, "idClickCounter");
			return (Criteria) this;
		}

		public Criteria andIdClickCounterIn(List<Integer> values) {
			addCriterion("lnn.id_click_counter in", values, "idClickCounter");
			return (Criteria) this;
		}

		public Criteria andIdClickCounterNotIn(List<Integer> values) {
			addCriterion("lnn.id_click_counter not in", values, "idClickCounter");
			return (Criteria) this;
		}

		public Criteria andIdClickCounterBetween(Integer value1, Integer value2) {
			addCriterion("lnn.id_click_counter between", value1, value2, "idClickCounter");
			return (Criteria) this;
		}

		public Criteria andIdClickCounterNotBetween(Integer value1, Integer value2) {
			addCriterion("lnn.id_click_counter not between", value1, value2, "idClickCounter");
			return (Criteria) this;
		}

		public Criteria andDeletedIsNull() {
			addCriterion("lnn.deleted is null");
			return (Criteria) this;
		}

		public Criteria andDeletedIsNotNull() {
			addCriterion("lnn.deleted is not null");
			return (Criteria) this;
		}

		public Criteria andDeletedEqualTo(Integer value) {
			addCriterion("lnn.deleted =", value, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedNotEqualTo(Integer value) {
			addCriterion("lnn.deleted <>", value, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedGreaterThan(Integer value) {
			addCriterion("lnn.deleted >", value, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedGreaterThanOrEqualTo(Integer value) {
			addCriterion("lnn.deleted >=", value, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedLessThan(Integer value) {
			addCriterion("lnn.deleted <", value, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedLessThanOrEqualTo(Integer value) {
			addCriterion("lnn.deleted <=", value, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedIn(List<Integer> values) {
			addCriterion("lnn.deleted in", values, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedNotIn(List<Integer> values) {
			addCriterion("lnn.deleted not in", values, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedBetween(Integer value1, Integer value2) {
			addCriterion("lnn.deleted between", value1, value2, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedNotBetween(Integer value1, Integer value2) {
			addCriterion("lnn.deleted not between", value1, value2, "deleted");
			return (Criteria) this;
		}

		public Criteria andUrlLinkIsNull() {
			addCriterion("lnn.url_link is null");
			return (Criteria) this;
		}

		public Criteria andUrlLinkIsNotNull() {
			addCriterion("lnn.url_link is not null");
			return (Criteria) this;
		}

		public Criteria andUrlLinkEqualTo(String value) {
			addCriterion("lnn.url_link =", value, "urlLink");
			return (Criteria) this;
		}

		public Criteria andUrlLinkNotEqualTo(String value) {
			addCriterion("lnn.url_link <>", value, "urlLink");
			return (Criteria) this;
		}

		public Criteria andUrlLinkGreaterThan(String value) {
			addCriterion("lnn.url_link >", value, "urlLink");
			return (Criteria) this;
		}

		public Criteria andUrlLinkGreaterThanOrEqualTo(String value) {
			addCriterion("lnn.url_link >=", value, "urlLink");
			return (Criteria) this;
		}

		public Criteria andUrlLinkLessThan(String value) {
			addCriterion("lnn.url_link <", value, "urlLink");
			return (Criteria) this;
		}

		public Criteria andUrlLinkLessThanOrEqualTo(String value) {
			addCriterion("lnn.url_link <=", value, "urlLink");
			return (Criteria) this;
		}

		public Criteria andUrlLinkLike(String value) {
			addCriterion("lnn.url_link like", value, "urlLink");
			return (Criteria) this;
		}

		public Criteria andUrlLinkNotLike(String value) {
			addCriterion("lnn.url_link not like", value, "urlLink");
			return (Criteria) this;
		}

		public Criteria andUrlLinkIn(List<String> values) {
			addCriterion("lnn.url_link in", values, "urlLink");
			return (Criteria) this;
		}

		public Criteria andUrlLinkNotIn(List<String> values) {
			addCriterion("lnn.url_link not in", values, "urlLink");
			return (Criteria) this;
		}

		public Criteria andUrlLinkBetween(String value1, String value2) {
			addCriterion("lnn.url_link between", value1, value2, "urlLink");
			return (Criteria) this;
		}

		public Criteria andUrlLinkNotBetween(String value1, String value2) {
			addCriterion("lnn.url_link not between", value1, value2, "urlLink");
			return (Criteria) this;
		}

		public Criteria andUrlTargetIsNull() {
			addCriterion("lnn.url_target is null");
			return (Criteria) this;
		}

		public Criteria andUrlTargetIsNotNull() {
			addCriterion("lnn.url_target is not null");
			return (Criteria) this;
		}

		public Criteria andUrlTargetEqualTo(String value) {
			addCriterion("lnn.url_target =", value, "urlTarget");
			return (Criteria) this;
		}

		public Criteria andUrlTargetNotEqualTo(String value) {
			addCriterion("lnn.url_target <>", value, "urlTarget");
			return (Criteria) this;
		}

		public Criteria andUrlTargetGreaterThan(String value) {
			addCriterion("lnn.url_target >", value, "urlTarget");
			return (Criteria) this;
		}

		public Criteria andUrlTargetGreaterThanOrEqualTo(String value) {
			addCriterion("lnn.url_target >=", value, "urlTarget");
			return (Criteria) this;
		}

		public Criteria andUrlTargetLessThan(String value) {
			addCriterion("lnn.url_target <", value, "urlTarget");
			return (Criteria) this;
		}

		public Criteria andUrlTargetLessThanOrEqualTo(String value) {
			addCriterion("lnn.url_target <=", value, "urlTarget");
			return (Criteria) this;
		}

		public Criteria andUrlTargetLike(String value) {
			addCriterion("lnn.url_target like", value, "urlTarget");
			return (Criteria) this;
		}

		public Criteria andUrlTargetNotLike(String value) {
			addCriterion("lnn.url_target not like", value, "urlTarget");
			return (Criteria) this;
		}

		public Criteria andUrlTargetIn(List<String> values) {
			addCriterion("lnn.url_target in", values, "urlTarget");
			return (Criteria) this;
		}

		public Criteria andUrlTargetNotIn(List<String> values) {
			addCriterion("lnn.url_target not in", values, "urlTarget");
			return (Criteria) this;
		}

		public Criteria andUrlTargetBetween(String value1, String value2) {
			addCriterion("lnn.url_target between", value1, value2, "urlTarget");
			return (Criteria) this;
		}

		public Criteria andUrlTargetNotBetween(String value1, String value2) {
			addCriterion("lnn.url_target not between", value1, value2, "urlTarget");
			return (Criteria) this;
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table LOVE_NICKNAMES
     *
     * @mbggenerated do_not_delete_during_merge Thu May 31 19:49:12 ART 2012
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}