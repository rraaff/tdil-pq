package com.tdil.tuafesta.model;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class AdvertisementExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table ADVERTISEMENT
	 * @mbggenerated  Mon Oct 15 18:05:42 ART 2012
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table ADVERTISEMENT
	 * @mbggenerated  Mon Oct 15 18:05:42 ART 2012
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table ADVERTISEMENT
	 * @mbggenerated  Mon Oct 15 18:05:42 ART 2012
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ADVERTISEMENT
	 * @mbggenerated  Mon Oct 15 18:05:42 ART 2012
	 */
	public AdvertisementExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ADVERTISEMENT
	 * @mbggenerated  Mon Oct 15 18:05:42 ART 2012
	 */
	protected AdvertisementExample(AdvertisementExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
		this.distinct = example.distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ADVERTISEMENT
	 * @mbggenerated  Mon Oct 15 18:05:42 ART 2012
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ADVERTISEMENT
	 * @mbggenerated  Mon Oct 15 18:05:42 ART 2012
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ADVERTISEMENT
	 * @mbggenerated  Mon Oct 15 18:05:42 ART 2012
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ADVERTISEMENT
	 * @mbggenerated  Mon Oct 15 18:05:42 ART 2012
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ADVERTISEMENT
	 * @mbggenerated  Mon Oct 15 18:05:42 ART 2012
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ADVERTISEMENT
	 * @mbggenerated  Mon Oct 15 18:05:42 ART 2012
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ADVERTISEMENT
	 * @mbggenerated  Mon Oct 15 18:05:42 ART 2012
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ADVERTISEMENT
	 * @mbggenerated  Mon Oct 15 18:05:42 ART 2012
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ADVERTISEMENT
	 * @mbggenerated  Mon Oct 15 18:05:42 ART 2012
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ADVERTISEMENT
	 * @mbggenerated  Mon Oct 15 18:05:42 ART 2012
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table ADVERTISEMENT
	 * @mbggenerated  Mon Oct 15 18:05:42 ART 2012
	 */
	protected abstract static class GeneratedCriteria {
		protected List<String> criteriaWithoutValue;
		protected List<Map<String, Object>> criteriaWithSingleValue;
		protected List<Map<String, Object>> criteriaWithListValue;
		protected List<Map<String, Object>> criteriaWithBetweenValue;

		protected GeneratedCriteria() {
			super();
			criteriaWithoutValue = new ArrayList<String>();
			criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
			criteriaWithListValue = new ArrayList<Map<String, Object>>();
			criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0 || criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0 || criteriaWithBetweenValue.size() > 0;
		}

		public List<String> getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List<Map<String, Object>> getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List<Map<String, Object>> getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List<Map<String, Object>> getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition, List<? extends Object> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property + " cannot be null or empty");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			List<Object> list = new ArrayList<Object>();
			list.add(value1);
			list.add(value2);
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andIdIsNull() {
			addCriterion("ad.id is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("ad.id is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("ad.id =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("ad.id <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("ad.id >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("ad.id >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("ad.id <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("ad.id <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Integer> values) {
			addCriterion("ad.id in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Integer> values) {
			addCriterion("ad.id not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("ad.id between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("ad.id not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdProfesionalIsNull() {
			addCriterion("ad.id_profesional is null");
			return (Criteria) this;
		}

		public Criteria andIdProfesionalIsNotNull() {
			addCriterion("ad.id_profesional is not null");
			return (Criteria) this;
		}

		public Criteria andIdProfesionalEqualTo(Integer value) {
			addCriterion("ad.id_profesional =", value, "idProfesional");
			return (Criteria) this;
		}

		public Criteria andIdProfesionalNotEqualTo(Integer value) {
			addCriterion("ad.id_profesional <>", value, "idProfesional");
			return (Criteria) this;
		}

		public Criteria andIdProfesionalGreaterThan(Integer value) {
			addCriterion("ad.id_profesional >", value, "idProfesional");
			return (Criteria) this;
		}

		public Criteria andIdProfesionalGreaterThanOrEqualTo(Integer value) {
			addCriterion("ad.id_profesional >=", value, "idProfesional");
			return (Criteria) this;
		}

		public Criteria andIdProfesionalLessThan(Integer value) {
			addCriterion("ad.id_profesional <", value, "idProfesional");
			return (Criteria) this;
		}

		public Criteria andIdProfesionalLessThanOrEqualTo(Integer value) {
			addCriterion("ad.id_profesional <=", value, "idProfesional");
			return (Criteria) this;
		}

		public Criteria andIdProfesionalIn(List<Integer> values) {
			addCriterion("ad.id_profesional in", values, "idProfesional");
			return (Criteria) this;
		}

		public Criteria andIdProfesionalNotIn(List<Integer> values) {
			addCriterion("ad.id_profesional not in", values, "idProfesional");
			return (Criteria) this;
		}

		public Criteria andIdProfesionalBetween(Integer value1, Integer value2) {
			addCriterion("ad.id_profesional between", value1, value2, "idProfesional");
			return (Criteria) this;
		}

		public Criteria andIdProfesionalNotBetween(Integer value1, Integer value2) {
			addCriterion("ad.id_profesional not between", value1, value2, "idProfesional");
			return (Criteria) this;
		}

		public Criteria andIdSellIsNull() {
			addCriterion("ad.id_sell is null");
			return (Criteria) this;
		}

		public Criteria andIdSellIsNotNull() {
			addCriterion("ad.id_sell is not null");
			return (Criteria) this;
		}

		public Criteria andIdSellEqualTo(Integer value) {
			addCriterion("ad.id_sell =", value, "idSell");
			return (Criteria) this;
		}

		public Criteria andIdSellNotEqualTo(Integer value) {
			addCriterion("ad.id_sell <>", value, "idSell");
			return (Criteria) this;
		}

		public Criteria andIdSellGreaterThan(Integer value) {
			addCriterion("ad.id_sell >", value, "idSell");
			return (Criteria) this;
		}

		public Criteria andIdSellGreaterThanOrEqualTo(Integer value) {
			addCriterion("ad.id_sell >=", value, "idSell");
			return (Criteria) this;
		}

		public Criteria andIdSellLessThan(Integer value) {
			addCriterion("ad.id_sell <", value, "idSell");
			return (Criteria) this;
		}

		public Criteria andIdSellLessThanOrEqualTo(Integer value) {
			addCriterion("ad.id_sell <=", value, "idSell");
			return (Criteria) this;
		}

		public Criteria andIdSellIn(List<Integer> values) {
			addCriterion("ad.id_sell in", values, "idSell");
			return (Criteria) this;
		}

		public Criteria andIdSellNotIn(List<Integer> values) {
			addCriterion("ad.id_sell not in", values, "idSell");
			return (Criteria) this;
		}

		public Criteria andIdSellBetween(Integer value1, Integer value2) {
			addCriterion("ad.id_sell between", value1, value2, "idSell");
			return (Criteria) this;
		}

		public Criteria andIdSellNotBetween(Integer value1, Integer value2) {
			addCriterion("ad.id_sell not between", value1, value2, "idSell");
			return (Criteria) this;
		}

		public Criteria andTypeIsNull() {
			addCriterion("ad.type is null");
			return (Criteria) this;
		}

		public Criteria andTypeIsNotNull() {
			addCriterion("ad.type is not null");
			return (Criteria) this;
		}

		public Criteria andTypeEqualTo(Integer value) {
			addCriterion("ad.type =", value, "type");
			return (Criteria) this;
		}

		public Criteria andTypeNotEqualTo(Integer value) {
			addCriterion("ad.type <>", value, "type");
			return (Criteria) this;
		}

		public Criteria andTypeGreaterThan(Integer value) {
			addCriterion("ad.type >", value, "type");
			return (Criteria) this;
		}

		public Criteria andTypeGreaterThanOrEqualTo(Integer value) {
			addCriterion("ad.type >=", value, "type");
			return (Criteria) this;
		}

		public Criteria andTypeLessThan(Integer value) {
			addCriterion("ad.type <", value, "type");
			return (Criteria) this;
		}

		public Criteria andTypeLessThanOrEqualTo(Integer value) {
			addCriterion("ad.type <=", value, "type");
			return (Criteria) this;
		}

		public Criteria andTypeIn(List<Integer> values) {
			addCriterion("ad.type in", values, "type");
			return (Criteria) this;
		}

		public Criteria andTypeNotIn(List<Integer> values) {
			addCriterion("ad.type not in", values, "type");
			return (Criteria) this;
		}

		public Criteria andTypeBetween(Integer value1, Integer value2) {
			addCriterion("ad.type between", value1, value2, "type");
			return (Criteria) this;
		}

		public Criteria andTypeNotBetween(Integer value1, Integer value2) {
			addCriterion("ad.type not between", value1, value2, "type");
			return (Criteria) this;
		}

		public Criteria andFromdateIsNull() {
			addCriterion("ad.fromDate is null");
			return (Criteria) this;
		}

		public Criteria andFromdateIsNotNull() {
			addCriterion("ad.fromDate is not null");
			return (Criteria) this;
		}

		public Criteria andFromdateEqualTo(Date value) {
			addCriterion("ad.fromDate =", value, "fromdate");
			return (Criteria) this;
		}

		public Criteria andFromdateNotEqualTo(Date value) {
			addCriterion("ad.fromDate <>", value, "fromdate");
			return (Criteria) this;
		}

		public Criteria andFromdateGreaterThan(Date value) {
			addCriterion("ad.fromDate >", value, "fromdate");
			return (Criteria) this;
		}

		public Criteria andFromdateGreaterThanOrEqualTo(Date value) {
			addCriterion("ad.fromDate >=", value, "fromdate");
			return (Criteria) this;
		}

		public Criteria andFromdateLessThan(Date value) {
			addCriterion("ad.fromDate <", value, "fromdate");
			return (Criteria) this;
		}

		public Criteria andFromdateLessThanOrEqualTo(Date value) {
			addCriterion("ad.fromDate <=", value, "fromdate");
			return (Criteria) this;
		}

		public Criteria andFromdateIn(List<Date> values) {
			addCriterion("ad.fromDate in", values, "fromdate");
			return (Criteria) this;
		}

		public Criteria andFromdateNotIn(List<Date> values) {
			addCriterion("ad.fromDate not in", values, "fromdate");
			return (Criteria) this;
		}

		public Criteria andFromdateBetween(Date value1, Date value2) {
			addCriterion("ad.fromDate between", value1, value2, "fromdate");
			return (Criteria) this;
		}

		public Criteria andFromdateNotBetween(Date value1, Date value2) {
			addCriterion("ad.fromDate not between", value1, value2, "fromdate");
			return (Criteria) this;
		}

		public Criteria andTodateIsNull() {
			addCriterion("ad.toDate is null");
			return (Criteria) this;
		}

		public Criteria andTodateIsNotNull() {
			addCriterion("ad.toDate is not null");
			return (Criteria) this;
		}

		public Criteria andTodateEqualTo(Date value) {
			addCriterion("ad.toDate =", value, "todate");
			return (Criteria) this;
		}

		public Criteria andTodateNotEqualTo(Date value) {
			addCriterion("ad.toDate <>", value, "todate");
			return (Criteria) this;
		}

		public Criteria andTodateGreaterThan(Date value) {
			addCriterion("ad.toDate >", value, "todate");
			return (Criteria) this;
		}

		public Criteria andTodateGreaterThanOrEqualTo(Date value) {
			addCriterion("ad.toDate >=", value, "todate");
			return (Criteria) this;
		}

		public Criteria andTodateLessThan(Date value) {
			addCriterion("ad.toDate <", value, "todate");
			return (Criteria) this;
		}

		public Criteria andTodateLessThanOrEqualTo(Date value) {
			addCriterion("ad.toDate <=", value, "todate");
			return (Criteria) this;
		}

		public Criteria andTodateIn(List<Date> values) {
			addCriterion("ad.toDate in", values, "todate");
			return (Criteria) this;
		}

		public Criteria andTodateNotIn(List<Date> values) {
			addCriterion("ad.toDate not in", values, "todate");
			return (Criteria) this;
		}

		public Criteria andTodateBetween(Date value1, Date value2) {
			addCriterion("ad.toDate between", value1, value2, "todate");
			return (Criteria) this;
		}

		public Criteria andTodateNotBetween(Date value1, Date value2) {
			addCriterion("ad.toDate not between", value1, value2, "todate");
			return (Criteria) this;
		}

		public Criteria andPaidupIsNull() {
			addCriterion("ad.paidUp is null");
			return (Criteria) this;
		}

		public Criteria andPaidupIsNotNull() {
			addCriterion("ad.paidUp is not null");
			return (Criteria) this;
		}

		public Criteria andPaidupEqualTo(Integer value) {
			addCriterion("ad.paidUp =", value, "paidup");
			return (Criteria) this;
		}

		public Criteria andPaidupNotEqualTo(Integer value) {
			addCriterion("ad.paidUp <>", value, "paidup");
			return (Criteria) this;
		}

		public Criteria andPaidupGreaterThan(Integer value) {
			addCriterion("ad.paidUp >", value, "paidup");
			return (Criteria) this;
		}

		public Criteria andPaidupGreaterThanOrEqualTo(Integer value) {
			addCriterion("ad.paidUp >=", value, "paidup");
			return (Criteria) this;
		}

		public Criteria andPaidupLessThan(Integer value) {
			addCriterion("ad.paidUp <", value, "paidup");
			return (Criteria) this;
		}

		public Criteria andPaidupLessThanOrEqualTo(Integer value) {
			addCriterion("ad.paidUp <=", value, "paidup");
			return (Criteria) this;
		}

		public Criteria andPaidupIn(List<Integer> values) {
			addCriterion("ad.paidUp in", values, "paidup");
			return (Criteria) this;
		}

		public Criteria andPaidupNotIn(List<Integer> values) {
			addCriterion("ad.paidUp not in", values, "paidup");
			return (Criteria) this;
		}

		public Criteria andPaidupBetween(Integer value1, Integer value2) {
			addCriterion("ad.paidUp between", value1, value2, "paidup");
			return (Criteria) this;
		}

		public Criteria andPaidupNotBetween(Integer value1, Integer value2) {
			addCriterion("ad.paidUp not between", value1, value2, "paidup");
			return (Criteria) this;
		}

		public Criteria andPriceIsNull() {
			addCriterion("ad.price is null");
			return (Criteria) this;
		}

		public Criteria andPriceIsNotNull() {
			addCriterion("ad.price is not null");
			return (Criteria) this;
		}

		public Criteria andPriceEqualTo(BigDecimal value) {
			addCriterion("ad.price =", value, "price");
			return (Criteria) this;
		}

		public Criteria andPriceNotEqualTo(BigDecimal value) {
			addCriterion("ad.price <>", value, "price");
			return (Criteria) this;
		}

		public Criteria andPriceGreaterThan(BigDecimal value) {
			addCriterion("ad.price >", value, "price");
			return (Criteria) this;
		}

		public Criteria andPriceGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("ad.price >=", value, "price");
			return (Criteria) this;
		}

		public Criteria andPriceLessThan(BigDecimal value) {
			addCriterion("ad.price <", value, "price");
			return (Criteria) this;
		}

		public Criteria andPriceLessThanOrEqualTo(BigDecimal value) {
			addCriterion("ad.price <=", value, "price");
			return (Criteria) this;
		}

		public Criteria andPriceIn(List<BigDecimal> values) {
			addCriterion("ad.price in", values, "price");
			return (Criteria) this;
		}

		public Criteria andPriceNotIn(List<BigDecimal> values) {
			addCriterion("ad.price not in", values, "price");
			return (Criteria) this;
		}

		public Criteria andPriceBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("ad.price between", value1, value2, "price");
			return (Criteria) this;
		}

		public Criteria andPriceNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("ad.price not between", value1, value2, "price");
			return (Criteria) this;
		}

		public Criteria andIdBlobDataIsNull() {
			addCriterion("ad.id_blob_data is null");
			return (Criteria) this;
		}

		public Criteria andIdBlobDataIsNotNull() {
			addCriterion("ad.id_blob_data is not null");
			return (Criteria) this;
		}

		public Criteria andIdBlobDataEqualTo(Integer value) {
			addCriterion("ad.id_blob_data =", value, "idBlobData");
			return (Criteria) this;
		}

		public Criteria andIdBlobDataNotEqualTo(Integer value) {
			addCriterion("ad.id_blob_data <>", value, "idBlobData");
			return (Criteria) this;
		}

		public Criteria andIdBlobDataGreaterThan(Integer value) {
			addCriterion("ad.id_blob_data >", value, "idBlobData");
			return (Criteria) this;
		}

		public Criteria andIdBlobDataGreaterThanOrEqualTo(Integer value) {
			addCriterion("ad.id_blob_data >=", value, "idBlobData");
			return (Criteria) this;
		}

		public Criteria andIdBlobDataLessThan(Integer value) {
			addCriterion("ad.id_blob_data <", value, "idBlobData");
			return (Criteria) this;
		}

		public Criteria andIdBlobDataLessThanOrEqualTo(Integer value) {
			addCriterion("ad.id_blob_data <=", value, "idBlobData");
			return (Criteria) this;
		}

		public Criteria andIdBlobDataIn(List<Integer> values) {
			addCriterion("ad.id_blob_data in", values, "idBlobData");
			return (Criteria) this;
		}

		public Criteria andIdBlobDataNotIn(List<Integer> values) {
			addCriterion("ad.id_blob_data not in", values, "idBlobData");
			return (Criteria) this;
		}

		public Criteria andIdBlobDataBetween(Integer value1, Integer value2) {
			addCriterion("ad.id_blob_data between", value1, value2, "idBlobData");
			return (Criteria) this;
		}

		public Criteria andIdBlobDataNotBetween(Integer value1, Integer value2) {
			addCriterion("ad.id_blob_data not between", value1, value2, "idBlobData");
			return (Criteria) this;
		}

		public Criteria andExtBlobDataIsNull() {
			addCriterion("ad.ext_blob_data is null");
			return (Criteria) this;
		}

		public Criteria andExtBlobDataIsNotNull() {
			addCriterion("ad.ext_blob_data is not null");
			return (Criteria) this;
		}

		public Criteria andExtBlobDataEqualTo(String value) {
			addCriterion("ad.ext_blob_data =", value, "extBlobData");
			return (Criteria) this;
		}

		public Criteria andExtBlobDataNotEqualTo(String value) {
			addCriterion("ad.ext_blob_data <>", value, "extBlobData");
			return (Criteria) this;
		}

		public Criteria andExtBlobDataGreaterThan(String value) {
			addCriterion("ad.ext_blob_data >", value, "extBlobData");
			return (Criteria) this;
		}

		public Criteria andExtBlobDataGreaterThanOrEqualTo(String value) {
			addCriterion("ad.ext_blob_data >=", value, "extBlobData");
			return (Criteria) this;
		}

		public Criteria andExtBlobDataLessThan(String value) {
			addCriterion("ad.ext_blob_data <", value, "extBlobData");
			return (Criteria) this;
		}

		public Criteria andExtBlobDataLessThanOrEqualTo(String value) {
			addCriterion("ad.ext_blob_data <=", value, "extBlobData");
			return (Criteria) this;
		}

		public Criteria andExtBlobDataLike(String value) {
			addCriterion("ad.ext_blob_data like", value, "extBlobData");
			return (Criteria) this;
		}

		public Criteria andExtBlobDataNotLike(String value) {
			addCriterion("ad.ext_blob_data not like", value, "extBlobData");
			return (Criteria) this;
		}

		public Criteria andExtBlobDataIn(List<String> values) {
			addCriterion("ad.ext_blob_data in", values, "extBlobData");
			return (Criteria) this;
		}

		public Criteria andExtBlobDataNotIn(List<String> values) {
			addCriterion("ad.ext_blob_data not in", values, "extBlobData");
			return (Criteria) this;
		}

		public Criteria andExtBlobDataBetween(String value1, String value2) {
			addCriterion("ad.ext_blob_data between", value1, value2, "extBlobData");
			return (Criteria) this;
		}

		public Criteria andExtBlobDataNotBetween(String value1, String value2) {
			addCriterion("ad.ext_blob_data not between", value1, value2, "extBlobData");
			return (Criteria) this;
		}

		public Criteria andDeletedIsNull() {
			addCriterion("ad.deleted is null");
			return (Criteria) this;
		}

		public Criteria andDeletedIsNotNull() {
			addCriterion("ad.deleted is not null");
			return (Criteria) this;
		}

		public Criteria andDeletedEqualTo(Integer value) {
			addCriterion("ad.deleted =", value, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedNotEqualTo(Integer value) {
			addCriterion("ad.deleted <>", value, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedGreaterThan(Integer value) {
			addCriterion("ad.deleted >", value, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedGreaterThanOrEqualTo(Integer value) {
			addCriterion("ad.deleted >=", value, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedLessThan(Integer value) {
			addCriterion("ad.deleted <", value, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedLessThanOrEqualTo(Integer value) {
			addCriterion("ad.deleted <=", value, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedIn(List<Integer> values) {
			addCriterion("ad.deleted in", values, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedNotIn(List<Integer> values) {
			addCriterion("ad.deleted not in", values, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedBetween(Integer value1, Integer value2) {
			addCriterion("ad.deleted between", value1, value2, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedNotBetween(Integer value1, Integer value2) {
			addCriterion("ad.deleted not between", value1, value2, "deleted");
			return (Criteria) this;
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ADVERTISEMENT
     *
     * @mbggenerated do_not_delete_during_merge Sat Sep 29 00:10:00 ART 2012
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}