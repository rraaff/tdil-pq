package com.tdil.tuafesta.dao.impl;

import com.ibatis.sqlmap.client.SqlMapClient;
import com.tdil.tuafesta.dao.CategoryDAO;
import com.tdil.tuafesta.model.Category;
import com.tdil.tuafesta.model.CategoryExample;
import java.sql.SQLException;
import java.util.List;

public class CategoryDAOImpl implements CategoryDAO {

	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table CATEGORY
	 * @mbggenerated  Tue Sep 25 23:11:19 ART 2012
	 */
	private SqlMapClient sqlMapClient;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table CATEGORY
	 * @mbggenerated  Tue Sep 25 23:11:19 ART 2012
	 */
	public CategoryDAOImpl(SqlMapClient sqlMapClient) {
		super();
		this.sqlMapClient = sqlMapClient;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table CATEGORY
	 * @mbggenerated  Tue Sep 25 23:11:19 ART 2012
	 */
	public int countCategoryByExample(CategoryExample example) throws SQLException {
		Integer count = (Integer) sqlMapClient.queryForObject("CATEGORY.countByExample", example);
		return count;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table CATEGORY
	 * @mbggenerated  Tue Sep 25 23:11:19 ART 2012
	 */
	public int deleteCategoryByExample(CategoryExample example) throws SQLException {
		int rows = sqlMapClient.delete("CATEGORY.deleteByExample", example);
		return rows;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table CATEGORY
	 * @mbggenerated  Tue Sep 25 23:11:19 ART 2012
	 */
	public int deleteCategoryByPrimaryKey(Integer id) throws SQLException {
		Category _key = new Category();
		_key.setId(id);
		int rows = sqlMapClient.delete("CATEGORY.deleteByPrimaryKey", _key);
		return rows;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table CATEGORY
	 * @mbggenerated  Tue Sep 25 23:11:19 ART 2012
	 */
	public Integer insertCategory(Category record) throws SQLException {
		Object newKey = sqlMapClient.insert("CATEGORY.insert", record);
		return (Integer) newKey;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table CATEGORY
	 * @mbggenerated  Tue Sep 25 23:11:19 ART 2012
	 */
	public Integer insertCategorySelective(Category record) throws SQLException {
		Object newKey = sqlMapClient.insert("CATEGORY.insertSelective", record);
		return (Integer) newKey;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table CATEGORY
	 * @mbggenerated  Tue Sep 25 23:11:19 ART 2012
	 */
	@SuppressWarnings("unchecked")
	public List<Category> selectCategoryByExample(CategoryExample example) throws SQLException {
		List<Category> list = sqlMapClient.queryForList("CATEGORY.selectByExample", example);
		return list;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table CATEGORY
	 * @mbggenerated  Tue Sep 25 23:11:19 ART 2012
	 */
	public Category selectCategoryByPrimaryKey(Integer id) throws SQLException {
		Category _key = new Category();
		_key.setId(id);
		Category record = (Category) sqlMapClient.queryForObject("CATEGORY.selectByPrimaryKey", _key);
		return record;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table CATEGORY
	 * @mbggenerated  Tue Sep 25 23:11:19 ART 2012
	 */
	public int updateCategoryByExampleSelective(Category record, CategoryExample example) throws SQLException {
		UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
		int rows = sqlMapClient.update("CATEGORY.updateByExampleSelective", parms);
		return rows;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table CATEGORY
	 * @mbggenerated  Tue Sep 25 23:11:19 ART 2012
	 */
	public int updateCategoryByExample(Category record, CategoryExample example) throws SQLException {
		UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
		int rows = sqlMapClient.update("CATEGORY.updateByExample", parms);
		return rows;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table CATEGORY
	 * @mbggenerated  Tue Sep 25 23:11:19 ART 2012
	 */
	public int updateCategoryByPrimaryKeySelective(Category record) throws SQLException {
		int rows = sqlMapClient.update("CATEGORY.updateByPrimaryKeySelective", record);
		return rows;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table CATEGORY
	 * @mbggenerated  Tue Sep 25 23:11:19 ART 2012
	 */
	public int updateCategoryByPrimaryKey(Category record) throws SQLException {
		int rows = sqlMapClient.update("CATEGORY.updateByPrimaryKey", record);
		return rows;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table CATEGORY
	 * @mbggenerated  Tue Sep 25 23:11:19 ART 2012
	 */
	protected static class UpdateByExampleParms extends CategoryExample {
		private Object record;

		public UpdateByExampleParms(Object record, CategoryExample example) {
			super(example);
			this.record = record;
		}

		public Object getRecord() {
			return record;
		}
	}
}