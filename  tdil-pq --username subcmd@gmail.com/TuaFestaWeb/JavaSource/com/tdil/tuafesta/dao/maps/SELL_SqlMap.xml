<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="SELL">
  <resultMap class="com.tdil.tuafesta.model.Sell" id="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Sep 29 00:10:00 ART 2012.
    -->
    <result column="sell_id" jdbcType="INTEGER" property="id" />
    <result column="sell_id_profesional" jdbcType="INTEGER" property="idProfesional" />
    <result column="sell_type" jdbcType="INTEGER" property="type" />
    <result column="sell_id_category" jdbcType="INTEGER" property="idCategory" />
    <result column="sell_name" jdbcType="VARCHAR" property="name" />
    <result column="sell_description" jdbcType="VARCHAR" property="description" />
    <result column="sell_referenceprice" jdbcType="DECIMAL" property="referenceprice" />
    <result column="sell_approved" jdbcType="INTEGER" property="approved" />
    <result column="sell_deleted" jdbcType="INTEGER" property="deleted" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Sep 29 00:10:00 ART 2012.
    -->
    <iterate conjunction="or" prepend="where" property="oredCriteria" removeFirstPrepend="iterate">
      <isEqual compareValue="true" property="oredCriteria[].valid">
        (
        <iterate conjunction="and" prepend="and" property="oredCriteria[].criteriaWithoutValue">
          $oredCriteria[].criteriaWithoutValue[]$
        </iterate>
        <iterate conjunction="and" prepend="and" property="oredCriteria[].criteriaWithSingleValue">
          $oredCriteria[].criteriaWithSingleValue[].condition$ #oredCriteria[].criteriaWithSingleValue[].value#
        </iterate>
        <iterate conjunction="and" prepend="and" property="oredCriteria[].criteriaWithListValue">
          $oredCriteria[].criteriaWithListValue[].condition$
          <iterate close=")" conjunction="," open="(" property="oredCriteria[].criteriaWithListValue[].values">
            #oredCriteria[].criteriaWithListValue[].values[]#
          </iterate>
        </iterate>
        <iterate conjunction="and" prepend="and" property="oredCriteria[].criteriaWithBetweenValue">
          $oredCriteria[].criteriaWithBetweenValue[].condition$
          #oredCriteria[].criteriaWithBetweenValue[].values[0]# and
          #oredCriteria[].criteriaWithBetweenValue[].values[1]#
        </iterate>
        )
      </isEqual>
    </iterate>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Sep 29 00:10:00 ART 2012.
    -->
    sell.id as sell_id, sell.id_profesional as sell_id_profesional, sell.type as sell_type, 
    sell.id_category as sell_id_category, sell.name as sell_name, sell.description as sell_description, 
    sell.referenceprice as sell_referenceprice, sell.approved as sell_approved, sell.deleted as sell_deleted
  </sql>
  <select id="selectByExample" parameterClass="com.tdil.tuafesta.model.SellExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Sep 29 00:10:00 ART 2012.
    -->
    select
    <isParameterPresent>
      <isEqual compareValue="true" property="distinct">
        distinct
      </isEqual>
    </isParameterPresent>
    <include refid="SELL.Base_Column_List" />
    from SELL sell
    <isParameterPresent>
      <include refid="SELL.Example_Where_Clause" />
      <isNotNull property="orderByClause">
        order by $orderByClause$
      </isNotNull>
    </isParameterPresent>
  </select>
  <select id="selectByPrimaryKey" parameterClass="com.tdil.tuafesta.model.Sell" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Sep 29 00:10:00 ART 2012.
    -->
    select 
    <include refid="SELL.Base_Column_List" />
    from SELL sell
    where sell.id = #id:INTEGER#
  </select>
  <delete id="deleteByPrimaryKey" parameterClass="com.tdil.tuafesta.model.Sell">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Sep 29 00:10:00 ART 2012.
    -->
    delete from SELL
    where id = #id:INTEGER#
  </delete>
  <delete id="deleteByExample" parameterClass="com.tdil.tuafesta.model.SellExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Sep 29 00:10:00 ART 2012.
    -->
    delete from sell using SELL sell
    <include refid="SELL.Example_Where_Clause" />
  </delete>
  <insert id="insert" parameterClass="com.tdil.tuafesta.model.Sell">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Sep 29 00:10:00 ART 2012.
    -->
    <selectKey keyProperty="id" resultClass="java.lang.Integer" type="post">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into SELL (id_profesional, type, id_category, name, 
      description, referenceprice, approved, deleted
      )
    values (#idProfesional:INTEGER#, #type:INTEGER#, #idCategory:INTEGER#, #name:VARCHAR#, 
      #description:VARCHAR#, #referenceprice:DECIMAL#, #approved:INTEGER#, #deleted:INTEGER#
      )
  </insert>
  <insert id="insertSelective" parameterClass="com.tdil.tuafesta.model.Sell">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Sep 29 00:10:00 ART 2012.
    -->
    <selectKey keyProperty="id" resultClass="java.lang.Integer" type="post">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into SELL
    <dynamic prepend="(">
      <isNotNull prepend="," property="idProfesional">
        id_profesional
      </isNotNull>
      <isNotNull prepend="," property="type">
        type
      </isNotNull>
      <isNotNull prepend="," property="idCategory">
        id_category
      </isNotNull>
      <isNotNull prepend="," property="name">
        name
      </isNotNull>
      <isNotNull prepend="," property="description">
        description
      </isNotNull>
      <isNotNull prepend="," property="referenceprice">
        referenceprice
      </isNotNull>
      <isNotNull prepend="," property="approved">
        approved
      </isNotNull>
      <isNotNull prepend="," property="deleted">
        deleted
      </isNotNull>
      )
    </dynamic>
    values
    <dynamic prepend="(">
      <isNotNull prepend="," property="idProfesional">
        #idProfesional:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="type">
        #type:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="idCategory">
        #idCategory:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="name">
        #name:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="description">
        #description:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="referenceprice">
        #referenceprice:DECIMAL#
      </isNotNull>
      <isNotNull prepend="," property="approved">
        #approved:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="deleted">
        #deleted:INTEGER#
      </isNotNull>
      )
    </dynamic>
  </insert>
  <select id="countByExample" parameterClass="com.tdil.tuafesta.model.SellExample" resultClass="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Sep 29 00:10:00 ART 2012.
    -->
    select count(*) from SELL sell
    <include refid="SELL.Example_Where_Clause" />
  </select>
  <update id="updateByExampleSelective">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Sep 29 00:10:00 ART 2012.
    -->
    update SELL sell
    <dynamic prepend="set">
      <isNotNull prepend="," property="record.id">
        sell.id = #record.id:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="record.idProfesional">
        sell.id_profesional = #record.idProfesional:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="record.type">
        sell.type = #record.type:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="record.idCategory">
        sell.id_category = #record.idCategory:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="record.name">
        sell.name = #record.name:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.description">
        sell.description = #record.description:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.referenceprice">
        sell.referenceprice = #record.referenceprice:DECIMAL#
      </isNotNull>
      <isNotNull prepend="," property="record.approved">
        sell.approved = #record.approved:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="record.deleted">
        sell.deleted = #record.deleted:INTEGER#
      </isNotNull>
    </dynamic>
    <isParameterPresent>
      <include refid="SELL.Example_Where_Clause" />
    </isParameterPresent>
  </update>
  <update id="updateByExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Sep 29 00:10:00 ART 2012.
    -->
    update SELL sell
    set sell.id = #record.id:INTEGER#,
      sell.id_profesional = #record.idProfesional:INTEGER#,
      sell.type = #record.type:INTEGER#,
      sell.id_category = #record.idCategory:INTEGER#,
      sell.name = #record.name:VARCHAR#,
      sell.description = #record.description:VARCHAR#,
      sell.referenceprice = #record.referenceprice:DECIMAL#,
      sell.approved = #record.approved:INTEGER#,
      sell.deleted = #record.deleted:INTEGER#
    <isParameterPresent>
      <include refid="SELL.Example_Where_Clause" />
    </isParameterPresent>
  </update>
  <update id="updateByPrimaryKeySelective" parameterClass="com.tdil.tuafesta.model.Sell">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Sep 29 00:10:00 ART 2012.
    -->
    update SELL
    <dynamic prepend="set">
      <isNotNull prepend="," property="idProfesional">
        id_profesional = #idProfesional:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="type">
        type = #type:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="idCategory">
        id_category = #idCategory:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="name">
        name = #name:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="description">
        description = #description:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="referenceprice">
        referenceprice = #referenceprice:DECIMAL#
      </isNotNull>
      <isNotNull prepend="," property="approved">
        approved = #approved:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="deleted">
        deleted = #deleted:INTEGER#
      </isNotNull>
    </dynamic>
    where id = #id:INTEGER#
  </update>
  <update id="updateByPrimaryKey" parameterClass="com.tdil.tuafesta.model.Sell">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Sep 29 00:10:00 ART 2012.
    -->
    update SELL
    set id_profesional = #idProfesional:INTEGER#,
      type = #type:INTEGER#,
      id_category = #idCategory:INTEGER#,
      name = #name:VARCHAR#,
      description = #description:VARCHAR#,
      referenceprice = #referenceprice:DECIMAL#,
      approved = #approved:INTEGER#,
      deleted = #deleted:INTEGER#
    where id = #id:INTEGER#
  </update>
  
  <resultMap class="com.tdil.tuafesta.model.valueobjects.SellValueObject" extends="BaseResultMap" id="SellValueObject">
  	<result column="profesionalbusinessname" jdbcType="VARCHAR" property="profesionalbusinessname" />
  	<result column="geo2name" jdbcType="VARCHAR" property="geo2name" />
  	<result column="geo3name" jdbcType="VARCHAR" property="geo3name" />
  	<result column="geo4name" jdbcType="VARCHAR" property="geo4name" />
  </resultMap>
  
  <select id="searchSellProductsByGeo4" parameterClass="java.util.Map" resultMap="SellValueObject">
    select 
    	<include refid="SELL.Base_Column_List" />,
    	prof.businessname as profesionalbusinessname,
    	g2.nombre as geo2name,
    	g3.nombre as geo3name,
    	g4.nombre as geo4name,
    	IF(g4.id=#geo4id:INTEGER#,"1","4") ordercol
    from SELL sell, PROFESIONAL prof, GEO2 g2, GEO3 g3, GEO4 g4
    where sell.type = 1
    and sell.id_profesional = prof.id
    and prof.id_geolevel = g4.id
    and g4.geo3_id = g3.id
    and g3.geo2_id = g2.id
    and sell.approved = 1
    and sell.deleted = 0
    and prof.status = 2
    and prof.deleted = 0
union all
	select 
    	<include refid="SELL.Base_Column_List" />,
    	prof.businessname as profesionalbusinessname,
    	g2.nombre as geo2name,
    	g3.nombre as geo3name,
    	g4.nombre as geo4name,
    	"2" ordercol
    from SELL sell, PROFESIONAL prof, GEO2 g2, GEO3 g3, GEO4 g4, SERVICE_AREA sa
    where sell.type = 2
    and sell.id_profesional = prof.id
    and sa.id_geolevel = g4.id
    and g4.geo3_id = g3.id
    and g3.geo2_id = g2.id
    and sell.approved = 1
    and sell.deleted = 0
    and prof.status = 2
    and prof.deleted = 0
    and prof.id = sa.id_profesional
	and sa.level = 4 
	and sa.id_geolevel = #geo4id:INTEGER#
union all
	select 
    	<include refid="SELL.Base_Column_List" />,
    	prof.businessname as profesionalbusinessname,
    	g2.nombre as geo2name,
    	g3.nombre as geo3name,
    	g4.nombre as geo4name,
    	IF(g4.id=#geo4id:INTEGER#,"3","5") ordercol
    from SELL sell, PROFESIONAL prof, GEO2 g2, GEO3 g3, GEO4 g4
    where sell.type = 2
    and sell.id_profesional = prof.id
    and prof.id_geolevel = g4.id
    and g4.geo3_id = g3.id
    and g3.geo2_id = g2.id
    and sell.approved = 1
    and sell.deleted = 0
    and prof.status = 2
    and prof.deleted = 0
    and not exists (select sa.* from SERVICE_AREA sa where sa.id_profesional = prof.id)
    order by ordercol
  </select>
 
  <select id="searchSellProductsByCategory" parameterClass="java.util.Map" resultMap="SellValueObject">
    select 
    	<include refid="SELL.Base_Column_List" />,
    	prof.businessname as profesionalbusinessname,
    	g2.nombre as geo2name,
    	g3.nombre as geo3name,
    	g4.nombre as geo4name
    from SELL sell, PROFESIONAL prof,GEO2 g2, GEO3 g3, GEO4 g4
    where sell.id_category = #catid:INTEGER#
    and sell.type = 1
    and sell.id_profesional = prof.id
    and prof.id_geolevel = g4.id
    and g4.geo3_id = g3.id
    and g3.geo2_id = g2.id
    and sell.approved = 1
    and sell.deleted = 0
    and prof.status = 2
    and prof.deleted = 0
  </select>
  
  <select id="searchSellProductsByProfesional" parameterClass="java.util.Map" resultMap="SellValueObject">
    select 
    	<include refid="SELL.Base_Column_List" />,
    	null as profesionalbusinessname,
    	null as geo2name,
    	null as geo3name,
    	null as geo4name
    from SELL sell
    where sell.id_profesional = #id:INTEGER#
    and sell.type = 1
  </select>
  
  <select id="searchSellProductsByCategories" parameterClass="list" resultMap="SellValueObject">
    select 
    	<include refid="SELL.Base_Column_List" />,
    	prof.businessname as profesionalbusinessname,
    	g2.nombre as geo2name,
    	g3.nombre as geo3name,
    	g4.nombre as geo4name
    from SELL sell, PROFESIONAL prof,GEO2 g2, GEO3 g3, GEO4 g4
    where sell.id_category in
    	<iterate close=")" conjunction="," open="(">
		   #[]#
		</iterate>
    and sell.type = 1
    and sell.id_profesional = prof.id
    and prof.id_geolevel = g4.id
    and g4.geo3_id = g3.id
    and g3.geo2_id = g2.id
    and sell.approved = 1
    and sell.deleted = 0
    and prof.status = 2
    and prof.deleted = 0
  </select>
  
  
  <select id="searchSellServicesByCategory" parameterClass="java.util.Map" resultMap="SellValueObject">
    select 
    	<include refid="SELL.Base_Column_List" />,
    	prof.businessname as profesionalbusinessname,
    	null as geo2name,
    	null as geo3name,
    	null as geo4name
    from SELL sell, PROFESIONAL prof
    where sell.id_category = #catid:INTEGER#
    and sell.type = 2
    and sell.id_profesional = prof.id
    and sell.approved = 1
    and sell.deleted = 0
    and prof.status = 2
    and prof.deleted = 0
  </select>
  
  <select id="searchSellServicesByProfesional" parameterClass="java.util.Map" resultMap="SellValueObject">
    select 
    	<include refid="SELL.Base_Column_List" />,
    	null as profesionalbusinessname,
    	null as geo2name,
    	null as geo3name,
    	null as geo4name
    from SELL sell
    where sell.id_profesional = #id:INTEGER#
    and sell.type = 2
  </select>
  
    <select id="searchSellServicesByCategories" parameterClass="list" resultMap="SellValueObject">
    select 
    	<include refid="SELL.Base_Column_List" />,
    	prof.businessname as profesionalbusinessname,
    	null as geo2name,
    	null as geo3name,
    	null as geo4name
    from SELL sell, PROFESIONAL prof
    where sell.id_category in
    	<iterate close=")" conjunction="," open="(">
		   #[]#
		</iterate>
    and sell.type = 2
    and sell.id_profesional = prof.id
    and sell.approved = 1
    and sell.deleted = 0
    and prof.status = 2
    and prof.deleted = 0
  </select>
  
  
  <select id="selectSellProductValueObject" parameterClass="java.util.Map" resultMap="SellValueObject">
    select 
    	<include refid="SELL.Base_Column_List" />,
    	prof.businessname as profesionalbusinessname,
    	g2.nombre as geo2name,
    	g3.nombre as geo3name,
    	g4.nombre as geo4name
    from SELL sell, PROFESIONAL prof, GEO2 g2, GEO3 g3, GEO4 g4
    where sell.id = #id:INTEGER#
    and sell.type = 1
    and sell.id_profesional = prof.id
    and prof.id_geolevel = g4.id
    and g4.geo3_id = g3.id
    and g3.geo2_id = g2.id
    and sell.approved = 1
    and sell.deleted = 0
    and prof.status = 2
    and prof.deleted = 0
  </select>
  
  <select id="selectSellServiceValueObject" parameterClass="java.util.Map" resultMap="SellValueObject">
    select 
    	<include refid="SELL.Base_Column_List" />,
    	prof.businessname as profesionalbusinessname,
    	null as geo2name,
    	null as geo3name,
    	null as geo4name
    from SELL sell, PROFESIONAL prof
    where sell.id = #id:INTEGER#
    and sell.type = 2
    and sell.id_profesional = prof.id
    and sell.approved = 1
    and sell.deleted = 0
    and prof.status = 2
    and prof.deleted = 0
  </select>
  
  
  <select id="searchProductsSellsBy" parameterClass="java.util.Map" resultMap="SellValueObject">
    select 
    	<include refid="SELL.Base_Column_List" />,
    	prof.businessname as profesionalbusinessname,
    	g2.nombre as geo2name,
    	g3.nombre as geo3name,
    	g4.nombre as geo4name
    from SELL sell, PROFESIONAL prof, GEO2 g2, GEO3 g3, GEO4 g4
    where sell.type = 1
    and sell.id_profesional = prof.id
    and prof.id_geolevel = g4.id
    and g4.geo3_id = g3.id
    and g3.geo2_id = g2.id
    and sell.approved = 1
    and sell.deleted = 0
    and prof.status = 2
    and prof.deleted = 0
    <isNotNull prepend="and" property="name">
    	sell.name LIKE #name:VARCHAR#
    </isNotNull>
    <isNotNull prepend="and" property="profesionalBusinessname">
    	prof.businessname LIKE #profesionalBusinessname:VARCHAR#
    </isNotNull>
  </select>
  
  
  <select id="searchServicesSellsBy" parameterClass="java.util.Map" resultMap="SellValueObject">
    select 
    	<include refid="SELL.Base_Column_List" />,
    	prof.businessname as profesionalbusinessname,
    	null as geo2name,
    	null as geo3name,
    	null as geo4name
    from SELL sell, PROFESIONAL prof
    where sell.type = 2
    and sell.id_profesional = prof.id
    and sell.approved = 1
    and sell.deleted = 0
    and prof.status = 2
    and prof.deleted = 0
    <isNotNull prepend="and" property="name">
    	sell.name LIKE #name:VARCHAR#
    </isNotNull>
    <isNotNull prepend="and" property="profesionalBusinessname">
    	prof.businessname LIKE #profesionalBusinessname:VARCHAR#
    </isNotNull>
  </select>
  
  
    <select id="selectSellsForPromotion" parameterClass="java.util.Map" resultMap="SellValueObject">
     select 
    	<include refid="SELL.Base_Column_List" />,
    	prof.businessname as profesionalbusinessname,
    	null as geo2name,
    	null as geo3name,
    	null as geo4name
    from SELL sell, PROFESIONAL prof, PROMOTION_SELL ps
    where sell.type = 1
    and sell.id_profesional = prof.id
    and sell.approved = 1
    and sell.deleted = 0
    and prof.status = 2
    and prof.deleted = 0
    and sell.id = ps.id_sell
    and ps.id_promotion = #promotionId:INTEGER#
    union all
    select 
    	<include refid="SELL.Base_Column_List" />,
    	prof.businessname as profesionalbusinessname,
    	null as geo2name,
    	null as geo3name,
    	null as geo4name
    from SELL sell, PROFESIONAL prof, PROMOTION_SELL ps
    where sell.type = 2
    and sell.id_profesional = prof.id
    and sell.approved = 1
    and sell.deleted = 0
    and prof.status = 2
    and prof.deleted = 0
    and sell.id = ps.id_sell
    and ps.id_promotion = #promotionId:INTEGER#
  </select>
  
  
  <select id="selectSellsByTerms" parameterClass="list" resultMap="SellValueObject">
    select 
    	<include refid="SELL.Base_Column_List" />,
    	prof.businessname as profesionalbusinessname,
    	null as geo2name,
    	null as geo3name,
    	null as geo4name
    from SELL sell, PROFESIONAL prof
    where (
    		(
	    	<iterate close="" conjunction="OR" open="">
			  sell.name like #[]#
			</iterate>
			) 
			OR
			(
	    	<iterate close="" conjunction="OR" open="">
			  sell.description like #[]#
			</iterate>
			) 
		)
    and sell.id_profesional = prof.id
    and sell.approved = 1
    and sell.deleted = 0
    and prof.status = 2
    and prof.deleted = 0
  </select>
  
 
</sqlMap>