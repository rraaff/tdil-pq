package com.tdil.milka.dao.impl;

import com.ibatis.sqlmap.client.SqlMapClient;
import com.tdil.milka.dao.GoodMorningDAO;
import com.tdil.milka.model.GoodMorning;
import com.tdil.milka.model.GoodMorningExample;
import java.sql.SQLException;
import java.util.List;

public class GoodMorningDAOImpl implements GoodMorningDAO {

	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table GOOD_MORNING
	 * @mbggenerated  Tue Jun 26 00:24:51 ART 2012
	 */
	private SqlMapClient sqlMapClient;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table GOOD_MORNING
	 * @mbggenerated  Tue Jun 26 00:24:51 ART 2012
	 */
	public GoodMorningDAOImpl(SqlMapClient sqlMapClient) {
		super();
		this.sqlMapClient = sqlMapClient;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table GOOD_MORNING
	 * @mbggenerated  Tue Jun 26 00:24:51 ART 2012
	 */
	public int countGoodMorningByExample(GoodMorningExample example) throws SQLException {
		Integer count = (Integer) sqlMapClient.queryForObject("GOOD_MORNING.countByExample", example);
		return count;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table GOOD_MORNING
	 * @mbggenerated  Tue Jun 26 00:24:51 ART 2012
	 */
	public int deleteGoodMorningByExample(GoodMorningExample example) throws SQLException {
		int rows = sqlMapClient.delete("GOOD_MORNING.deleteByExample", example);
		return rows;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table GOOD_MORNING
	 * @mbggenerated  Tue Jun 26 00:24:51 ART 2012
	 */
	public int deleteGoodMorningByPrimaryKey(Integer id) throws SQLException {
		GoodMorning _key = new GoodMorning();
		_key.setId(id);
		int rows = sqlMapClient.delete("GOOD_MORNING.deleteByPrimaryKey", _key);
		return rows;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table GOOD_MORNING
	 * @mbggenerated  Tue Jun 26 00:24:51 ART 2012
	 */
	public Integer insertGoodMorning(GoodMorning record) throws SQLException {
		Object newKey = sqlMapClient.insert("GOOD_MORNING.insert", record);
		return (Integer) newKey;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table GOOD_MORNING
	 * @mbggenerated  Tue Jun 26 00:24:51 ART 2012
	 */
	public Integer insertGoodMorningSelective(GoodMorning record) throws SQLException {
		Object newKey = sqlMapClient.insert("GOOD_MORNING.insertSelective", record);
		return (Integer) newKey;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table GOOD_MORNING
	 * @mbggenerated  Tue Jun 26 00:24:51 ART 2012
	 */
	@SuppressWarnings("unchecked")
	public List<GoodMorning> selectGoodMorningByExample(GoodMorningExample example) throws SQLException {
		List<GoodMorning> list = sqlMapClient.queryForList("GOOD_MORNING.selectByExample", example);
		return list;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table GOOD_MORNING
	 * @mbggenerated  Tue Jun 26 00:24:51 ART 2012
	 */
	public GoodMorning selectGoodMorningByPrimaryKey(Integer id) throws SQLException {
		GoodMorning _key = new GoodMorning();
		_key.setId(id);
		GoodMorning record = (GoodMorning) sqlMapClient.queryForObject("GOOD_MORNING.selectByPrimaryKey", _key);
		return record;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table GOOD_MORNING
	 * @mbggenerated  Tue Jun 26 00:24:51 ART 2012
	 */
	public int updateGoodMorningByExampleSelective(GoodMorning record, GoodMorningExample example) throws SQLException {
		UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
		int rows = sqlMapClient.update("GOOD_MORNING.updateByExampleSelective", parms);
		return rows;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table GOOD_MORNING
	 * @mbggenerated  Tue Jun 26 00:24:51 ART 2012
	 */
	public int updateGoodMorningByExample(GoodMorning record, GoodMorningExample example) throws SQLException {
		UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
		int rows = sqlMapClient.update("GOOD_MORNING.updateByExample", parms);
		return rows;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table GOOD_MORNING
	 * @mbggenerated  Tue Jun 26 00:24:51 ART 2012
	 */
	public int updateGoodMorningByPrimaryKeySelective(GoodMorning record) throws SQLException {
		int rows = sqlMapClient.update("GOOD_MORNING.updateByPrimaryKeySelective", record);
		return rows;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table GOOD_MORNING
	 * @mbggenerated  Tue Jun 26 00:24:51 ART 2012
	 */
	public int updateGoodMorningByPrimaryKey(GoodMorning record) throws SQLException {
		int rows = sqlMapClient.update("GOOD_MORNING.updateByPrimaryKey", record);
		return rows;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table GOOD_MORNING
	 * @mbggenerated  Tue Jun 26 00:24:51 ART 2012
	 */
	protected static class UpdateByExampleParms extends GoodMorningExample {
		private Object record;

		public UpdateByExampleParms(Object record, GoodMorningExample example) {
			super(example);
			this.record = record;
		}

		public Object getRecord() {
			return record;
		}
	}
}