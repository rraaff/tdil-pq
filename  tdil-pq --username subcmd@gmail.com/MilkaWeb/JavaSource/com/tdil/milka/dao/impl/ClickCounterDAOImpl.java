package com.tdil.milka.dao.impl;

import com.ibatis.sqlmap.client.SqlMapClient;
import com.tdil.milka.dao.ClickCounterDAO;
import com.tdil.milka.model.ClickCounter;
import com.tdil.milka.model.ClickCounterExample;
import java.sql.SQLException;
import java.util.List;

public class ClickCounterDAOImpl implements ClickCounterDAO {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table CLICK_COUNTER
	 * @mbggenerated  Wed May 09 01:38:51 ART 2012
	 */
	private SqlMapClient sqlMapClient;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table CLICK_COUNTER
	 * @mbggenerated  Wed May 09 01:38:51 ART 2012
	 */
	public ClickCounterDAOImpl(SqlMapClient sqlMapClient) {
		super();
		this.sqlMapClient = sqlMapClient;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table CLICK_COUNTER
	 * @mbggenerated  Wed May 09 01:38:51 ART 2012
	 */
	public int countClickCounterByExample(ClickCounterExample example) throws SQLException {
		Integer count = (Integer) sqlMapClient.queryForObject("CLICK_COUNTER.countByExample", example);
		return count;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table CLICK_COUNTER
	 * @mbggenerated  Wed May 09 01:38:51 ART 2012
	 */
	public int deleteClickCounterByExample(ClickCounterExample example) throws SQLException {
		int rows = sqlMapClient.delete("CLICK_COUNTER.deleteByExample", example);
		return rows;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table CLICK_COUNTER
	 * @mbggenerated  Wed May 09 01:38:51 ART 2012
	 */
	public int deleteClickCounterByPrimaryKey(Integer id) throws SQLException {
		ClickCounter _key = new ClickCounter();
		_key.setId(id);
		int rows = sqlMapClient.delete("CLICK_COUNTER.deleteByPrimaryKey", _key);
		return rows;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table CLICK_COUNTER
	 * @mbggenerated  Wed May 09 01:38:51 ART 2012
	 */
	public Integer insertClickCounter(ClickCounter record) throws SQLException {
		Object newKey = sqlMapClient.insert("CLICK_COUNTER.insert", record);
		return (Integer) newKey;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table CLICK_COUNTER
	 * @mbggenerated  Wed May 09 01:38:51 ART 2012
	 */
	public Integer insertClickCounterSelective(ClickCounter record) throws SQLException {
		Object newKey = sqlMapClient.insert("CLICK_COUNTER.insertSelective", record);
		return (Integer) newKey;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table CLICK_COUNTER
	 * @mbggenerated  Wed May 09 01:38:51 ART 2012
	 */
	@SuppressWarnings("unchecked")
	public List<ClickCounter> selectClickCounterByExample(ClickCounterExample example) throws SQLException {
		List<ClickCounter> list = sqlMapClient.queryForList("CLICK_COUNTER.selectByExample", example);
		return list;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table CLICK_COUNTER
	 * @mbggenerated  Wed May 09 01:38:51 ART 2012
	 */
	public ClickCounter selectClickCounterByPrimaryKey(Integer id) throws SQLException {
		ClickCounter _key = new ClickCounter();
		_key.setId(id);
		ClickCounter record = (ClickCounter) sqlMapClient.queryForObject("CLICK_COUNTER.selectByPrimaryKey", _key);
		return record;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table CLICK_COUNTER
	 * @mbggenerated  Wed May 09 01:38:51 ART 2012
	 */
	public int updateClickCounterByExampleSelective(ClickCounter record, ClickCounterExample example)
			throws SQLException {
		UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
		int rows = sqlMapClient.update("CLICK_COUNTER.updateByExampleSelective", parms);
		return rows;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table CLICK_COUNTER
	 * @mbggenerated  Wed May 09 01:38:51 ART 2012
	 */
	public int updateClickCounterByExample(ClickCounter record, ClickCounterExample example) throws SQLException {
		UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
		int rows = sqlMapClient.update("CLICK_COUNTER.updateByExample", parms);
		return rows;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table CLICK_COUNTER
	 * @mbggenerated  Wed May 09 01:38:51 ART 2012
	 */
	public int updateClickCounterByPrimaryKeySelective(ClickCounter record) throws SQLException {
		int rows = sqlMapClient.update("CLICK_COUNTER.updateByPrimaryKeySelective", record);
		return rows;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table CLICK_COUNTER
	 * @mbggenerated  Wed May 09 01:38:51 ART 2012
	 */
	public int updateClickCounterByPrimaryKey(ClickCounter record) throws SQLException {
		int rows = sqlMapClient.update("CLICK_COUNTER.updateByPrimaryKey", record);
		return rows;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table CLICK_COUNTER
	 * @mbggenerated  Wed May 09 01:38:51 ART 2012
	 */
	protected static class UpdateByExampleParms extends ClickCounterExample {
		private Object record;

		public UpdateByExampleParms(Object record, ClickCounterExample example) {
			super(example);
			this.record = record;
		}

		public Object getRecord() {
			return record;
		}
	}

	/** Custom queries */
    public int incrementCounter(ClickCounter record) throws SQLException {
    	int rows = sqlMapClient.update("CLICK_COUNTER.incrementClickCounter", record);
        return rows;
    }
}