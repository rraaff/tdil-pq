<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="LOVE_NICKNAMES">
  <resultMap class="com.tdil.milka.model.LoveNicknames" id="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jun 26 00:24:51 ART 2012.
    -->
    <result column="lnn_id" jdbcType="INTEGER" property="id" />
    <result column="lnn_creationDate" jdbcType="TIMESTAMP" property="creationdate" />
    <result column="lnn_publishDate" jdbcType="TIMESTAMP" property="publishdate" />
    <result column="lnn_id_author" jdbcType="INTEGER" property="idAuthor" />
    <result column="lnn_sex" jdbcType="CHAR" property="sex" />
    <result column="lnn_originalText" jdbcType="VARCHAR" property="originaltext" />
    <result column="lnn_position" jdbcType="VARCHAR" property="position" />
    <result column="lnn_approved" jdbcType="INTEGER" property="approved" />
    <result column="lnn_id_click_counter" jdbcType="INTEGER" property="idClickCounter" />
    <result column="lnn_deleted" jdbcType="INTEGER" property="deleted" />
    <result column="lnn_url_link" jdbcType="VARCHAR" property="urlLink" />
    <result column="lnn_url_target" jdbcType="VARCHAR" property="urlTarget" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jun 26 00:24:51 ART 2012.
    -->
    <iterate conjunction="or" prepend="where" property="oredCriteria" removeFirstPrepend="iterate">
      <isEqual compareValue="true" property="oredCriteria[].valid">
        (
        <iterate conjunction="and" prepend="and" property="oredCriteria[].criteriaWithoutValue">
          $oredCriteria[].criteriaWithoutValue[]$
        </iterate>
        <iterate conjunction="and" prepend="and" property="oredCriteria[].criteriaWithSingleValue">
          $oredCriteria[].criteriaWithSingleValue[].condition$ #oredCriteria[].criteriaWithSingleValue[].value#
        </iterate>
        <iterate conjunction="and" prepend="and" property="oredCriteria[].criteriaWithListValue">
          $oredCriteria[].criteriaWithListValue[].condition$
          <iterate close=")" conjunction="," open="(" property="oredCriteria[].criteriaWithListValue[].values">
            #oredCriteria[].criteriaWithListValue[].values[]#
          </iterate>
        </iterate>
        <iterate conjunction="and" prepend="and" property="oredCriteria[].criteriaWithBetweenValue">
          $oredCriteria[].criteriaWithBetweenValue[].condition$
          #oredCriteria[].criteriaWithBetweenValue[].values[0]# and
          #oredCriteria[].criteriaWithBetweenValue[].values[1]#
        </iterate>
        )
      </isEqual>
    </iterate>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jun 26 00:24:51 ART 2012.
    -->
    lnn.id as lnn_id, lnn.creationDate as lnn_creationDate, lnn.publishDate as lnn_publishDate, 
    lnn.id_author as lnn_id_author, lnn.sex as lnn_sex, lnn.originalText as lnn_originalText, 
    lnn.position as lnn_position, lnn.approved as lnn_approved, lnn.id_click_counter as lnn_id_click_counter, 
    lnn.deleted as lnn_deleted, lnn.url_link as lnn_url_link, lnn.url_target as lnn_url_target
  </sql>
  <select id="selectByExample" parameterClass="com.tdil.milka.model.LoveNicknamesExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jun 26 00:24:51 ART 2012.
    -->
    select
    <isParameterPresent>
      <isEqual compareValue="true" property="distinct">
        distinct
      </isEqual>
    </isParameterPresent>
    <include refid="LOVE_NICKNAMES.Base_Column_List" />
    from LOVE_NICKNAMES lnn
    <isParameterPresent>
      <include refid="LOVE_NICKNAMES.Example_Where_Clause" />
      <isNotNull property="orderByClause">
        order by $orderByClause$
      </isNotNull>
    </isParameterPresent>
  </select>
  <select id="selectByPrimaryKey" parameterClass="com.tdil.milka.model.LoveNicknames" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jun 26 00:24:51 ART 2012.
    -->
    select 
    <include refid="LOVE_NICKNAMES.Base_Column_List" />
    from LOVE_NICKNAMES lnn
    where lnn.id = #id:INTEGER#
  </select>
  <delete id="deleteByPrimaryKey" parameterClass="com.tdil.milka.model.LoveNicknames">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jun 26 00:24:51 ART 2012.
    -->
    delete from LOVE_NICKNAMES
    where id = #id:INTEGER#
  </delete>
  <delete id="deleteByExample" parameterClass="com.tdil.milka.model.LoveNicknamesExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jun 26 00:24:51 ART 2012.
    -->
    delete from lnn using LOVE_NICKNAMES lnn
    <include refid="LOVE_NICKNAMES.Example_Where_Clause" />
  </delete>
  <insert id="insert" parameterClass="com.tdil.milka.model.LoveNicknames">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jun 26 00:24:51 ART 2012.
    -->
    <selectKey keyProperty="id" resultClass="java.lang.Integer" type="post">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into LOVE_NICKNAMES (creationDate, publishDate, id_author, sex, 
      originalText, position, approved, id_click_counter, 
      deleted, url_link, url_target)
    values (#creationdate:TIMESTAMP#, #publishdate:TIMESTAMP#, #idAuthor:INTEGER#, #sex:CHAR#, 
      #originaltext:VARCHAR#, #position:VARCHAR#, #approved:INTEGER#, #idClickCounter:INTEGER#, 
      #deleted:INTEGER#, #urlLink:VARCHAR#, #urlTarget:VARCHAR#)
  </insert>
  <insert id="insertSelective" parameterClass="com.tdil.milka.model.LoveNicknames">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jun 26 00:24:51 ART 2012.
    -->
    <selectKey keyProperty="id" resultClass="java.lang.Integer" type="post">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into LOVE_NICKNAMES
    <dynamic prepend="(">
      <isNotNull prepend="," property="creationdate">
        creationDate
      </isNotNull>
      <isNotNull prepend="," property="publishdate">
        publishDate
      </isNotNull>
      <isNotNull prepend="," property="idAuthor">
        id_author
      </isNotNull>
      <isNotNull prepend="," property="sex">
        sex
      </isNotNull>
      <isNotNull prepend="," property="originaltext">
        originalText
      </isNotNull>
      <isNotNull prepend="," property="position">
        position
      </isNotNull>
      <isNotNull prepend="," property="approved">
        approved
      </isNotNull>
      <isNotNull prepend="," property="idClickCounter">
        id_click_counter
      </isNotNull>
      <isNotNull prepend="," property="deleted">
        deleted
      </isNotNull>
      <isNotNull prepend="," property="urlLink">
        url_link
      </isNotNull>
      <isNotNull prepend="," property="urlTarget">
        url_target
      </isNotNull>
      )
    </dynamic>
    values
    <dynamic prepend="(">
      <isNotNull prepend="," property="creationdate">
        #creationdate:TIMESTAMP#
      </isNotNull>
      <isNotNull prepend="," property="publishdate">
        #publishdate:TIMESTAMP#
      </isNotNull>
      <isNotNull prepend="," property="idAuthor">
        #idAuthor:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="sex">
        #sex:CHAR#
      </isNotNull>
      <isNotNull prepend="," property="originaltext">
        #originaltext:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="position">
        #position:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="approved">
        #approved:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="idClickCounter">
        #idClickCounter:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="deleted">
        #deleted:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="urlLink">
        #urlLink:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="urlTarget">
        #urlTarget:VARCHAR#
      </isNotNull>
      )
    </dynamic>
  </insert>
  <select id="countByExample" parameterClass="com.tdil.milka.model.LoveNicknamesExample" resultClass="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jun 26 00:24:51 ART 2012.
    -->
    select count(*) from LOVE_NICKNAMES lnn
    <include refid="LOVE_NICKNAMES.Example_Where_Clause" />
  </select>
  <update id="updateByExampleSelective">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jun 26 00:24:51 ART 2012.
    -->
    update LOVE_NICKNAMES lnn
    <dynamic prepend="set">
      <isNotNull prepend="," property="record.id">
        lnn.id = #record.id:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="record.creationdate">
        lnn.creationDate = #record.creationdate:TIMESTAMP#
      </isNotNull>
      <isNotNull prepend="," property="record.publishdate">
        lnn.publishDate = #record.publishdate:TIMESTAMP#
      </isNotNull>
      <isNotNull prepend="," property="record.idAuthor">
        lnn.id_author = #record.idAuthor:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="record.sex">
        lnn.sex = #record.sex:CHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.originaltext">
        lnn.originalText = #record.originaltext:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.position">
        lnn.position = #record.position:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.approved">
        lnn.approved = #record.approved:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="record.idClickCounter">
        lnn.id_click_counter = #record.idClickCounter:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="record.deleted">
        lnn.deleted = #record.deleted:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="record.urlLink">
        lnn.url_link = #record.urlLink:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.urlTarget">
        lnn.url_target = #record.urlTarget:VARCHAR#
      </isNotNull>
    </dynamic>
    <isParameterPresent>
      <include refid="LOVE_NICKNAMES.Example_Where_Clause" />
    </isParameterPresent>
  </update>
  <update id="updateByExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jun 26 00:24:51 ART 2012.
    -->
    update LOVE_NICKNAMES lnn
    set lnn.id = #record.id:INTEGER#,
      lnn.creationDate = #record.creationdate:TIMESTAMP#,
      lnn.publishDate = #record.publishdate:TIMESTAMP#,
      lnn.id_author = #record.idAuthor:INTEGER#,
      lnn.sex = #record.sex:CHAR#,
      lnn.originalText = #record.originaltext:VARCHAR#,
      lnn.position = #record.position:VARCHAR#,
      lnn.approved = #record.approved:INTEGER#,
      lnn.id_click_counter = #record.idClickCounter:INTEGER#,
      lnn.deleted = #record.deleted:INTEGER#,
      lnn.url_link = #record.urlLink:VARCHAR#,
      lnn.url_target = #record.urlTarget:VARCHAR#
    <isParameterPresent>
      <include refid="LOVE_NICKNAMES.Example_Where_Clause" />
    </isParameterPresent>
  </update>
  <update id="updateByPrimaryKeySelective" parameterClass="com.tdil.milka.model.LoveNicknames">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jun 26 00:24:51 ART 2012.
    -->
    update LOVE_NICKNAMES
    <dynamic prepend="set">
      <isNotNull prepend="," property="creationdate">
        creationDate = #creationdate:TIMESTAMP#
      </isNotNull>
      <isNotNull prepend="," property="publishdate">
        publishDate = #publishdate:TIMESTAMP#
      </isNotNull>
      <isNotNull prepend="," property="idAuthor">
        id_author = #idAuthor:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="sex">
        sex = #sex:CHAR#
      </isNotNull>
      <isNotNull prepend="," property="originaltext">
        originalText = #originaltext:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="position">
        position = #position:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="approved">
        approved = #approved:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="idClickCounter">
        id_click_counter = #idClickCounter:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="deleted">
        deleted = #deleted:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="urlLink">
        url_link = #urlLink:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="urlTarget">
        url_target = #urlTarget:VARCHAR#
      </isNotNull>
    </dynamic>
    where id = #id:INTEGER#
  </update>
  <update id="updateByPrimaryKey" parameterClass="com.tdil.milka.model.LoveNicknames">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jun 26 00:24:51 ART 2012.
    -->
    update LOVE_NICKNAMES
    set creationDate = #creationdate:TIMESTAMP#,
      publishDate = #publishdate:TIMESTAMP#,
      id_author = #idAuthor:INTEGER#,
      sex = #sex:CHAR#,
      originalText = #originaltext:VARCHAR#,
      position = #position:VARCHAR#,
      approved = #approved:INTEGER#,
      id_click_counter = #idClickCounter:INTEGER#,
      deleted = #deleted:INTEGER#,
      url_link = #urlLink:VARCHAR#,
      url_target = #urlTarget:VARCHAR#
    where id = #id:INTEGER#
  </update>
  
    <select id="selectLoveNicknamesToApprove" resultMap="BaseResultMap">
    select 
    <include refid="LOVE_NICKNAMES.Base_Column_List" />
    from LOVE_NICKNAMES lnn
    where lnn.approved != 1
    order by lnn.approved asc, lnn.id desc
  </select>
  
  <select id="selectLoveNicknamesToReview" resultMap="BaseResultMap">
    select 
    <include refid="LOVE_NICKNAMES.Base_Column_List" />
    from LOVE_NICKNAMES lnn
    where lnn.approved = 1
    order by lnn.id desc
  </select>
  
  <select id="selectLoveNicknamesForFlash" resultMap="BaseResultMap">
    select 
    <include refid="LOVE_NICKNAMES.Base_Column_List" />
    from LOVE_NICKNAMES lnn
    where lnn.approved = 1
    order by lnn.id asc
  </select>
  
  <select id="selectExperience" resultMap="EXPERIENCE.BaseResultMap">
    select 
    	lnn.id as exp_id, 'APODOS_DE_AMOR' as exp_type, lnn.originalText as exp_description,
    	0 as exp_idblob, '' as exp_extblob, 
    	(select COUNT(*) FROM LINKS where destinationType = 'APODOS_DE_AMOR' and destination = lnn.id) as exp_linkCount
    from LOVE_NICKNAMES lnn
    where lnn.approved = 1
    order by exp_linkCount asc, lnn.id desc
  </select>
</sqlMap>