package com.tdil.djmag.dao.impl;

import com.ibatis.sqlmap.client.SqlMapClient;
import com.tdil.djmag.dao.ImageGalleryDAO;
import com.tdil.djmag.model.ImageGallery;
import com.tdil.djmag.model.ImageGalleryExample;
import java.sql.SQLException;
import java.util.List;

public class ImageGalleryDAOImpl implements ImageGalleryDAO {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table IMAGE_GALLERY
     *
     * @mbggenerated Mon May 14 23:58:28 ART 2012
     */
    private SqlMapClient sqlMapClient;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table IMAGE_GALLERY
     *
     * @mbggenerated Mon May 14 23:58:28 ART 2012
     */
    public ImageGalleryDAOImpl(SqlMapClient sqlMapClient) {
        super();
        this.sqlMapClient = sqlMapClient;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table IMAGE_GALLERY
     *
     * @mbggenerated Mon May 14 23:58:28 ART 2012
     */
    public int countImageGalleryByExample(ImageGalleryExample example) throws SQLException {
        Integer count = (Integer)  sqlMapClient.queryForObject("IMAGE_GALLERY.countByExample", example);
        return count;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table IMAGE_GALLERY
     *
     * @mbggenerated Mon May 14 23:58:28 ART 2012
     */
    public int deleteImageGalleryByExample(ImageGalleryExample example) throws SQLException {
        int rows = sqlMapClient.delete("IMAGE_GALLERY.deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table IMAGE_GALLERY
     *
     * @mbggenerated Mon May 14 23:58:28 ART 2012
     */
    public int deleteImageGalleryByPrimaryKey(Integer id) throws SQLException {
        ImageGallery _key = new ImageGallery();
        _key.setId(id);
        int rows = sqlMapClient.delete("IMAGE_GALLERY.deleteByPrimaryKey", _key);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table IMAGE_GALLERY
     *
     * @mbggenerated Mon May 14 23:58:28 ART 2012
     */
    public Integer insertImageGallery(ImageGallery record) throws SQLException {
        Object newKey = sqlMapClient.insert("IMAGE_GALLERY.insert", record);
        return (Integer) newKey;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table IMAGE_GALLERY
     *
     * @mbggenerated Mon May 14 23:58:28 ART 2012
     */
    public Integer insertImageGallerySelective(ImageGallery record) throws SQLException {
        Object newKey = sqlMapClient.insert("IMAGE_GALLERY.insertSelective", record);
        return (Integer) newKey;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table IMAGE_GALLERY
     *
     * @mbggenerated Mon May 14 23:58:28 ART 2012
     */
    @SuppressWarnings("unchecked")
    public List<ImageGallery> selectImageGalleryByExample(ImageGalleryExample example) throws SQLException {
        List<ImageGallery> list = sqlMapClient.queryForList("IMAGE_GALLERY.selectByExample", example);
        return list;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table IMAGE_GALLERY
     *
     * @mbggenerated Mon May 14 23:58:28 ART 2012
     */
    public ImageGallery selectImageGalleryByPrimaryKey(Integer id) throws SQLException {
        ImageGallery _key = new ImageGallery();
        _key.setId(id);
        ImageGallery record = (ImageGallery) sqlMapClient.queryForObject("IMAGE_GALLERY.selectByPrimaryKey", _key);
        return record;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table IMAGE_GALLERY
     *
     * @mbggenerated Mon May 14 23:58:28 ART 2012
     */
    public int updateImageGalleryByExampleSelective(ImageGallery record, ImageGalleryExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = sqlMapClient.update("IMAGE_GALLERY.updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table IMAGE_GALLERY
     *
     * @mbggenerated Mon May 14 23:58:28 ART 2012
     */
    public int updateImageGalleryByExample(ImageGallery record, ImageGalleryExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = sqlMapClient.update("IMAGE_GALLERY.updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table IMAGE_GALLERY
     *
     * @mbggenerated Mon May 14 23:58:28 ART 2012
     */
    public int updateImageGalleryByPrimaryKeySelective(ImageGallery record) throws SQLException {
        int rows = sqlMapClient.update("IMAGE_GALLERY.updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table IMAGE_GALLERY
     *
     * @mbggenerated Mon May 14 23:58:28 ART 2012
     */
    public int updateImageGalleryByPrimaryKey(ImageGallery record) throws SQLException {
        int rows = sqlMapClient.update("IMAGE_GALLERY.updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table IMAGE_GALLERY
     *
     * @mbggenerated Mon May 14 23:58:28 ART 2012
     */
    protected static class UpdateByExampleParms extends ImageGalleryExample {
        private Object record;

        public UpdateByExampleParms(Object record, ImageGalleryExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
}